
1
00:00:07,007 --> 00:00:15,582
(音楽)

2
00:00:22,523 --> 00:00:27,060
(拍手)

3
00:00:27,160 --> 00:00:28,529
こんにちは

4
00:00:28,962 --> 00:00:32,266
AR Quick Lookの
統合性について

5
00:00:32,366 --> 00:00:36,403
私デビッド･ルイが
紹介します

6
00:00:36,503 --> 00:00:38,572
Keynote編で
紹介したように

7
00:00:38,672 --> 00:00:40,574
新しい機能として

8
00:00:40,674 --> 00:00:45,012
3DモデルのARでの
プレビューが可能になります

9
00:00:45,312 --> 00:00:49,449
オブジェクトが
現実の世界に現れるのです

10
00:00:49,550 --> 00:00:52,619
居間に置く新しいソファから

11
00:00:52,719 --> 00:00:56,190
本に出てくる
かわいいキャラクターまで

12
00:00:56,857 --> 00:01:00,594
ARコンテンツを含む
あらゆるアプリケーションを

13
00:00:56,857 --> 00:01:00,594
ARコンテンツを含む
あらゆるアプリケーションを

14
00:01:00,694 --> 00:01:02,996
補強するのが
AR Quick Lookです

15
00:01:03,096 --> 00:01:08,502
ARシーンでのプレビューが
より簡単に可能になるのです

16
00:01:09,870 --> 00:01:14,107
このセッションでは
AR Quick Lookとは何か

17
00:01:14,274 --> 00:01:18,745
アプリケーションや
ウェブ上での活用法

18
00:01:18,912 --> 00:01:21,648
コンテンツの作り方を
解説します

19
00:01:22,883 --> 00:01:24,218
では始めましょう

20
00:01:25,519 --> 00:01:28,789
ファイルAppで開きます

21
00:01:28,922 --> 00:01:32,826
3Dモデルの水差しを
ARシーンに取り込みます

22
00:01:33,160 --> 00:01:36,597
テーブルの上に置きましょう

23
00:01:37,097 --> 00:01:39,433
実寸サイズの水差しが

24
00:01:39,533 --> 00:01:43,203
目の前の環境に
どうなじむか分かります

25
00:01:43,470 --> 00:01:47,908
マグカップや付せん
ケトルと並ぶと

26
00:01:48,308 --> 00:01:51,144
まるで実物のようですね

27
00:01:51,345 --> 00:01:54,781
しかも 色とりどりの
付せんが

28
00:01:54,882 --> 00:01:57,417
下の部分に映り込んでいます

29
00:01:57,818 --> 00:02:00,821
実際にそこに
あるかのようです

30
00:01:57,818 --> 00:02:00,821
実際にそこに
あるかのようです

31
00:02:01,455 --> 00:02:05,325
バーチャルな水差しが
現実と融合しています

32
00:02:07,361 --> 00:02:11,198
これを実現するのが
AR Quick Lookです

33
00:02:11,398 --> 00:02:14,735
3Dコンテンツを
ARでプレビューできます

34
00:02:15,102 --> 00:02:19,039
AR Quick Lookは
OSに組み込まれており

35
00:02:19,139 --> 00:02:22,709
どんなアプリケーションや
サイトにも対応します

36
00:02:23,911 --> 00:02:28,382
Quick Lookの技術を基本とし

37
00:02:28,482 --> 00:02:33,187
ARに対応するため
機能を拡充させました

38
00:02:34,087 --> 00:02:37,624
AR機能が使えるのは
iOS 12の

39
00:02:37,724 --> 00:02:39,960
ARKit対応デバイスです

40
00:02:40,194 --> 00:02:43,664
非対応デバイスでは
オブジェクトモードのみです

41
00:02:44,665 --> 00:02:47,868
このARファイルの
新しいアイコンは

42
00:02:48,135 --> 00:02:51,872
新たに導入した
USDZフォーマットです

43
00:02:52,172 --> 00:02:55,876
では Quick Lookの
3Dコンテンツを

44
00:02:55,976 --> 00:02:58,145
実際に見てみましょう

45
00:02:58,412 --> 00:03:01,448
AR Quick Lookを開きます

46
00:02:58,412 --> 00:03:01,448
AR Quick Lookを開きます

47
00:03:01,849 --> 00:03:04,651
AR Quick Lookの機能は

48
00:03:04,751 --> 00:03:08,088
平面検出
オブジェクトの配置

49
00:03:08,455 --> 00:03:12,092
ジェスチャ操作
影の生成です

50
00:03:12,426 --> 00:03:15,596
これらは3Dモデルの
レンダリングと同じく

51
00:03:15,696 --> 00:03:20,100
没入感を提供する要素の
一部に過ぎません

52
00:03:21,869 --> 00:03:27,207
AR Quick Lookは
プレビューのための機能です

53
00:03:27,474 --> 00:03:32,746
自分で3Dプレビューを
作る必要はありません

54
00:03:32,846 --> 00:03:34,681
誰にでも見られます

55
00:03:35,115 --> 00:03:39,419
アプリケーションや
サイトへの導入も簡単です

56
00:03:39,520 --> 00:03:42,155
Quick Lookに
対応していれば

57
00:03:42,256 --> 00:03:45,392
USDZファイルを
埋め込むだけです

58
00:03:46,560 --> 00:03:50,697
面倒なARコンテンツの
供給や作成は

59
00:03:50,797 --> 00:03:54,268
AR Quick Look が
すべてやってくれます

60
00:03:54,601 --> 00:03:58,338
3Dコンテンツさえ用意すれば

61
00:03:58,672 --> 00:04:01,942
簡単にAR体験ができるのです

62
00:03:58,672 --> 00:04:01,942
簡単にAR体験ができるのです

63
00:04:02,042 --> 00:04:04,845
専門的な知識は
必要ありません

64
00:04:06,180 --> 00:04:09,216
ウェブ上での活用法を
見てみましょう

65
00:04:11,518 --> 00:04:16,523
(拍手)

66
00:04:16,623 --> 00:04:20,894
3Dオブジェクトが
いくつか保存されています

67
00:04:21,195 --> 00:04:25,465
サムネールの右上に
表示されているのが

68
00:04:25,566 --> 00:04:27,134
ARバッジです

69
00:04:27,234 --> 00:04:29,970
AR体験が可能な目印です

70
00:04:30,304 --> 00:04:33,941
この中から私が
最も気に入っている―

71
00:04:34,041 --> 00:04:37,277
紫色のコイツを選びます

72
00:04:37,911 --> 00:04:40,113
バグ追跡ソフト―

73
00:04:40,214 --> 00:04:44,017
Radarのマスコット
ツチブタです

74
00:04:44,284 --> 00:04:49,389
Quick Lookで
ツチブタを表示すると

75
00:04:49,723 --> 00:04:54,394
オブジェクトモードで
プレビューできます

76
00:04:55,295 --> 00:04:59,466
向きを変えて
あらゆる角度から見られます

77
00:04:59,733 --> 00:05:01,602
サイズを変えて

78
00:04:59,733 --> 00:05:01,602
サイズを変えて

79
00:05:01,702 --> 00:05:05,973
ディテールまで
確認することも可能です

80
00:05:06,807 --> 00:05:10,577
細かい動きも
よく分かりますね

81
00:05:10,677 --> 00:05:14,715
AR Quick Lookは
アニメーションにも対応し

82
00:05:14,815 --> 00:05:18,952
ツチブタも生き生きと
個性を発揮します

83
00:05:20,087 --> 00:05:25,058
ダブルタップで
位置もサイズも元に戻ります

84
00:05:25,659 --> 00:05:30,397
この紫色のツチブタを
現実の世界に取り込むには

85
00:05:30,497 --> 00:05:31,698
ARタブをタップ

86
00:05:34,468 --> 00:05:37,371
目の前に
ツチブタが現れました

87
00:05:37,804 --> 00:05:42,943
簡単にモデルが
現実に取り込まれました

88
00:05:43,043 --> 00:05:46,980
このセッションが
始まった瞬間―

89
00:05:47,080 --> 00:05:52,085
AR Quick Lookが
環境を認識したのです

90
00:05:53,053 --> 00:05:57,925
没入感を得るため
コントロールは見えません

91
00:05:58,025 --> 00:06:01,595
ステータスバーも
コントロールセンターも

92
00:05:58,025 --> 00:06:01,595
ステータスバーも
コントロールセンターも

93
00:06:01,695 --> 00:06:03,864
iPhone Xでは
ホームボタンもです

94
00:06:04,698 --> 00:06:09,803
通常のiOSのジェスチャで
オブジェクトを回転させます

95
00:06:10,204 --> 00:06:12,840
２本指でピンチして小さく

96
00:06:13,273 --> 00:06:15,809
大きくすることもできます

97
00:06:16,176 --> 00:06:20,080
バグを見つけては
飲み込む様子が

98
00:06:20,314 --> 00:06:22,416
よく分かりますね

99
00:06:23,250 --> 00:06:26,587
ダブルタップで
元のサイズに戻します

100
00:06:27,387 --> 00:06:32,960
タップしてドラッグすれば
位置も変えられます

101
00:06:34,161 --> 00:06:38,165
自由に動かすことも可能です

102
00:06:38,265 --> 00:06:40,534
滑らかに動きますね

103
00:06:40,968 --> 00:06:45,439
違う角度からも
見てみましょう

104
00:06:46,907 --> 00:06:53,080
モデルが現実の世界に
飛び出てきたかのようです

105
00:06:55,782 --> 00:06:58,519
影も生成されています

106
00:06:58,619 --> 00:07:01,255
こうして端から見ると

107
00:06:58,619 --> 00:07:01,255
こうして端から見ると

108
00:07:01,355 --> 00:07:05,926
目の前のテーブルに
載っているように見えます

109
00:07:06,994 --> 00:07:09,763
これほどリアルに見えるのは

110
00:07:09,863 --> 00:07:14,201
ARKitが認識した
現実の色彩強度や色温度を

111
00:07:14,301 --> 00:07:16,470
反映させているからです

112
00:07:18,005 --> 00:07:21,341
この瞬間を記録したければ

113
00:07:21,441 --> 00:07:24,011
タップして
コントロールを表示

114
00:07:24,745 --> 00:07:26,346
スクリーンショットを
撮ります

115
00:07:28,115 --> 00:07:31,185
マークアップしましょう

116
00:07:35,956 --> 00:07:38,959
保存して
いつでも見られます

117
00:07:42,763 --> 00:07:48,101
AR Quick Lookを使えば
すべての人にとって

118
00:07:48,202 --> 00:07:49,903
ARが身近になります

119
00:07:50,003 --> 00:07:52,139
アクセシビリティは
私たちの基本理念です

120
00:07:52,239 --> 00:07:55,976
スイッチコントロールや
VoiceOverでも操作可能

121
00:07:56,076 --> 00:07:58,245
VoiceOverを
使ってみましょう

122
00:07:58,545 --> 00:08:01,148
ホームボタンを
３回クリックします

123
00:07:58,545 --> 00:08:01,148
ホームボタンを
３回クリックします

124
00:08:02,583 --> 00:08:05,853
VoiceOverを起動しました
ファイル 閉じる…

125
00:08:05,953 --> 00:08:08,021
ARタブに進みます

126
00:08:08,121 --> 00:08:09,623
ホームボタンは右へ

127
00:08:10,424 --> 00:08:11,959
ARボタン

128
00:08:13,560 --> 00:08:17,898
ARを選択
ツチブタが現れました

129
00:08:18,699 --> 00:08:21,168
ツチブタが画面から出ると

130
00:08:21,268 --> 00:08:24,538
音声で教えてくれます

131
00:08:25,472 --> 00:08:27,641
ツチブタが画面から出ました

132
00:08:27,741 --> 00:08:29,343
再び画面に戻ると…

133
00:08:29,443 --> 00:08:31,645
ツチブタが画面に入りました

134
00:08:31,979 --> 00:08:35,682
AR Quick Lookを
採用することによって

135
00:08:36,183 --> 00:08:40,287
完全なアクセシビリティを
実現することを

136
00:08:40,520 --> 00:08:45,125
デベロッパやユーザに
推奨したいと思います

137
00:08:47,461 --> 00:08:49,763
(拍手)

138
00:08:49,863 --> 00:08:53,867
ここまではAR Quick Lookと
ファイルAppの統合でした

139
00:08:54,034 --> 00:08:58,705
しかし これはビューアの
１つに過ぎません

140
00:08:59,039 --> 00:09:03,043
AR Quick Lookは
メールやメッセージ―

141
00:08:59,039 --> 00:09:03,043
AR Quick Lookは
メールやメッセージ―

142
00:09:03,544 --> 00:09:07,214
メモやNEWS
Safariでも使えます

143
00:09:07,815 --> 00:09:11,652
AR Quick Lookは
Safari自体に組み込まれ

144
00:09:11,752 --> 00:09:14,755
デベロッパは
HTMLマークアップによって

145
00:09:14,855 --> 00:09:18,492
ウェブサイトに
統合することも可能です

146
00:09:19,026 --> 00:09:22,629
iOSアプリケーションに
ビューアを採用すれば

147
00:09:22,729 --> 00:09:25,499
さらなるAR体験を
提供できます

148
00:09:27,868 --> 00:09:30,604
3Dモデルを共有するには―

149
00:09:30,704 --> 00:09:34,474
ファイルフォーマットを
統一する必要があります

150
00:09:34,608 --> 00:09:38,278
そこで私たちは
USDZを導入しました

151
00:09:38,378 --> 00:09:42,549
モバイル配信用の
新しいフォーマットです

152
00:09:42,950 --> 00:09:47,221
モデルやテクスチャを
パッケージ化したうえで

153
00:09:47,321 --> 00:09:52,693
参照ファイルを扱うことなく
効率的に配信できます

154
00:09:53,026 --> 00:09:58,031
ベースはPixar社のオープンソース

155
00:09:58,198 --> 00:10:00,200
USDフォーマットです

156
00:09:58,198 --> 00:10:00,200
USDフォーマットです

157
00:10:00,901 --> 00:10:04,705
USDZのサポートは
iOS macOS SceneKit

158
00:10:04,838 --> 00:10:06,974
Model I/Oに提供されます

159
00:10:07,674 --> 00:10:12,813
後ほど Xcode 10に
搭載されたツールを使って

160
00:10:12,913 --> 00:10:17,384
3DオブジェクトをUSDZに
変換する方法を紹介します

161
00:10:19,153 --> 00:10:23,490
続いてビューアを
統合する方法です

162
00:10:24,958 --> 00:10:27,961
２つの手段があります

163
00:10:28,061 --> 00:10:30,197
１つはアプリケーション

164
00:10:30,531 --> 00:10:34,868
多くの写真やテキストを扱う
アプリケーションでは

165
00:10:34,968 --> 00:10:38,172
さらに没入感が増すでしょう

166
00:10:38,272 --> 00:10:42,242
Quick Look APIを使えば
簡単に統合し

167
00:10:42,342 --> 00:10:45,512
USDZファイルを
ロードできます

168
00:10:46,280 --> 00:10:48,982
２つ目はSafariの
ウェブサイトです

169
00:10:49,349 --> 00:10:54,288
ニュース記事や
製品ページに統合すれば

170
00:10:54,388 --> 00:10:56,823
閲覧やショッピングが
変わります

171
00:10:56,924 --> 00:10:59,660
新しい視覚情報が加わり

172
00:10:59,760 --> 00:11:02,830
より理解が深まるはずです

173
00:10:59,760 --> 00:11:02,830
より理解が深まるはずです

174
00:11:02,930 --> 00:11:08,535
HTMLを使えばウェブ上でも
ARコンテンツを見られます

175
00:11:09,469 --> 00:11:15,242
まずはQuick Look APIの
機能を見てみましょう

176
00:11:16,343 --> 00:11:19,913
Quick Lookについて
簡単に説明します

177
00:11:20,147 --> 00:11:22,416
Quick Lookは
プレビュー機能です

178
00:11:22,516 --> 00:11:25,752
Keynote PDFや画像

179
00:11:25,853 --> 00:11:28,288
3Dモデルを
プレビューできます

180
00:11:28,889 --> 00:11:33,794
Quick Lookはドキュメントを
プレビューするだけでなく

181
00:11:33,894 --> 00:11:39,099
選択したファイル形式での
カスタムプレビューも可能です

182
00:11:39,800 --> 00:11:42,536
必要なものが揃っています

183
00:11:43,303 --> 00:11:47,307
トランジションや
表示モードも変えられます

184
00:11:47,407 --> 00:11:51,411
インラインへの埋め込みや
プッシュ通知機能の組み込み

185
00:11:51,512 --> 00:11:53,447
モーダルプレゼンテーション

186
00:11:54,314 --> 00:11:57,151
セキュリティも万全です

187
00:11:57,251 --> 00:12:02,222
USDZファイルを
安全に読み込み表示します

188
00:11:57,251 --> 00:12:02,222
USDZファイルを
安全に読み込み表示します

189
00:12:02,923 --> 00:12:06,326
Quick Lookと
プレビューについては―

190
00:12:06,460 --> 00:12:11,732
専用のセッションがあるので
ぜひ受講してみてください

191
00:12:13,300 --> 00:12:16,370
プレビューを
作ってみましょう

192
00:12:16,904 --> 00:12:19,072
こちらが私の
ViewControllerです

193
00:12:19,540 --> 00:12:22,342
グリッドがいくつかあります

194
00:12:22,442 --> 00:12:24,211
サムネールをタップすると

195
00:12:24,311 --> 00:12:27,281
3Dモデルが
表示されるようにします

196
00:12:27,548 --> 00:12:31,552
QLPreviewControllerを
作成します

197
00:12:31,685 --> 00:12:35,389
ドキュメントのプレビューは
ViewControllerで可能です

198
00:12:35,823 --> 00:12:38,992
私自身をデータソースと
デリゲートに設定します

199
00:12:39,092 --> 00:12:41,895
何をプレビューするか
尋ねてくるので

200
00:12:42,529 --> 00:12:45,632
QLPreviewControllerに
伝えます

201
00:12:46,066 --> 00:12:51,104
すぐには表示されず
いくつか質問をされます

202
00:12:51,305 --> 00:12:55,142
まず いくつのアイテムを
プレビューしたいのか

203
00:12:55,242 --> 00:12:58,612
USDZファイルでは
答えは１つです

204
00:12:59,346 --> 00:13:03,817
続いて最初にプレビューする
アイテムのURLです

205
00:12:59,346 --> 00:13:03,817
続いて最初にプレビューする
アイテムのURLです

206
00:13:04,117 --> 00:13:09,456
タップしたモデルの
ファイルURLを答えます

207
00:13:10,090 --> 00:13:13,494
最後にプレビューを
表示する際に

208
00:13:13,594 --> 00:13:16,697
使用するソースビューを
聞かれます

209
00:13:16,897 --> 00:13:22,603
タップからプレビューまで
シームレスな動きを望むので

210
00:13:22,703 --> 00:13:24,805
３つ目のビューを選びます

211
00:13:25,506 --> 00:13:29,409
すべての設定が済んだら
準備完了です

212
00:13:29,877 --> 00:13:33,080
タップしたオブジェクトが
拡大されます

213
00:13:34,781 --> 00:13:36,350
こちらがコードです

214
00:13:36,617 --> 00:13:38,919
ドキュメントを
プレビューするには

215
00:13:39,019 --> 00:13:41,855
QLPreviewControllerの
インスタンス化が必要です

216
00:13:41,955 --> 00:13:43,790
Quick Lookフレームワークの
一部です

217
00:13:43,891 --> 00:13:47,895
データソースと
デリゲートを指定し

218
00:13:48,428 --> 00:13:51,665
最後にモーダルにします

219
00:13:52,299 --> 00:13:53,667
非常にシンプルです

220
00:13:53,767 --> 00:13:56,503
プロトコルを見てみましょう

221
00:13:58,305 --> 00:14:00,607
QLPreviewController
DataSourceに

222
00:13:58,305 --> 00:14:00,607
QLPreviewController
DataSourceに

223
00:14:00,707 --> 00:14:03,911
準拠する必要があります

224
00:14:04,011 --> 00:14:07,014
このプロトコルには
QLPreviewControllerの

225
00:14:07,114 --> 00:14:09,817
２つの必須の関数が
あります

226
00:14:10,184 --> 00:14:13,720
１つは表示する
アイテムの数です

227
00:14:13,921 --> 00:14:18,492
ここに表示する
アイテムの数を入れます

228
00:14:19,059 --> 00:14:21,195
AR Quick Lookで
表示できるのは

229
00:14:21,295 --> 00:14:23,864
１度に１つの
オブジェクトだけです

230
00:14:23,964 --> 00:14:25,833
答えは１となります

231
00:14:26,833 --> 00:14:30,437
QLPreviewControllerの
２つ目の必須の関数は

232
00:14:30,537 --> 00:14:32,773
previewItemAt indexです

233
00:14:32,873 --> 00:14:36,477
どのアイテムを
表示するか指定します

234
00:14:37,110 --> 00:14:40,647
3DオブジェクトのURLです

235
00:14:41,582 --> 00:14:45,285
多くの人にとっては
見慣れたコードでしょう

236
00:14:45,452 --> 00:14:51,158
Table ViewのようなUIKitと
よく似たパターンです

237
00:14:52,893 --> 00:14:56,930
では デリゲートの
プロトコルを見てみましょう

238
00:14:57,497 --> 00:15:00,767
AR Quick Lookは
全画面表示が基本です

239
00:14:57,497 --> 00:15:00,767
AR Quick Lookは
全画面表示が基本です

240
00:15:01,268 --> 00:15:03,937
同じように表示するには

241
00:15:04,037 --> 00:15:07,007
QLPreviewControllerの
ズーム設定も

242
00:15:07,107 --> 00:15:09,776
同じ動きにすべきでしょう

243
00:15:09,877 --> 00:15:14,481
ファイルAppのサムネールが
このように表示され

244
00:15:15,883 --> 00:15:18,418
閉じると元に戻ります

245
00:15:19,786 --> 00:15:24,391
この効果を実現する
簡単で推奨されるコードは

246
00:15:24,491 --> 00:15:29,930
“previewController(  controller”
“transitionViewFor item”

247
00:15:30,330 --> 00:15:33,333
面倒な処理は必要ありません

248
00:15:33,433 --> 00:15:38,005
Quick Lookが
アニメ開始時と終了時の―

249
00:15:38,105 --> 00:15:41,742
長方形のフレームを
推測します

250
00:15:42,176 --> 00:15:46,880
UIViewの設定を
正方形にすると

251
00:15:47,114 --> 00:15:49,483
動きがシームレスになります

252
00:15:49,817 --> 00:15:53,187
正方形のアイコンと
全画面表示を

253
00:15:53,287 --> 00:15:55,789
滑らかに切り替えます

254
00:15:55,889 --> 00:16:00,427
3Dモデルが
魔法のように現れるのです

255
00:15:55,889 --> 00:16:00,427
3Dモデルが
魔法のように現れるのです

256
00:16:01,128 --> 00:16:03,397
さらに質を高めるなら

257
00:16:03,630 --> 00:16:07,201
UIButtonを
ビューとして使用し

258
00:16:07,534 --> 00:16:10,504
サムネールを
イメージ画像にします

259
00:16:10,838 --> 00:16:15,676
タップするとボタンが
ハイライト表示されるので

260
00:16:15,776 --> 00:16:20,781
何かが起こることが
ユーザにも分かります

261
00:16:23,083 --> 00:16:26,887
以上がアプリケーションと
AR Quick Lookの統合です

262
00:16:27,054 --> 00:16:31,792
ARプレビューなどの導入は
もう難しくありません

263
00:16:34,595 --> 00:16:37,664
続いてはウェブとの統合です

264
00:16:38,031 --> 00:16:41,935
オンラインでのアクセスを
可能にしました

265
00:16:42,703 --> 00:16:44,404
iOS 12では

266
00:16:44,505 --> 00:16:49,243
USDZファイルを
Safariでプレビューできます

267
00:16:49,843 --> 00:16:52,112
サイトに埋め込めば

268
00:16:52,212 --> 00:16:55,482
3Dオブジェクトの
プレビューを提供できます

269
00:16:55,582 --> 00:16:59,019
文章や写真での説明に加えて

270
00:16:59,119 --> 00:17:02,389
体感することができるのです

271
00:16:59,119 --> 00:17:02,389
体感することができるのです

272
00:17:03,323 --> 00:17:06,393
こちらは園芸の
オンラインストアです

273
00:17:06,492 --> 00:17:09,829
ガーデニング用品の
サムネールを貼りました

274
00:17:10,531 --> 00:17:12,866
ウェブとARを統合するには

275
00:17:12,965 --> 00:17:16,270
HTMLマークアップを
使用します

276
00:17:16,537 --> 00:17:21,974
顧客は商品をよく確かめて
購入することができます

277
00:17:23,143 --> 00:17:26,512
マークアップを使うと
画像の右上に

278
00:17:26,613 --> 00:17:29,016
バッジが表示されます

279
00:17:29,283 --> 00:17:32,920
ARで商品を
プレビューできることが

280
00:17:33,020 --> 00:17:35,622
バッジを見れば分かります

281
00:17:38,125 --> 00:17:41,261
どんな画像でも構いません

282
00:17:41,361 --> 00:17:46,233
縦長のショットでも
ヒーローっぽい画像でも

283
00:17:46,900 --> 00:17:49,837
ドラッグ＆ドロップも
可能です

284
00:17:52,406 --> 00:17:56,143
長押しで
リーディングリストに追加

285
00:17:56,243 --> 00:17:59,246
コピーや共有もできます

286
00:18:02,182 --> 00:18:06,386
何よりAR Quick Lookに
最適なワークフローが

287
00:18:06,487 --> 00:18:08,021
即座に得られます

288
00:18:08,188 --> 00:18:13,760
リンク先への移動も
再読み込みも必要ありません

289
00:18:16,296 --> 00:18:20,033
HTMLマークアップは
たったこれだけです

290
00:18:20,734 --> 00:18:25,505
この属性を追加するだけで
AR体験を提供できます

291
00:18:25,839 --> 00:18:29,076
rel属性にarを設定し

292
00:18:29,176 --> 00:18:32,212
WebKitにARだと
認識させます

293
00:18:32,746 --> 00:18:36,917
続いてUSDZファイルの
場所を指定します

294
00:18:38,252 --> 00:18:42,356
最後に子要素として
img要素を設定

295
00:18:42,456 --> 00:18:46,193
3Dモデルの
サムネールに選んだ―

296
00:18:46,293 --> 00:18:48,729
先ほどの画像です

297
00:18:49,630 --> 00:18:51,665
バッジが表示され

298
00:18:51,765 --> 00:18:55,802
ARでのプレビューを
可能にします

299
00:18:57,938 --> 00:19:00,407
picture要素も使用できます

300
00:18:57,938 --> 00:19:00,407
picture要素も使用できます

301
00:19:00,507 --> 00:19:04,411
img要素と同じく
“a”のタグの中は

302
00:19:04,511 --> 00:19:06,780
“a rel=“ar””です

303
00:19:07,181 --> 00:19:10,350
あらゆる子要素が含まれます

304
00:19:10,450 --> 00:19:15,089
デバイスやサイズなどの
ロジックに基づいて

305
00:19:15,189 --> 00:19:21,228
レンダリングするための複雑な
ルールを有することも可能です

306
00:19:23,263 --> 00:19:26,967
MIMEタイプの設定も
USDZファイルに

307
00:19:27,067 --> 00:19:30,270
合わせるのを
忘れないでください

308
00:19:30,804 --> 00:19:33,640
現在 規格の統一を
進めています

309
00:19:33,740 --> 00:19:37,711
一方 WebKitは
Apacheで使われる両方の―

310
00:19:38,612 --> 00:19:40,547
メディアタイプに影響します

311
00:19:42,816 --> 00:19:44,751
AR Quick Lookの統合で

312
00:19:44,852 --> 00:19:48,088
Safariの
ウェブサイト上だけでなく

313
00:19:48,188 --> 00:19:52,259
iOSでどこでも
AR体験が可能になります

314
00:19:52,726 --> 00:19:56,830
では USDZコンテンツは
どこで手に入るのでしょう

315
00:19:57,364 --> 00:20:01,735
デイブがコンテンツの
作成法を教えてくれます

316
00:19:57,364 --> 00:20:01,735
デイブがコンテンツの
作成法を教えてくれます

317
00:20:02,102 --> 00:20:07,441
(拍手)

318
00:20:07,541 --> 00:20:08,442
ありがとう

319
00:20:09,209 --> 00:20:13,547
まず 3Dモデルで
何ができるでしょうか

320
00:20:14,381 --> 00:20:18,018
ここにティーポットの
3Dモデルがあります

321
00:20:18,318 --> 00:20:22,356
影があるのを見ると
底は面に接しています

322
00:20:22,723 --> 00:20:26,059
中心を軸に回転もします

323
00:20:26,527 --> 00:20:31,598
現実の世界に置くと
目の前にあるかのようです

324
00:20:31,698 --> 00:20:35,536
金属部に周囲の様子が
映り込んでいます

325
00:20:36,703 --> 00:20:39,506
どうやって作ったのでしょう

326
00:20:40,407 --> 00:20:44,011
大事なポイントは６つです

327
00:20:44,111 --> 00:20:46,980
１つずつ見ていきましょう

328
00:20:47,681 --> 00:20:49,483
まずは配置

329
00:20:50,117 --> 00:20:53,854
ARにおける正確なサイズ

330
00:20:54,288 --> 00:20:57,224
アニメーションの設定

331
00:20:57,591 --> 00:21:01,195
影の生成　見た目の調整

332
00:20:57,591 --> 00:21:01,195
影の生成　見た目の調整

333
00:21:01,295 --> 00:21:03,931
それから透過性です

334
00:21:04,198 --> 00:21:06,099
この６つを押さえれば

335
00:21:06,200 --> 00:21:09,970
AR Quick Lookに適した
モデルができます

336
00:21:11,338 --> 00:21:14,808
モデルを正しく
表示するには

337
00:21:14,908 --> 00:21:18,212
３つの条件を
整える必要があります

338
00:21:19,213 --> 00:21:23,450
まず Z軸方向に
正面を向かせます

339
00:21:24,284 --> 00:21:29,656
続いて接地面を
Y軸方向の０とします

340
00:21:30,357 --> 00:21:34,061
最後に回転軸を原点とします

341
00:21:34,928 --> 00:21:37,231
サンプルを見てみましょう

342
00:21:37,498 --> 00:21:39,867
3Dモデルの作成ソフトです

343
00:21:39,967 --> 00:21:41,902
中央を原点とします

344
00:21:42,236 --> 00:21:44,771
X軸は横方向

345
00:21:44,938 --> 00:21:49,476
Y軸が上方向で
Z軸は正面方向です

346
00:21:50,844 --> 00:21:55,115
何の設定もせず
ティーポットを置くと

347
00:21:55,215 --> 00:21:57,384
すぐに問題に気づきます

348
00:21:57,784 --> 00:21:59,920
接地面より下にあります

349
00:22:00,487 --> 00:22:04,658
横から見ると原点が
全体の中心にあります

350
00:22:05,092 --> 00:22:09,596
底をy＝０の位置まで
持ち上げましょう

351
00:22:09,696 --> 00:22:12,466
これで地面に置かれました

352
00:22:13,967 --> 00:22:18,539
正面から見ると
もっと改善できそうです

353
00:22:18,639 --> 00:22:22,743
もっとティーポットらしく
見せたいですね

354
00:22:23,544 --> 00:22:26,947
横に注ぎ口がある
この形が理想です

355
00:22:28,048 --> 00:22:31,518
オブジェクトの向きを
考える時には

356
00:22:31,652 --> 00:22:35,923
陳列棚などに置いた状態を
想定しましょう

357
00:22:36,757 --> 00:22:40,794
子供に絵を
描かせるのも一案です

358
00:22:41,261 --> 00:22:44,131
誰にとっても分かりやすい
向きを選ぶからです

359
00:22:45,532 --> 00:22:47,434
見た目は重要です

360
00:22:47,901 --> 00:22:51,905
最初に目にする
オブジェクトでもあり

361
00:22:52,072 --> 00:22:55,075
サムネールとしても使います

362
00:22:55,175 --> 00:22:58,946
この２つをぴったりと
一致させておくことで

363
00:22:59,046 --> 00:23:01,315
トランジションがスムーズに

364
00:22:59,046 --> 00:23:01,315
トランジションがスムーズに

365
00:23:01,849 --> 00:23:04,184
よい側面を選びましょう

366
00:23:05,919 --> 00:23:10,691
モデルを回転させて
注ぎ口を横にします

367
00:23:11,592 --> 00:23:14,361
エクスポートする前に
もう１つ

368
00:23:14,461 --> 00:23:18,532
回転軸となる原点が
中心にあるかどうか

369
00:23:18,632 --> 00:23:20,500
上から確認します

370
00:23:22,803 --> 00:23:26,707
続いて物理的なサイズを
設定します

371
00:23:27,274 --> 00:23:31,078
蓄音機の場合
サイズは特に重要です

372
00:23:31,211 --> 00:23:36,150
12インチのレコードが
再生できないといけません

373
00:23:37,551 --> 00:23:41,088
AR Quick Lookで
見てみましょう

374
00:23:41,188 --> 00:23:44,458
オブジェクトモードでは
何も問題ありません

375
00:23:44,858 --> 00:23:49,763
しかし 現実の世界で
レコードの隣に置くと

376
00:23:49,863 --> 00:23:51,365
小さすぎますね

377
00:23:51,465 --> 00:23:55,002
６インチのレコードしか
載りません

378
00:23:56,503 --> 00:23:59,106
そこで3Dソフトに戻り

379
00:23:59,206 --> 00:24:02,009
12インチの円柱を作ります

380
00:23:59,206 --> 00:24:02,009
12インチの円柱を作ります

381
00:24:02,276 --> 00:24:07,881
直径12インチの円柱を
正確に描き出しました

382
00:24:08,816 --> 00:24:12,286
これを参照して
サイズを変更し

383
00:24:12,386 --> 00:24:16,590
12インチのレコードを
かけられるようにします

384
00:24:17,624 --> 00:24:22,229
オブジェクトモードでは
画面にサイズを合わせるので

385
00:24:22,329 --> 00:24:24,131
先ほどと変わりません

386
00:24:24,398 --> 00:24:29,436
しかし 現実の世界に置くと
正しいサイズになっています

387
00:24:29,536 --> 00:24:32,639
12インチのレコードも
載せられます

388
00:24:34,308 --> 00:24:38,512
実寸がない
オブジェクトもあります

389
00:24:38,979 --> 00:24:42,483
このチャターボックスは
実在しません

390
00:24:42,583 --> 00:24:44,551
想像上の存在です

391
00:24:45,018 --> 00:24:49,223
ですが 一緒に
写真を撮りたいですね

392
00:24:49,690 --> 00:24:52,192
そこで卓上サイズにし

393
00:24:52,292 --> 00:24:55,429
現実の世界に
配置しやすくします

394
00:24:55,829 --> 00:24:58,766
小さくすることも可能です

395
00:24:58,866 --> 00:25:03,303
好きなサイズにして
動かすこともできます

396
00:24:58,866 --> 00:25:03,303
好きなサイズにして
動かすこともできます

397
00:25:03,837 --> 00:25:07,674
卓上サイズなら
どこにでも置けます

398
00:25:10,210 --> 00:25:13,046
チャターボックスは
アニメーションです

399
00:25:13,313 --> 00:25:17,017
オブジェクトが
生き生きして見えるように

400
00:25:17,117 --> 00:25:20,254
環境を選んで
使うことを勧めます

401
00:25:21,655 --> 00:25:23,957
アニメーションは
常にループします

402
00:25:24,591 --> 00:25:29,863
ボーンや変形のアニメーションで
命を吹き込めます

403
00:25:30,998 --> 00:25:35,169
こちらはアニメーションを
使用していないニワトリです

404
00:25:36,470 --> 00:25:40,607
現実の世界においても
面白みに欠けます

405
00:25:40,707 --> 00:25:43,744
生きているようには
見えません

406
00:25:44,144 --> 00:25:45,679
手を加えましょう

407
00:25:46,980 --> 00:25:51,618
ボーンアニメーションで
頭を動かします

408
00:25:52,352 --> 00:25:57,825
現実の世界に置くと
はるかにリアルに見えます

409
00:25:59,927 --> 00:26:02,563
いくつかコツがあります

410
00:25:59,927 --> 00:26:02,563
いくつかコツがあります

411
00:26:03,163 --> 00:26:06,767
ARの没入感を高める
アニメーションを選び

412
00:26:06,867 --> 00:26:09,503
リアル感を出しましょう

413
00:26:10,804 --> 00:26:16,076
オブジェクトは回転させたり
動かしたりもできますが

414
00:26:16,343 --> 00:26:18,979
原点から
動かさないでください

415
00:26:19,613 --> 00:26:23,116
１メートルの円に沿って
車が走り回ると

416
00:26:23,417 --> 00:26:28,188
手を伸ばしても
なかなかつかめません

417
00:26:28,288 --> 00:26:31,792
オブジェクトも
操作しにくくなります

418
00:26:32,059 --> 00:26:34,495
オブジェクトは常に原点に

419
00:26:36,096 --> 00:26:40,701
同じ理由で境界ボックスも
作成しましょう

420
00:26:40,801 --> 00:26:44,905
指が届く範囲に
常にオブジェクトがあれば

421
00:26:45,005 --> 00:26:48,942
より簡単に
操作することが可能です

422
00:26:50,911 --> 00:26:55,249
つまり 位置を固定させた
アニメーションがお薦めです

423
00:26:55,849 --> 00:26:59,887
しかし ティラノサウルスが
歩くアニメーションの場合

424
00:26:59,987 --> 00:27:02,189
足踏みにしか見えません

425
00:26:59,987 --> 00:27:02,189
足踏みにしか見えません

426
00:27:02,289 --> 00:27:06,894
ほえたり踏み潰したりする
アニメーションを薦めます

427
00:27:08,262 --> 00:27:09,930
代案もあります

428
00:27:10,030 --> 00:27:13,901
自己完結型の
アニメーションを作って

429
00:27:14,001 --> 00:27:15,836
操作を簡単にします

430
00:27:16,036 --> 00:27:18,172
例を見てみましょう

431
00:27:18,772 --> 00:27:21,241
コイが泳いでいます

432
00:27:21,408 --> 00:27:24,211
当然 アニメーションです

433
00:27:24,378 --> 00:27:27,014
水槽をベースに作成しました

434
00:27:27,614 --> 00:27:32,486
つまり 現実の世界に置いて
動かしたとしても

435
00:27:33,053 --> 00:27:38,458
操作しているのはシーンで
コイではありません

436
00:27:39,426 --> 00:27:41,628
ベースを作成することで

437
00:27:41,728 --> 00:27:45,299
アニメーションの
境界ボックスもできるのです

438
00:27:47,401 --> 00:27:51,972
影もモデルに
命を吹き込む要素の１つです

439
00:27:52,439 --> 00:27:56,743
AR Quick Lookが
影を生成してくれます

440
00:27:57,244 --> 00:28:01,315
モードの切り替えで
オンとオフが可能です

441
00:27:57,244 --> 00:28:01,315
モードの切り替えで
オンとオフが可能です

442
00:28:01,849 --> 00:28:05,886
現実の世界で
周囲の照明が変化すると

443
00:28:06,086 --> 00:28:07,955
影にも適用されます

444
00:28:08,789 --> 00:28:13,060
なので モデルには
影をつけないでください

445
00:28:13,360 --> 00:28:15,662
影が２つになります

446
00:28:17,397 --> 00:28:20,234
アニメーションに
影をつける場合は

447
00:28:20,334 --> 00:28:22,603
最初のフレームを
基準にします

448
00:28:22,936 --> 00:28:26,507
どのフレームを
選ぶかが重要です

449
00:28:26,673 --> 00:28:27,875
例を見ましょう

450
00:28:29,142 --> 00:28:32,946
卓上タイプの
ニュートンのゆりかごです

451
00:28:33,046 --> 00:28:36,550
本物のような
アニメーションですね

452
00:28:37,217 --> 00:28:40,454
最初のフレームで
フリーズしてみます

453
00:28:40,554 --> 00:28:43,423
球が１つ はじかれています

454
00:28:43,557 --> 00:28:44,992
問題がありますね

455
00:28:45,659 --> 00:28:50,330
横にはじかれた球の影が
生成されています

456
00:28:50,998 --> 00:28:54,401
逆方向を見てみましょう

457
00:28:54,701 --> 00:28:56,904
影がおかしいですね

458
00:28:58,605 --> 00:29:02,242
最初のフレームを
選び直しましょう

459
00:28:58,605 --> 00:29:02,242
最初のフレームを
選び直しましょう

460
00:29:02,342 --> 00:29:04,778
球が中央にそろっています

461
00:29:04,878 --> 00:29:07,881
アニメーション自体は
同じですが

462
00:29:08,148 --> 00:29:13,220
最初のフレームを変えたので
影が自然になりました

463
00:29:15,956 --> 00:29:20,460
モデルにリアル感を
出す上で とても重要なのは

464
00:29:20,561 --> 00:29:22,129
見た目です

465
00:29:23,030 --> 00:29:28,368
AR Quick Lookは
PBRシェーダを使います

466
00:29:28,469 --> 00:29:32,139
モデルの
６つの要素を調整し

467
00:29:32,239 --> 00:29:34,641
よりリアルに見せます

468
00:29:35,042 --> 00:29:39,213
必要に応じてテクスチャや
イメージを加えるのです

469
00:29:40,247 --> 00:29:42,349
１つ目はアルベドです

470
00:29:42,449 --> 00:29:45,719
モデルの
基本的な色です

471
00:29:46,753 --> 00:29:50,457
２つ目は
モデルの金属性です

472
00:29:50,691 --> 00:29:53,560
金属か絶縁体かによって

473
00:29:53,660 --> 00:29:57,030
光の反射率が変わります

474
00:29:57,998 --> 00:30:02,002
マットな部分と
光沢のある部分は

475
00:29:57,998 --> 00:30:02,002
マットな部分と
光沢のある部分は

476
00:30:02,102 --> 00:30:03,804
粗さで設定します

477
00:30:04,872 --> 00:30:06,807
ノーマルマップも可能です

478
00:30:06,907 --> 00:30:11,311
モデルの表面に
奥行きを出したり

479
00:30:11,411 --> 00:30:13,547
光を拡散したりできます

480
00:30:14,648 --> 00:30:19,486
AOテクスチャで
モデルの凹凸に合わせ

481
00:30:19,586 --> 00:30:22,189
影も生成できます

482
00:30:23,023 --> 00:30:26,827
テレビ画面やモニターのように
光源になるなら

483
00:30:26,927 --> 00:30:29,730
放射光を加えましょう

484
00:30:30,898 --> 00:30:34,001
PBR初心者の方には

485
00:30:34,101 --> 00:30:39,239
詳しく解説するセッションが
予定されています

486
00:30:39,339 --> 00:30:41,008
ぜひ ご参加ください

487
00:30:42,009 --> 00:30:46,880
この６つの効果を
実際に見てみましょう

488
00:30:48,315 --> 00:30:50,417
何も手を加えていない―

489
00:30:50,584 --> 00:30:53,287
テレビのオブジェクトを
使います

490
00:30:55,289 --> 00:30:58,992
アルベドで
基本的な色を付けます

491
00:30:59,226 --> 00:31:01,728
テレビらしくなりましたが

492
00:30:59,226 --> 00:31:01,728
テレビらしくなりましたが

493
00:31:01,962 --> 00:31:04,898
平板でリアルには見えません

494
00:31:06,400 --> 00:31:09,937
次に金属性の
テクスチャを加えます

495
00:31:10,037 --> 00:31:15,442
画面の縁やアンテナに
金属的な質感が出ました

496
00:31:16,243 --> 00:31:19,513
ここでは
金属性のテクスチャが

497
00:31:19,613 --> 00:31:21,715
おおむね白黒です

498
00:31:22,916 --> 00:31:25,853
まだ金属らしくないですね

499
00:31:26,153 --> 00:31:29,923
他の部分と同じく
表面が粗いためです

500
00:31:30,023 --> 00:31:33,627
光沢部分が
どこにもありません

501
00:31:35,262 --> 00:31:38,398
粗さで修正しましょう

502
00:31:38,699 --> 00:31:41,068
リアルになりました

503
00:31:41,635 --> 00:31:46,106
画面の縁やアンテナは
クロムめっきのようです

504
00:31:46,607 --> 00:31:51,111
天板もニスを塗ったように
光沢があります

505
00:31:51,211 --> 00:31:53,580
よりテレビらしくなりました

506
00:31:54,848 --> 00:31:58,118
モデルを
リアルに見せるには

507
00:31:58,218 --> 00:32:00,921
粗さの設定が重要です

508
00:31:58,218 --> 00:32:00,921
粗さの設定が重要です

509
00:32:01,188 --> 00:32:03,757
粗さは均一ではありません

510
00:32:03,857 --> 00:32:07,961
同じ部分でも
微妙に設定を変えます

511
00:32:10,164 --> 00:32:13,967
続いてテレビの天板の
木目を中心に

512
00:32:14,068 --> 00:32:17,070
マッピングを施しましょう

513
00:32:17,404 --> 00:32:20,407
より立体的になりました

514
00:32:20,507 --> 00:32:22,109
スピーカーも同様です

515
00:32:24,011 --> 00:32:27,448
正面にはくぼみもあります

516
00:32:27,548 --> 00:32:31,885
そこで AOテクスチャで
陰影をつけます

517
00:32:32,186 --> 00:32:35,589
わずかな違いですが
奥行きが出て

518
00:32:35,689 --> 00:32:38,192
よりリアルに見えます

519
00:32:39,593 --> 00:32:44,298
テレビの画面には
放射光を加えましょう

520
00:32:44,398 --> 00:32:47,234
周囲を照らし出します

521
00:32:48,035 --> 00:32:51,405
実際に部屋に
置いてみましょう

522
00:32:51,839 --> 00:32:56,877
テレビ本体に周囲の照明が
反射していますが

523
00:32:56,977 --> 00:32:59,546
画面の明るさが勝っています

524
00:33:00,981 --> 00:33:05,018
放射光を使う機会は
めったにありません

525
00:33:05,385 --> 00:33:08,722
しかし 暗闇で光る
オブジェクトなら

526
00:33:08,822 --> 00:33:11,225
適切な選択肢かもしれません

527
00:33:13,160 --> 00:33:16,029
透過性を
与えることもできます

528
00:33:16,263 --> 00:33:19,800
ガラス製の
オブジェクトに有効です

529
00:33:20,701 --> 00:33:23,971
正確にレンダリングするため

530
00:33:24,071 --> 00:33:28,509
透過性の有無によって
違う素材を使います

531
00:33:30,110 --> 00:33:32,246
透過性を設定するのは

532
00:33:32,346 --> 00:33:34,615
アルベドの
アルファチャンネルです

533
00:33:34,715 --> 00:33:37,451
例えばPNGファイルでも

534
00:33:38,485 --> 00:33:42,289
透けて見える部分を
対象にした効果で

535
00:33:42,389 --> 00:33:45,726
切り抜きには不向きです

536
00:33:47,327 --> 00:33:50,497
先ほどのテレビで見てみます

537
00:33:51,031 --> 00:33:54,401
モデルの
基本的なメッシュに

538
00:33:54,802 --> 00:33:57,204
画面のメッシュを加えます

539
00:33:57,304 --> 00:34:01,642
湾曲したガラスが
表面を覆っています

540
00:33:57,304 --> 00:34:01,642
湾曲したガラスが
表面を覆っています

541
00:34:03,210 --> 00:34:05,179
見てみましょう

542
00:34:05,779 --> 00:34:09,783
湾曲した画面に
光が反射しています

543
00:34:09,882 --> 00:34:15,088
横に回すと画面の色や
汚れているのが見えます

544
00:34:16,989 --> 00:34:20,460
このようなテクスチャで
実現しました

545
00:34:20,661 --> 00:34:23,496
単純に汚れを加えました

546
00:34:23,630 --> 00:34:28,068
しかし ガラス面の奥には
画面の蛍光面が

547
00:34:28,168 --> 00:34:30,404
透けて見えています

548
00:34:33,106 --> 00:34:38,011
ここで使ったフォーマットを
振り返りましょう

549
00:34:38,478 --> 00:34:42,882
アルベドはRGB
透過性を加えるならRGBA

550
00:34:43,150 --> 00:34:45,686
ノーマルマップと
放射光もRGBです

551
00:34:46,053 --> 00:34:49,422
金属性と粗さ
影の生成はグレースケール

552
00:34:50,357 --> 00:34:53,327
iOSのイメージ形式は
すべて使えます

553
00:34:53,793 --> 00:34:57,130
テクスチャサイズは
２の累乗にしましょう

554
00:34:57,231 --> 00:35:00,601
2048 1024
512ピクセルなどです

555
00:34:57,231 --> 00:35:00,601
2048 1024
512ピクセルなどです

556
00:35:04,371 --> 00:35:05,873
AR Quick Lookは

557
00:35:05,973 --> 00:35:10,177
iOS 12がサポートする
すべてのデバイスで使えます

558
00:35:10,677 --> 00:35:14,147
デバイスによって
性能は違います

559
00:35:15,282 --> 00:35:19,353
AR Quick Lookは
システム全体を拡張するため

560
00:35:19,820 --> 00:35:24,291
起動するアプリケーションと
メモリを共有します

561
00:35:24,858 --> 00:35:29,163
そのため使用できる
メモリが限られます

562
00:35:30,297 --> 00:35:35,369
モデルはメモリ容量の
大きいデバイスを基準に

563
00:35:35,469 --> 00:35:37,337
作成してください

564
00:35:37,438 --> 00:35:40,440
iPhone 7 Plus
8 PlusやiPhone X

565
00:35:40,774 --> 00:35:43,076
12.9インチiPad Proなどです

566
00:35:43,877 --> 00:35:48,882
そうすれば性能の違う
デバイスで見るとしても

567
00:35:48,982 --> 00:35:52,119
ダウンサンプリングが
可能です

568
00:35:52,219 --> 00:35:55,456
先ほど紹介した
デバイスに限らず

569
00:35:55,556 --> 00:35:57,224
どこでも見られます

570
00:35:58,625 --> 00:36:03,597
ダウンサンプリングするのは
テクスチャだけです

571
00:35:58,625 --> 00:36:03,597
ダウンサンプリングするのは
テクスチャだけです

572
00:36:06,533 --> 00:36:09,837
そろそろモデルや
テクスチャの

573
00:36:09,937 --> 00:36:12,740
サイズが気になりますね

574
00:36:13,307 --> 00:36:16,076
唯一の正解はありません

575
00:36:16,343 --> 00:36:18,812
多くの要素が影響します

576
00:36:18,979 --> 00:36:23,116
メッシュやアニメーション
テクスチャのサイズや枚数

577
00:36:23,784 --> 00:36:28,322
PBRテクスチャ１枚の
モデルを例に挙げます

578
00:36:28,422 --> 00:36:31,125
６つのテクスチャを使います

579
00:36:31,225 --> 00:36:33,961
100Kポリゴンまでの

580
00:36:34,261 --> 00:36:37,331
2048x2048のPBRテクスチャ

581
00:36:37,531 --> 00:36:39,433
アニメーションは10秒です

582
00:36:39,667 --> 00:36:42,736
容量が大きいデバイスに
適しています

583
00:36:44,104 --> 00:36:47,107
期待どおりに
表示されるかどうか

584
00:36:47,207 --> 00:36:49,943
テストすることを勧めます

585
00:36:52,212 --> 00:36:56,550
次のことを
頭に入れておいてください

586
00:36:57,918 --> 00:37:02,089
モデルの頂点同士を
すべてマージしてから

587
00:36:57,918 --> 00:37:02,089
モデルの頂点同士を
すべてマージしてから

588
00:37:02,189 --> 00:37:03,991
エクスポートしてください

589
00:37:04,658 --> 00:37:09,296
できれば素材とテクスチャは
１セットにしましょう

590
00:37:09,997 --> 00:37:13,467
モデルの
部分ごとのテクスチャを

591
00:37:13,567 --> 00:37:15,802
一括することができます

592
00:37:17,438 --> 00:37:20,307
不要なテクスチャは
外しましょう

593
00:37:20,774 --> 00:37:25,279
モデルに金属の部分がなければ

594
00:37:25,379 --> 00:37:28,115
金属のテクスチャは不要です

595
00:37:29,817 --> 00:37:32,486
テクスチャが必要なのは

596
00:37:32,586 --> 00:37:36,390
それを使えば
リアルさが増す部分です

597
00:37:36,857 --> 00:37:39,893
高解像度のアルベドか

598
00:37:40,160 --> 00:37:43,697
粗さやノーマルマップかも
しれません

599
00:37:45,098 --> 00:37:48,802
ピクセルは
物理的なサイズに合わせます

600
00:37:49,603 --> 00:37:53,006
金属筒のモデルが
直径３センチ弱なら

601
00:37:53,507 --> 00:37:56,610
小さいので
2048x2048のテクスチャは

602
00:37:56,710 --> 00:37:59,046
必要ありません

603
00:38:00,914 --> 00:38:03,250
見た目は大事ですが

604
00:38:03,350 --> 00:38:07,187
ファイルサイズとの
バランスも重要です

605
00:38:07,421 --> 00:38:11,458
ウェブからのダウンロードを
想定する場合

606
00:38:11,558 --> 00:38:14,761
メッセージやメールで
共有しやすいサイズにします

607
00:38:17,464 --> 00:38:20,801
では どうやって
作成しましょうか

608
00:38:21,435 --> 00:38:24,505
USDZコンバータを使います

609
00:38:25,239 --> 00:38:26,940
3Dモデルを

610
00:38:27,041 --> 00:38:30,611
USDZフォーマットに変換する
コマンドラインツールです

611
00:38:31,445 --> 00:38:36,984
Xcode 10に組み込まれており
USDZの作成だけでなく

612
00:38:37,184 --> 00:38:39,653
PBRテクスチャを

613
00:38:39,753 --> 00:38:42,890
マッピングすることも
可能です

614
00:38:44,091 --> 00:38:46,193
変換できるファイルは３種類

615
00:38:46,293 --> 00:38:48,362
OBJファイル
Alembicファイル

616
00:38:48,462 --> 00:38:52,532
ASCIIもしくはバイナリの
USDファイル―

617
00:38:52,633 --> 00:38:54,768
.usdaと.usdcです

618
00:38:56,770 --> 00:39:01,909
実際に作成する前に
USDZについて解説します

619
00:38:56,770 --> 00:39:01,909
実際に作成する前に
USDZについて解説します

620
00:39:03,010 --> 00:39:06,447
まず これは非圧縮の
ZIPファイルです

621
00:39:07,047 --> 00:39:10,417
最初のファイルは.usdcです

622
00:39:10,751 --> 00:39:14,021
モデルのメッシュや
アニメーション

623
00:39:14,121 --> 00:39:16,190
その他の定義を含みます

624
00:39:16,990 --> 00:39:19,259
あとは 今まで見てきた―

625
00:39:19,359 --> 00:39:22,629
様々なテクスチャや
画像が並んでいます

626
00:39:24,398 --> 00:39:28,402
USDZファイルは
オープンフォーマットで

627
00:39:28,502 --> 00:39:31,004
１から自分で作れます

628
00:39:31,271 --> 00:39:34,541
Pixar社が自社のサイトで

629
00:39:34,641 --> 00:39:37,144
公開しています

630
00:39:39,146 --> 00:39:44,151
コンバータを使う場合は
xcrunコマンドを使って

631
00:39:44,251 --> 00:39:45,953
Xcodeに入ります

632
00:39:46,420 --> 00:39:50,357
変換するモデルの
ファイルを入力し

633
00:39:50,490 --> 00:39:53,460
USDZのファイル名を
指定します

634
00:39:54,995 --> 00:39:57,831
PBRテクスチャを
マッピングするには

635
00:39:57,965 --> 00:40:01,568
マッピングしたい
グループの名前の後に

636
00:39:57,965 --> 00:40:01,568
マッピングしたい
グループの名前の後に

637
00:40:01,668 --> 00:40:04,271
-g optionを付けて

638
00:40:04,371 --> 00:40:07,875
任意の数のテクスチャを
供給します

639
00:40:08,842 --> 00:40:13,313
複数のグループに
マッピングするなら

640
00:40:13,414 --> 00:40:16,250
必要なだけ
-g optionを付けます

641
00:40:17,451 --> 00:40:20,087
グループの名前が
分からなければ―

642
00:40:20,187 --> 00:40:23,323
-vで詳細な情報が得られます

643
00:40:23,424 --> 00:40:26,093
グループの名前や
変換プロセスを

644
00:40:26,193 --> 00:40:28,862
プリントすることもできます

645
00:40:31,365 --> 00:40:36,270
モデルの作成例の
ギャラリーも用意しました

646
00:40:36,370 --> 00:40:38,605
PBRの参考になります

647
00:40:39,206 --> 00:40:41,909
iOS 12のデバイスで開き

648
00:40:42,009 --> 00:40:46,313
AR Quick Lookで
表示することもできます

649
00:40:46,880 --> 00:40:51,218
Safariとの統合も
紹介しています

650
00:40:52,019 --> 00:40:54,321
デバイスをお持ちの方は

651
00:40:54,421 --> 00:40:59,393
ウェブサイトを訪れて
体感してみてください

652
00:41:01,995 --> 00:41:06,400
ARコンテンツを
現実世界に出現させるのが

653
00:41:06,500 --> 00:41:08,902
AR Quick Lookです

654
00:41:09,703 --> 00:41:12,573
アプリケーションにも
ウェブにも統合できます

655
00:41:13,474 --> 00:41:18,312
モデルの供給には
USDZファイルを使います

656
00:41:19,313 --> 00:41:22,549
PBR アニメーション
透過性も付帯できます

657
00:41:23,417 --> 00:41:26,753
Xcode 10に搭載された
コンバータを使えば

658
00:41:26,854 --> 00:41:29,256
ファイルの変換もできます

659
00:41:30,724 --> 00:41:34,328
詳細はウェブサイトを
ご覧ください

660
00:41:35,062 --> 00:41:36,930
体験コーナーもあります

661
00:41:37,031 --> 00:41:41,935
何か質問があれば
喜んでお答えします

662
00:41:42,536 --> 00:41:43,237
ありがとう

663
00:41:43,337 --> 00:41:47,041
(拍手)