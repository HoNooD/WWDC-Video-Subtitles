
1
00:00:07,074 --> 00:00:13,080
(音楽)

2
00:00:20,020 --> 00:00:22,789
Designing Web Content
for watchOSへようこそ

3
00:00:22,890 --> 00:00:25,392
WebKitチームの
ウェンソンです

4
00:00:25,492 --> 00:00:26,627
watchOS 5では

5
00:00:26,727 --> 00:00:31,999
HTMLコンテンツを
Apple Watchで表示できます

6
00:00:32,399 --> 00:00:34,201
まずはWebKitが

7
00:00:34,301 --> 00:00:39,173
いかに ユーザー体験を
向上させるかをご紹介します

8
00:00:40,874 --> 00:00:46,046
これまで HTMLメールは
テキストのみが表示され

9
00:00:46,146 --> 00:00:49,816
全体を見るには
他のデバイスが必要でした

10
00:00:50,317 --> 00:00:55,055
watchOS 5では
Apple Watch単体で

11
00:00:55,155 --> 00:00:59,860
HTMLメールの内容が
すべて表示できます

12
00:01:01,662 --> 00:01:03,564
本文中にURLがあれば

13
00:01:03,664 --> 00:01:07,634
iPhoneでの閲覧を
以前は促していました

14
00:01:07,935 --> 00:01:09,603
こちらもwatchOS 5では

15
00:01:09,703 --> 00:01:14,708
Apple Watchで直接
URLにアクセスできます

16
00:01:18,812 --> 00:01:19,546
本セッションでは―

17
00:01:19,646 --> 00:01:24,151
WebKitが既存コンテンツを
watchOSに適応させる仕組みと

18
00:01:24,251 --> 00:01:29,623
Apple Watchに適した
コンテンツの作成法をご紹介

19
00:01:30,023 --> 00:01:32,960
よりよいコンテンツを
作るための

20
00:01:33,060 --> 00:01:37,731
大事なポイントも
いくつかお伝えします

21
00:01:40,133 --> 00:01:43,470
まずはWebKitの働きを
見てみましょう

22
00:01:45,372 --> 00:01:49,243
当然 おなじみの動作を
サポートします

23
00:01:50,511 --> 00:01:52,880
Digital Crownを回すか

24
00:01:52,980 --> 00:01:56,350
ドラッグ操作で
画面をスクロールします

25
00:02:00,187 --> 00:02:04,725
ダブルタップで
ズーム機能が使えます

26
00:02:06,226 --> 00:02:08,996
また 強く押して
“戻る”や“進む”を選ぶか

27
00:02:09,096 --> 00:02:13,000
スワイプすることで
履歴を閲覧できます

28
00:02:13,800 --> 00:02:17,571
WebKitが目指したのは
即席でのコンテンツ確認です

29
00:02:17,838 --> 00:02:21,241
よって 動画の再生や
Webフォントなど―

30
00:02:21,642 --> 00:02:25,345
一部の機能は
今回サポートしていません

31
00:02:26,446 --> 00:02:29,917
では ウェブページ表示の
仕組みを紹介します

32
00:02:31,985 --> 00:02:36,957
多くの既存コンテンツが
320 CSSピクセルでの表示に

33
00:02:37,057 --> 00:02:38,759
対応しています

34
00:02:40,027 --> 00:02:44,031
それらがApple Watchの
横幅に応じて

35
00:02:44,131 --> 00:02:49,303
ビューポートに収まるよう
初期倍率を計算します

36
00:02:49,503 --> 00:02:54,975
表示は小さくなりますが
レイアウトは維持されます

37
00:02:56,643 --> 00:02:59,813
メタタグの
初期倍率は無視され

38
00:02:59,913 --> 00:03:04,985
新たに算出された初期倍率が
優先されます

39
00:02:59,913 --> 00:03:04,985
新たに算出された初期倍率が
優先されます

40
00:03:06,286 --> 00:03:11,091
ビューポートの横幅は
最小で320 CSSピクセルに

41
00:03:11,191 --> 00:03:16,363
メディアクエリの使用時は
デバイス幅も―

42
00:03:16,463 --> 00:03:18,765
320 CSSピクセルとなります

43
00:03:20,067 --> 00:03:21,935
縮小表示により

44
00:03:22,035 --> 00:03:25,906
横方向のスクロールは
不要となります

45
00:03:28,976 --> 00:03:31,845
しかし これらの定義を

46
00:03:31,945 --> 00:03:35,649
オーバーライドすることも
可能です

47
00:03:36,016 --> 00:03:37,718
例を見てみましょう

48
00:03:39,386 --> 00:03:44,124
旅先での写真をまとめた
ページを作ったので

49
00:03:44,224 --> 00:03:46,093
友達に共有します

50
00:03:47,160 --> 00:03:51,365
彼らはApple Watchで
このページを閲覧できます

51
00:03:51,732 --> 00:03:56,370
これは320 CSSピクセルに
縮小された状態です

52
00:03:56,837 --> 00:04:01,375
しかし実は ビューポートが
一定の幅を超える時のみ

53
00:03:56,837 --> 00:04:01,375
しかし実は ビューポートが
一定の幅を超える時のみ

54
00:04:01,475 --> 00:04:06,547
２列で表示するよう
メディアクエリを指定済みです

55
00:04:07,581 --> 00:04:12,252
あとは このページでは
適応処理は不要だと

56
00:04:12,352 --> 00:04:14,688
WebKitに伝えるだけです

57
00:04:15,022 --> 00:04:18,892
冒頭部分に新しいメタタグで
このように

58
00:04:18,992 --> 00:04:23,463
name属性とcontent属性を
指定するのです

59
00:04:24,097 --> 00:04:30,037
iPhoneやiPadでの
レイアウトを保証するために

60
00:04:30,137 --> 00:04:33,073
元のメタタグも残しています

61
00:04:33,807 --> 00:04:38,478
これでWebKitはApple Watchの
元のデバイス幅を認識します

62
00:04:40,881 --> 00:04:44,751
次にフォームコントロールの
ご説明をします

63
00:04:45,319 --> 00:04:48,689
WebKitはこれにも
対応しています

64
00:04:49,022 --> 00:04:53,160
最適な入力フォームを
デザインするためには

65
00:04:53,260 --> 00:04:55,496
考慮すべき点があります

66
00:04:56,830 --> 00:05:01,501
１つは 適切なtype属性と
タグを選択することです

67
00:04:56,830 --> 00:05:01,501
１つは 適切なtype属性と
タグを選択することです

68
00:05:01,602 --> 00:05:03,971
WebKitは
電話番号や日付の入力画面

69
00:05:04,071 --> 00:05:09,142
セレクトメニュー画面など
多様な型に対応しています

70
00:05:09,510 --> 00:05:11,144
適切な選択により

71
00:05:11,245 --> 00:05:15,215
最適なインターフェイスを
WebKitは提示できます

72
00:05:16,850 --> 00:05:20,287
２つ目は watchOSでは
入力フォームが

73
00:05:20,387 --> 00:05:23,790
フルスクリーンで
表示される点です

74
00:05:24,525 --> 00:05:28,328
コントロールに
ラベルを付けるなどして

75
00:05:28,428 --> 00:05:32,966
ステータスバーに情報を
追加しましょう

76
00:05:34,668 --> 00:05:37,538
最後に
Safariリーダーについてです

77
00:05:38,705 --> 00:05:41,108
iOSやmacOSで
提供されている―

78
00:05:41,208 --> 00:05:45,913
ウェブページを簡略化して
表示する機能です

79
00:05:49,583 --> 00:05:55,322
watchOS 5では自動で
リーダー表示が適用されます

80
00:05:55,722 --> 00:05:59,359
ページの主要部分が
確実に抽出されるよう―

81
00:05:59,459 --> 00:06:03,730
セマンティックな
マークアップを施しましょう

82
00:05:59,459 --> 00:06:03,730
セマンティックな
マークアップを施しましょう

83
00:06:04,498 --> 00:06:05,732
例を見てみます

84
00:06:07,334 --> 00:06:11,839
大事な部分を明示するには
articleタグで囲みます

85
00:06:12,472 --> 00:06:18,045
ヘッダー要素もタグで囲めば
確実にリーダーで表示されます

86
00:06:19,246 --> 00:06:24,551
ヘッダー要素の表示形式は
itemprop属性の値によります

87
00:06:24,751 --> 00:06:27,020
itempropで指定することで

88
00:06:27,120 --> 00:06:31,558
著者名やタイトルなど
必要な要素が明示できます

89
00:06:34,695 --> 00:06:39,166
強調したい箇所や
重要な箇所を含んだ文章は

90
00:06:39,266 --> 00:06:43,203
それぞれem要素と
strong要素を使います

91
00:06:43,437 --> 00:06:47,074
リーダーはタグを認識し
スタイルを維持します

92
00:06:51,278 --> 00:06:54,648
この画像には figure要素と
figcaption要素を使用

93
00:06:54,748 --> 00:06:57,384
キャプションの存在を
伝えれば―

94
00:06:57,751 --> 00:07:00,821
２つの要素は
一緒に表示されます

95
00:06:57,751 --> 00:07:00,821
２つの要素は
一緒に表示されます

96
00:07:04,558 --> 00:07:08,529
引用文には
blockquote要素を使えば

97
00:07:08,695 --> 00:07:12,299
リーダーが自動で
整形してくれます

98
00:07:14,501 --> 00:07:18,172
また オープングラフの
メタタグを設定しておけば

99
00:07:18,272 --> 00:07:21,475
記事へのリンクも
思いどおりです

100
00:07:23,177 --> 00:07:26,413
オープングラフのメタタグや
リッチリンクについては

101
00:07:26,513 --> 00:07:29,516
Ensuring Beautiful
Rich Linksもご覧ください

102
00:07:31,351 --> 00:07:35,122
本セッションでは
WebKitのレイアウト手法と

103
00:07:35,255 --> 00:07:39,593
Apple Watchに適した
コンテンツの作成法を確認

104
00:07:40,027 --> 00:07:43,096
最適な入力フォームの
作成ポイントと

105
00:07:43,197 --> 00:07:47,835
リーダー表示への
対応方法も紹介しました

106
00:07:49,670 --> 00:07:52,773
これから皆さんが
作成される―

107
00:07:52,873 --> 00:07:56,210
Apple Watch向けの
コンテンツが楽しみです