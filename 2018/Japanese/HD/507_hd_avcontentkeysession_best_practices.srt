
1
00:00:07,207 --> 00:00:16,517
(音楽)

2
00:00:17,918 --> 00:00:20,120
こんにちは

3
00:00:20,220 --> 00:00:24,691
AV Foundationのエンジニア
アニル･カティです

4
00:00:25,225 --> 00:00:29,897
AVContentKeySession APIの
導入について―

5
00:00:29,997 --> 00:00:32,766
皆さんにお話しします

6
00:00:34,001 --> 00:00:37,905
AVContentKeySessionとは
Appleプラットフォーム上で―

7
00:00:38,071 --> 00:00:42,943
FairPlay Streamingキーを
配信できるAV Foundation APIです

8
00:00:44,011 --> 00:00:50,751
まず FairPlay Streamingと
AVContentKeySessionの概要を

9
00:00:50,851 --> 00:00:53,820
そのあとに
AVContentKeySessionを使用し

10
00:00:53,921 --> 00:00:56,990
再生を最適化する方法も
お伝えします

11
00:00:57,090 --> 00:01:02,396
FairPlay Streamingキーの
配信に関する―

12
00:00:57,090 --> 00:01:02,396
FairPlay Streamingキーの
配信に関する―

13
00:01:02,496 --> 00:01:07,100
注意すべき点についても
言及します

14
00:01:08,001 --> 00:01:10,137
始めましょう

15
00:01:10,737 --> 00:01:13,640
2015年導入の
FairPlay Streamingは―

16
00:01:13,740 --> 00:01:18,145
プラットフォームに配信された
HLSストリームを保護します

17
00:01:18,245 --> 00:01:25,152
プラットフォームがメディアを
復号化して再生できるように

18
00:01:25,252 --> 00:01:31,491
アプリケーションに必要な
一連のステップが指定されます

19
00:01:32,392 --> 00:01:35,762
FairPlay Streamingキーの
配信中 アプリケーションは―

20
00:01:35,863 --> 00:01:40,601
プラットフォームと
キーサーバ間の連携役となります

21
00:01:41,168 --> 00:01:46,807
AV Foundationからキーを
ロードする要求を受けると―

22
00:01:46,907 --> 00:01:51,979
代わりにSPCという
暗号化キーを要求します

23
00:01:52,079 --> 00:01:57,317
次にSPCは
キーサーバに送信され―

24
00:01:57,417 --> 00:02:02,155
CKCともいう暗号化キーで
サーバが応答します

25
00:01:57,417 --> 00:02:02,155
CKCともいう暗号化キーで
サーバが応答します

26
00:02:02,489 --> 00:02:06,460
最後に アプリケーションから
CKCがAVFoundationへ渡り

27
00:02:06,560 --> 00:02:10,030
復号化を経て
再生がなされます

28
00:02:11,198 --> 00:02:13,534
最近までアプリケーションは

29
00:02:13,634 --> 00:02:17,404
AVAssetResourceLoaderという
汎用AV Foundation APIで―

30
00:02:17,504 --> 00:02:19,573
復号化キーを
配信していました

31
00:02:20,908 --> 00:02:24,745
しかし昨年 新しい
AV Foundationクラスを導入

32
00:02:24,845 --> 00:02:30,017
復号化キー専用に設計した
AVContentKeySessionです

33
00:02:31,652 --> 00:02:35,389
これについては
２つの目標がありました

34
00:02:35,789 --> 00:02:39,326
１つ目は キーの
ロードプロセスの簡素化と

35
00:02:39,426 --> 00:02:44,097
コンテンツ復号化キーの
ライフサイクル管理の効率化

36
00:02:44,464 --> 00:02:49,303
２つ目は新しいコンテンツの
保護機能のホームとなる

37
00:02:51,271 --> 00:02:54,441
AVContentKeySessionの導入は
順調で―

38
00:02:54,541 --> 00:02:57,878
FairPlay Streamingキーの
大多数は―

39
00:02:57,978 --> 00:03:02,115
AVContentKeySessionからの
ものです

40
00:02:57,978 --> 00:03:02,115
AVContentKeySessionからの
ものです

41
00:03:03,383 --> 00:03:08,121
APIはキー配信を
最適化する上で役立ちました

42
00:03:08,889 --> 00:03:12,426
具体的に解説する前に―

43
00:03:12,526 --> 00:03:16,163
AVContentKeySessionの
違いを見てみましょう

44
00:03:17,631 --> 00:03:21,535
AVAssetResourceLoaderを
使用する時―

45
00:03:21,635 --> 00:03:24,905
キーをロードできるのは―

46
00:03:25,005 --> 00:03:28,108
オンデマンドで要求を
送信する場合のみです

47
00:03:28,842 --> 00:03:33,046
これが発生するのは
再生リストをダウンロードし―

48
00:03:33,146 --> 00:03:35,749
コンテンツの暗号化が
確認された時です

49
00:03:36,216 --> 00:03:41,722
さらに再生中は いつでも
キーロード要求を送信できます

50
00:03:41,855 --> 00:03:44,191
例えば 再生の途中で―

51
00:03:44,291 --> 00:03:48,462
別のキーを使用するラジアンに
スイッチされた場合は―

52
00:03:48,562 --> 00:03:51,698
新しいキーロード要求を
送信します

53
00:03:52,399 --> 00:03:55,569
基本的には
そのモデルを変更します

54
00:03:56,136 --> 00:03:59,773
媒体のロードから切り離すか
または再生して―

55
00:03:59,873 --> 00:04:04,411
キーロードのタイミングに対する
コントロールを強化します

56
00:03:59,873 --> 00:04:04,411
キーロードのタイミングに対する
コントロールを強化します

57
00:04:05,379 --> 00:04:07,548
AVContentKeySessionを
使用すると―

58
00:04:07,648 --> 00:04:11,785
自分のタイミングで
キーロードを開始できます

59
00:04:12,152 --> 00:04:15,355
これで
新しいユースケースが生まれ

60
00:04:15,455 --> 00:04:20,327
アプリケーションでキー配信を
最適化することができます

61
00:04:22,596 --> 00:04:27,301
再生スタートアップとは
改善に役立てるものです

62
00:04:28,569 --> 00:04:33,807
AV Foundationのオンデマンドの
キーロード要求を待たずに

63
00:04:33,907 --> 00:04:35,776
再生要求後に―

64
00:04:35,876 --> 00:04:40,647
AVContentKeySessionを使用して
ユーザーアクションに基づき―

65
00:04:40,747 --> 00:04:45,686
要求されることが予想される
キーをロードできます

66
00:04:46,653 --> 00:04:50,524
ユーザーが再生するものを
選択する前でも可能です

67
00:04:51,058 --> 00:04:54,094
キーの事前ロード
または事前警告といいます

68
00:04:55,662 --> 00:05:00,701
ラジアン間で複数のキーを
使用するアセットがある場合は

69
00:04:55,662 --> 00:05:00,701
ラジアン間で複数のキーを
使用するアセットがある場合は

70
00:05:00,801 --> 00:05:05,072
キーサーバに話す前でも
全てのキー要求をバッチできます

71
00:05:06,006 --> 00:05:12,079
これでロードが削減され
各キーの往復が除外されます

72
00:05:14,848 --> 00:05:18,819
processContentKeyRequest
メソッドを呼び出すことで―

73
00:05:18,919 --> 00:05:21,822
キーロードプロセスを
開始できます

74
00:05:22,689 --> 00:05:25,859
このメソッドを呼び出すと
AVContentKeySessionは―

75
00:05:25,959 --> 00:05:28,562
デリゲートコールバックを
呼び出し―

76
00:05:28,662 --> 00:05:30,931
AVContentKeyRequestを
送信します

77
00:05:31,698 --> 00:05:34,168
AVContentKeyRequestによって

78
00:05:34,268 --> 00:05:39,106
FairPlay Streaming固有の
オペレーションを実行し―

79
00:05:39,239 --> 00:05:42,276
暗号化キーで応答できます

80
00:05:44,778 --> 00:05:49,116
特定のキーを
事前ロードしたとします

81
00:05:49,216 --> 00:05:53,554
再生開始後にキーを
再度 要求できるか？

82
00:05:54,121 --> 00:05:56,023
はい できます

83
00:05:56,223 --> 00:06:00,294
例えば 再生ルートが
変更される場合は―

84
00:05:56,223 --> 00:06:00,294
例えば 再生ルートが
変更される場合は―

85
00:06:00,394 --> 00:06:02,829
キーロード要求を受け取れます

86
00:06:03,597 --> 00:06:08,635
Apple TVにはAirPlayが
アダプタにはLightningがあると

87
00:06:08,735 --> 00:06:12,139
ぜひとも
覚えておいてください

88
00:06:12,239 --> 00:06:16,443
この場合は復号化に
新しいキーが必要です

89
00:06:18,111 --> 00:06:21,748
アプリケーションはキーを
事前ロードする場合でも―

90
00:06:21,915 --> 00:06:26,119
キーロード要求に答える準備が
必要です

91
00:06:28,822 --> 00:06:31,892
ここで また質問です

92
00:06:32,025 --> 00:06:35,395
再生中に
必要な全てのキーを―

93
00:06:35,496 --> 00:06:37,531
どう事前ロードするか？

94
00:06:38,565 --> 00:06:43,103
キーを事前ロードするには
対応するキーIDが必要です

95
00:06:43,237 --> 00:06:46,206
HLS再生リストの
EXT-X-KEYタグに―

96
00:06:46,306 --> 00:06:48,041
指定されたものです

97
00:06:49,142 --> 00:06:52,646
全てのキーIDとアセットを―

98
00:06:52,746 --> 00:06:57,251
帯域外のサーバから
取得することを推奨します

99
00:06:58,185 --> 00:07:01,755
もう１つのオプションは
セッションキーとして―

100
00:06:58,185 --> 00:07:01,755
もう１つのオプションは
セッションキーとして―

101
00:07:01,855 --> 00:07:06,226
マスター再生リストに
全てのキーIDを含め―

102
00:07:06,326 --> 00:07:11,231
適格なコンテンツキーの
プロパティを使用することです

103
00:07:12,666 --> 00:07:14,735
ここでお伝えします

104
00:07:14,835 --> 00:07:19,173
HLSパフォーマンスの最適化
についての―

105
00:07:19,339 --> 00:07:23,343
セッションもあるので
チェックしてください

106
00:07:26,380 --> 00:07:28,048
AVContentKeySessionも―

107
00:07:28,182 --> 00:07:32,719
ライブオファリングの
拡大･縮小に役立ちます

108
00:07:33,053 --> 00:07:35,956
AVContentKeySessionを
使うと―

109
00:07:36,056 --> 00:07:39,860
ライブコンテンツの
クライアントからの―

110
00:07:39,993 --> 00:07:43,030
キーロード要求を
分散できるのです

111
00:07:43,931 --> 00:07:46,533
通常 ライブストリームは―

112
00:07:46,667 --> 00:07:49,770
コンテンツ保護のレイヤーを
追加するため―

113
00:07:49,870 --> 00:07:52,105
キーを定期的に回転させます

114
00:07:53,340 --> 00:07:59,413
再生リストのリフレッシュ時に
これらのキーが同時に表示されます

115
00:07:59,513 --> 00:08:04,585
これが起こると 数百万人が
一斉にキーを要求し―

116
00:07:59,513 --> 00:08:04,585
これが起こると 数百万人が
一斉にキーを要求し―

117
00:08:04,685 --> 00:08:08,222
キーサーバに
激しい負担がかかります

118
00:08:08,789 --> 00:08:14,127
このキー要求のイベントが
ウィンドウに表示され―

119
00:08:14,228 --> 00:08:18,398
EXT-X-KEYタグが
表示される前に―

120
00:08:18,499 --> 00:08:22,369
ロードバランス要求は
キーサーバに達します

121
00:08:24,338 --> 00:08:26,440
別のセッションでは―

122
00:08:26,540 --> 00:08:30,644
サンプルコードで
このユースケースを説明しました

123
00:08:30,744 --> 00:08:34,448
developer.apple.comか
WWDCアプリケーションで―

124
00:08:34,548 --> 00:08:36,917
チェックしてください

125
00:08:38,684 --> 00:08:43,222
復号化キーの管理や
配信ができることとは別に―

126
00:08:43,357 --> 00:08:46,426
AVContentKeySessionは―

127
00:08:46,527 --> 00:08:50,497
コンテンツの保護機能の
ホームとしても機能します

128
00:08:50,597 --> 00:08:55,802
昨年 リリースした
オフラインレンタルです

129
00:08:56,970 --> 00:09:03,377
ストレージ期間 そして
再生期間を指定できる―

130
00:08:56,970 --> 00:09:03,377
ストレージ期間 そして
再生期間を指定できる―

131
00:09:03,477 --> 00:09:07,614
FairPlay Streaming機能です

132
00:09:09,149 --> 00:09:11,919
ストレージ期間は―

133
00:09:12,019 --> 00:09:16,256
キーをどれだけ有効にするかを
指定します

134
00:09:16,390 --> 00:09:19,359
再生される前の段階です

135
00:09:20,494 --> 00:09:23,497
通常 長めで
30日間ぐらいです

136
00:09:24,665 --> 00:09:26,667
一方 再生期間は―

137
00:09:27,334 --> 00:09:32,506
キーが再生に使用された後
どれだけ有効にするかを指定します

138
00:09:32,773 --> 00:09:37,144
通常はストレージ期間より短く
例えば 24時間です

139
00:09:38,846 --> 00:09:43,817
永続的キーの作成時に
満了期間を指定できます

140
00:09:43,917 --> 00:09:47,721
プラットフォームは
デバイスがオフラインでも―

141
00:09:47,821 --> 00:09:51,024
２つの満了期間が
強制されるようにします

142
00:09:52,059 --> 00:09:57,130
どのように満了期間を
指定するか解説しましょう

143
00:09:57,998 --> 00:10:00,901
FairPlayは
Offline Key TLLV という―

144
00:09:57,998 --> 00:10:00,901
FairPlayは
Offline Key TLLV という―

145
00:10:01,001 --> 00:10:03,470
新しいTLLVを
導入しています

146
00:10:03,871 --> 00:10:09,176
これは CKCで
信号を送信する必要があります

147
00:10:11,778 --> 00:10:13,614
コードに関しては―

148
00:10:13,714 --> 00:10:16,617
AVPersistableContentKeyRequest
オブジェクト上で―

149
00:10:16,717 --> 00:10:19,553
メソッドを呼び出し
永続的キーを生成します

150
00:10:20,320 --> 00:10:22,956
アプリケーションストレージ
に保存し―

151
00:10:23,056 --> 00:10:25,559
キーロード要求に答えるため―

152
00:10:25,659 --> 00:10:29,296
永続的キーデータブロブが
返されます

153
00:10:30,497 --> 00:10:32,266
この例において―

154
00:10:32,366 --> 00:10:36,203
キーはストレージ期間終了まで
30日間有効です

155
00:10:37,304 --> 00:10:41,742
このキーを使用して
初めて再生を開始する場合は―

156
00:10:41,842 --> 00:10:47,948
デリゲートコールバックから
更新された永続的キーを受信

157
00:10:49,316 --> 00:10:53,854
元の永続的キーを無視して
アプリケーションストレージに―

158
00:10:53,954 --> 00:10:57,758
更新済み永続的キーを
保存する必要があります

159
00:10:58,826 --> 00:11:03,363
将来のキーロード要求で
必要になってきます

160
00:10:58,826 --> 00:11:03,363
将来のキーロード要求で
必要になってきます

161
00:11:04,698 --> 00:11:06,733
この例において―

162
00:11:06,833 --> 00:11:11,405
更新済み永続的キーは
再生期間終了まで24時間有効です

163
00:11:13,740 --> 00:11:18,412
それでは
エラー処理について話しましょう

164
00:11:19,880 --> 00:11:23,884
再生体験の
改善という観点から―

165
00:11:23,984 --> 00:11:26,653
エラー処理は重要です

166
00:11:27,888 --> 00:11:34,595
正常なキーのロードでは
各段階で失敗が起こりがちです

167
00:11:34,962 --> 00:11:40,534
何かが失敗した時に
最初にすべきことは―

168
00:11:40,634 --> 00:11:44,671
失敗をAV Foundationに
レポートすることです

169
00:11:45,439 --> 00:11:50,677
プラットフォームの判断を
助けてほしいのです

170
00:11:51,512 --> 00:11:56,850
エラーログとアクセスログを監視し
原因を調査することも必要です

171
00:11:56,950 --> 00:11:59,419
エラーを軽減させて―

172
00:11:59,520 --> 00:12:02,923
ベストエクスペリエンスを
得てください

173
00:11:59,520 --> 00:12:02,923
ベストエクスペリエンスを
得てください

174
00:12:04,324 --> 00:12:08,929
昨年のセッションも
チェックして―

175
00:12:09,029 --> 00:12:11,565
エラー処理について
学びましょう

176
00:12:15,035 --> 00:12:20,374
キー応答を長時間
手放さないアプリケーションを―

177
00:12:20,974 --> 00:12:25,179
我々は これまで
いくつも見てきました

178
00:12:25,579 --> 00:12:29,483
AV Foundationの
キーロード要求 送信時は―

179
00:12:29,583 --> 00:12:32,119
できるだけ早く
応答すべきです

180
00:12:32,686 --> 00:12:36,557
遅延すると
再生がタイムアウトします

181
00:12:37,257 --> 00:12:41,028
playerItemのアクセスログを
調査することで―

182
00:12:41,128 --> 00:12:44,498
タイムアウトを特定し
デバッグできます

183
00:12:46,567 --> 00:12:50,037
HDCPの強制にも
注意点があります

184
00:12:50,137 --> 00:12:52,105
アセットのHDCP要件では―

185
00:12:52,206 --> 00:12:55,609
キーサーバからの
暗号化キー応答内で―

186
00:12:55,709 --> 00:12:59,713
信号送信されることを
覚えておくべきです

187
00:13:01,215 --> 00:13:05,819
別のラジアンに別のHDCPレベルを
強制する場合は―

188
00:13:05,953 --> 00:13:09,122
別のキーIDを
指定する必要があります

189
00:13:09,690 --> 00:13:13,026
また キーサーバからの
応答も与えます

190
00:13:15,429 --> 00:13:21,435
永続的キーで
キーロード要求に応答中は―

191
00:13:21,602 --> 00:13:26,106
デバイスにつながっているため
注意してください

192
00:13:26,373 --> 00:13:31,678
例えば AirPlayセッションからの
キーロード要求に―

193
00:13:31,778 --> 00:13:33,614
永続的キーは使えません

194
00:13:34,681 --> 00:13:37,417
再生が失敗してしまいます

195
00:13:38,919 --> 00:13:42,256
問題をできるだけ早く
回避するために―

196
00:13:42,356 --> 00:13:46,793
iOS 11.2のAPIを
一部変更しました

197
00:13:47,161 --> 00:13:49,997
次は
コードスニペットについてです

198
00:13:51,965 --> 00:13:56,036
AVContentKeySessionの
使用中は―

199
00:13:56,136 --> 00:14:00,407
永続的キーを
受け入れられない場合―

200
00:13:56,136 --> 00:14:00,407
永続的キーを
受け入れられない場合―

201
00:14:00,507 --> 00:14:05,946
RequestPersistableContentKey
要求に制約が生じます

202
00:14:06,880 --> 00:14:10,150
フィールドを
要求する場合は―

203
00:14:10,250 --> 00:14:14,755
キーサーバから FairPlay
Streamingキーで応答します

204
00:14:16,723 --> 00:14:21,929
AVAssetResourceLoaderで
注意すべきことは―

205
00:14:22,029 --> 00:14:28,302
allowedContentTypesで
受け入れられているかどうか―

206
00:14:28,402 --> 00:14:30,737
確認することです

207
00:14:31,572 --> 00:14:34,107
今回のセッションを通じて―

208
00:14:34,208 --> 00:14:37,811
いくつかの疑問に
答えることができました

209
00:14:38,011 --> 00:14:42,416
AVContentKeySessionの
違いについて解説しました

210
00:14:42,583 --> 00:14:46,954
再生スタートアップの改善や
ライブストリーミングの調整に

211
00:14:47,054 --> 00:14:49,323
APIを活用できます

212
00:14:49,890 --> 00:14:55,496
オフラインレンタルについても
少し言及しました

213
00:14:56,096 --> 00:15:02,336
エラー処理を向上させるための
注意すべき点なども―

214
00:14:56,096 --> 00:15:02,336
エラー処理を向上させるための
注意すべき点なども―

215
00:15:02,603 --> 00:15:05,205
お伝えしました

216
00:15:08,542 --> 00:15:12,846
本セッションの
詳細については―

217
00:15:12,946 --> 00:15:16,550
developer.apple.comを
ご参照ください