
1
00:00:07,074 --> 00:00:16,183
(音楽)

2
00:00:21,221 --> 00:00:28,829
(拍手)

3
00:00:29,563 --> 00:00:32,799
プライバシーは
人に関することです

4
00:00:34,168 --> 00:00:37,604
プライバシーエンジニアの
ジョーイです

5
00:00:37,905 --> 00:00:42,576
皆さん 今週の発表を機に
新しいアプリケーションの

6
00:00:42,676 --> 00:00:45,846
開発を考えていることでしょう

7
00:00:46,413 --> 00:00:50,551
その際に注意すべきは
ユーザのプライバシーです

8
00:00:51,318 --> 00:00:55,122
今年のアップデートについて
話す前に

9
00:00:55,222 --> 00:01:00,527
プライバシーについての
３つの考えを紹介します

10
00:00:55,222 --> 00:01:00,527
プライバシーについての
３つの考えを紹介します

11
00:01:01,328 --> 00:01:04,631
データプライバシーの
話をする上で

12
00:01:05,199 --> 00:01:11,505
データが個人のものだということを
忘れてはいけません

13
00:01:12,639 --> 00:01:15,676
プライバシーは
人に関することです

14
00:01:16,043 --> 00:01:20,981
ユーザとの信頼関係を
構築することが

15
00:01:22,349 --> 00:01:27,421
よりよいアプリケーションの
開発につながります

16
00:01:28,388 --> 00:01:31,892
人間関係において
信頼は大切です

17
00:01:31,992 --> 00:01:35,629
仕事も信頼できる相手としますよね

18
00:01:36,563 --> 00:01:42,970
ユーザにデータの収集理由や
その使用方法を知らせ

19
00:01:43,170 --> 00:01:49,109
データを慎重に扱えば
よいデータを取得できます

20
00:01:49,843 --> 00:01:55,182
ユーザが安心して
アプリケーションを使えれば

21
00:01:55,282 --> 00:01:57,651
信頼関係が
構築されるからです

22
00:01:59,553 --> 00:02:04,291
それぞれの開発過程に
今の話を当てはめて

23
00:01:59,553 --> 00:02:04,291
それぞれの開発過程に
今の話を当てはめて

24
00:02:04,391 --> 00:02:06,894
考えてください

25
00:02:07,895 --> 00:02:11,165
１人で開発はしません

26
00:02:11,632 --> 00:02:16,937
パズルや健康関連など
開発内容は さまざまですが

27
00:02:17,371 --> 00:02:21,341
収集した情報と
それをどう使うかは

28
00:02:21,642 --> 00:02:25,279
人々の暮らしに
大きな影響を与えます

29
00:02:26,280 --> 00:02:31,785
そのため技術の開発は
慎重に行う必要があります

30
00:02:33,253 --> 00:02:40,093
デューク大学の卒業式で
ティム･クックが述べました

31
00:02:40,394 --> 00:02:45,833
“いつどんな時でも
自分に問うべきことは―”

32
00:02:46,033 --> 00:02:50,704
“何ができるかではなく
何をすべきかだ”

33
00:02:52,306 --> 00:02:55,909
これが２つ目の考えに
つながります

34
00:02:57,177 --> 00:03:00,080
何をすべきかを
自問しましょう

35
00:02:57,177 --> 00:03:00,080
何をすべきかを
自問しましょう

36
00:03:01,515 --> 00:03:07,788
デベロッパが個人であるか
組織に属するかは関係なく

37
00:03:08,121 --> 00:03:12,192
誰でもユーザのために
行動できます

38
00:03:12,326 --> 00:03:14,962
ユーザへの責任を忘れずに

39
00:03:15,162 --> 00:03:18,999
データフローの
確認をしましょう

40
00:03:20,367 --> 00:03:21,502
例えば―

41
00:03:22,669 --> 00:03:24,671
なぜ このデータが必要か？

42
00:03:25,639 --> 00:03:31,111
本当にユースケースに
必要かを考えましょう

43
00:03:31,578 --> 00:03:33,080
データ取得は必須？

44
00:03:34,014 --> 00:03:36,517
ユーザを驚かせないか？

45
00:03:37,117 --> 00:03:42,089
ユーザを怖がらせてまで
データを取得すべきか？

46
00:03:43,290 --> 00:03:46,793
こんなに詳細な
データが必要か？

47
00:03:47,294 --> 00:03:49,763
違う方法はないか？

48
00:03:50,764 --> 00:03:54,935
一定期間が過ぎたら
データを削除すべきか？

49
00:03:56,470 --> 00:03:59,139
このような質問をする理由は

50
00:03:59,239 --> 00:04:03,644
臆測でデータを
判断しがちだからです

51
00:03:59,239 --> 00:04:03,644
臆測でデータを
判断しがちだからです

52
00:04:04,878 --> 00:04:08,148
“とりあえず全員にログしよう”

53
00:04:08,882 --> 00:04:11,685
そんなふうに前例を踏襲せず

54
00:04:12,286 --> 00:04:17,257
目的達成のために必要かを
考えてください

55
00:04:19,692 --> 00:04:24,598
センシティブでないと
あなたが思ったデータでも

56
00:04:24,932 --> 00:04:28,769
他のコンテキストや
ユーザにとっては

57
00:04:28,869 --> 00:04:31,371
違うかもしれません

58
00:04:33,240 --> 00:04:37,578
ある目的で入手したデータを
転用したら

59
00:04:37,911 --> 00:04:40,781
ユーザは
納得するでしょうか？

60
00:04:42,549 --> 00:04:47,221
個人を特定できる情報
“PII”に該当しなくても

61
00:04:47,888 --> 00:04:52,826
プライバシー性が
高いものがあります

62
00:04:54,294 --> 00:04:59,132
暗号化してデータを
保護するのもいいでしょう

63
00:04:59,833 --> 00:05:02,503
しかし それでは不十分です

64
00:04:59,833 --> 00:05:02,503
しかし それでは不十分です

65
00:05:03,036 --> 00:05:06,974
本当にデータを
取得すべきかという観点が

66
00:05:07,074 --> 00:05:08,842
必要なのです

67
00:05:10,310 --> 00:05:13,514
データフローを確認する際に

68
00:05:13,614 --> 00:05:18,719
プライバシーギャランティを
作成してもいいでしょう

69
00:05:19,353 --> 00:05:25,159
個人情報の取り扱いについて
明文化したものです

70
00:05:25,959 --> 00:05:30,164
これを開発初期に作成することで

71
00:05:30,531 --> 00:05:37,037
ギャランティに沿って開発でき
完成時に検証も行えます

72
00:05:38,572 --> 00:05:45,812
Appleのものを参考に
例文を作成してみました

73
00:05:46,780 --> 00:05:50,617
さまざまな場面に適用できます

74
00:05:51,451 --> 00:05:55,289
これが３つ目の考えに
つながります

75
00:05:56,156 --> 00:06:00,661
データプラクティスを
ユースケースに合わせましょう

76
00:05:56,156 --> 00:06:00,661
データプラクティスを
ユースケースに合わせましょう

77
00:06:02,596 --> 00:06:07,734
収集するデータの量と
種類について考えてみます

78
00:06:08,869 --> 00:06:15,642
より多くのデータを
取得しようと思うかもしれません

79
00:06:16,710 --> 00:06:20,814
かつてデータは
“新しい石油”と言われました

80
00:06:21,682 --> 00:06:25,719
石油もデータも
慎重に扱うべきです

81
00:06:27,487 --> 00:06:31,792
データは さまざまな
ユースケースに有効ですが

82
00:06:31,925 --> 00:06:37,431
それゆえ慎重に扱わなければ
脅威になり得ます

83
00:06:38,932 --> 00:06:42,336
データ収集で
オーバーヘッドが生じます

84
00:06:42,636 --> 00:06:48,041
データの管理と維持に
費やされる時間を使って

85
00:06:48,141 --> 00:06:52,379
新たな開発が
できるかもしれません

86
00:06:53,547 --> 00:06:55,582
責任も生じます

87
00:06:55,916 --> 00:07:00,154
企業の情報漏えいが
よく問題になりますが

88
00:06:55,916 --> 00:07:00,154
企業の情報漏えいが
よく問題になりますが

89
00:07:00,687 --> 00:07:05,959
もし流出した情報が
不要な情報であった場合

90
00:07:06,293 --> 00:07:08,629
更に悪い状況です

91
00:07:09,696 --> 00:07:13,700
不要なデータ収集は
多くのリスクを伴い

92
00:07:13,901 --> 00:07:17,938
ユーザとの信頼関係を
崩壊させます

93
00:07:18,972 --> 00:07:25,479
次回データを収集する時は
ここにある薬品の写真を思い浮かべ

94
00:07:26,046 --> 00:07:32,619
ユーザのデータを慎重に
扱うことを思い出しましょう

95
00:07:33,887 --> 00:07:39,059
適切なデータを
取得するよう努めてください

96
00:07:40,060 --> 00:07:43,597
必要なものだけを
収集するのです

97
00:07:44,231 --> 00:07:46,233
問題解決のためには

98
00:07:46,333 --> 00:07:50,704
多くのデータが必要だと
考えるかもしれません

99
00:07:51,238 --> 00:07:57,311
そんな時はデータがなくても
解決できる策を考えましょう

100
00:07:58,512 --> 00:08:01,515
ユーザの予想に反しないこと

101
00:07:58,512 --> 00:08:01,515
ユーザの予想に反しないこと

102
00:08:01,982 --> 00:08:08,722
データの収集理由と使用方法を
ユーザが知るのは当然です

103
00:08:09,556 --> 00:08:15,028
また 合理的な理由に基づいて
データを収集しましょう

104
00:08:17,297 --> 00:08:22,503
データプラクティスを
ユースケースに合わせて

105
00:08:22,603 --> 00:08:29,543
データのライフサイクルを
念頭に置き 情報を管理します

106
00:08:30,444 --> 00:08:33,212
限定的なデータ収集に加えて

107
00:08:33,313 --> 00:08:39,052
プライバシー技術を開発し
使用することも有効です

108
00:08:40,587 --> 00:08:47,361
プライバシーを構築するための
さまざまな技術があります

109
00:08:47,661 --> 00:08:49,663
例えばアグリゲーション

110
00:08:50,230 --> 00:08:52,699
そして透明性の確保

111
00:08:52,933 --> 00:08:56,503
スコープIDの使用など

112
00:08:56,737 --> 00:08:59,106
これらを交互に作動させます

113
00:08:59,840 --> 00:09:02,910
差分プライバシーも有効です

114
00:08:59,840 --> 00:09:02,910
差分プライバシーも有効です

115
00:09:03,744 --> 00:09:07,714
ここで全ての技術は
紹介できませんが

116
00:09:08,081 --> 00:09:13,487
これらをユースケースに
準用させてください

117
00:09:14,488 --> 00:09:17,090
ミキシングボードを
イメージしましょう

118
00:09:17,291 --> 00:09:20,360
曲ごとに
音の大きさが違ったら

119
00:09:20,460 --> 00:09:24,965
調整して全体のバランスを
整えますよね

120
00:09:25,999 --> 00:09:31,438
時には多くのデータを
収集する必要があります

121
00:09:32,005 --> 00:09:36,410
その時は
これらの技術を準用させて

122
00:09:36,710 --> 00:09:39,479
開発を行ってください

123
00:09:40,581 --> 00:09:46,620
これらの技術は
あらゆるシステムに適用でき

124
00:09:46,987 --> 00:09:51,992
ポリシーと違って
技術的な強制力を持ちます

125
00:09:53,827 --> 00:09:58,265
少し抽象的なので
詳しく説明するために

126
00:09:58,365 --> 00:10:02,536
Appleが構築したものを
ご紹介します

127
00:09:58,365 --> 00:10:02,536
Appleが構築したものを
ご紹介します

128
00:10:03,370 --> 00:10:07,541
最初の例はアクティビティを
共有する機能です

129
00:10:08,108 --> 00:10:10,077
プライバシーエンジニアとしては

130
00:10:10,177 --> 00:10:14,081
このつまみを
全て上げたいところですが

131
00:10:14,648 --> 00:10:17,184
そうはいきません

132
00:10:17,284 --> 00:10:23,056
友人とデータ共有をするので
誰のデータかは明確です

133
00:10:23,590 --> 00:10:28,996
従って今回は非特定化には
該当しません

134
00:10:29,496 --> 00:10:34,501
そこで我々は
個人の詳細なデータではなく

135
00:10:34,601 --> 00:10:38,005
統計データを扱う技術を導入

136
00:10:38,572 --> 00:10:42,009
いつ誰と共有するかも
コントロールできます

137
00:10:43,076 --> 00:10:45,245
次にApple Newsでは

138
00:10:45,445 --> 00:10:50,951
Apple IDに紐付けずに
分析データを取得しています

139
00:10:51,652 --> 00:10:55,389
そのほうがデータに
柔軟性が持てます

140
00:10:55,856 --> 00:10:59,393
とはいえ
センシティブ情報ですので

141
00:10:59,793 --> 00:11:02,429
識別子はいつでも
リセットできます

142
00:10:59,793 --> 00:11:02,429
識別子はいつでも
リセットできます

143
00:11:03,730 --> 00:11:07,401
最後は
写真のメモリー機能です

144
00:11:07,968 --> 00:11:12,873
写っている人を
顔認識技術で特定し

145
00:11:13,607 --> 00:11:17,878
撮影地情報から
類似した写真を関連付けます

146
00:11:18,545 --> 00:11:21,148
これもセンシティブ情報です

147
00:11:21,682 --> 00:11:25,419
そのため
ある手法を取り入れています

148
00:11:26,019 --> 00:11:30,324
全ての処理が個人のデバイス上で
完結するのです

149
00:11:30,724 --> 00:11:35,162
ちなみにこれは
ローカル処理にも便利です

150
00:11:36,396 --> 00:11:39,566
３つの考えをまとめます

151
00:11:39,800 --> 00:11:41,969
プライバシーは
人に関することです

152
00:11:43,003 --> 00:11:45,372
何をすべきかを
自問しましょう

153
00:11:45,706 --> 00:11:49,977
データプラクティスを
ユースケースに合わせましょう

154
00:11:51,144 --> 00:11:52,713
続いては―

155
00:11:52,813 --> 00:11:56,984
アプリケーション内の
プライバシーを構築するための

156
00:11:57,084 --> 00:11:59,686
デベロッパ向けツールを
ご紹介します

157
00:12:00,754 --> 00:12:07,060
これはデータアクセスと
データ管理に分類できます

158
00:12:08,061 --> 00:12:11,665
データアクセスは
まずiOSについて

159
00:12:11,899 --> 00:12:15,936
tvOSとwatchOSにも
当てはまる話です

160
00:12:17,204 --> 00:12:21,308
iOS向けの対戦ゲームを
作るとしましょう

161
00:12:21,642 --> 00:12:25,212
写真をアップロードさせたい時は

162
00:12:25,712 --> 00:12:29,116
アクセス許可のプロンプトを
表示します

163
00:12:29,283 --> 00:12:33,453
しかし ここでユーザが
写真を画面で選択し

164
00:12:33,554 --> 00:12:36,323
すぐ表示できたらいいですよね

165
00:12:37,457 --> 00:12:39,760
それを可能にするのが

166
00:12:40,627 --> 00:12:46,433
連絡先 カメラ 写真向けの機能
Out-of-Processピッカーです

167
00:12:47,267 --> 00:12:50,637
アプリケーションが
アクセスできる情報を

168
00:12:50,804 --> 00:12:55,008
ユーザ自身が選択します

169
00:12:56,477 --> 00:12:59,546
プライバシーを尊重できますね

170
00:12:59,713 --> 00:13:04,117
ライブラリ全体に
アクセスしません

171
00:12:59,713 --> 00:13:04,117
ライブラリ全体に
アクセスしません

172
00:13:04,284 --> 00:13:07,621
ユーザが共有データを
選択するため

173
00:13:07,721 --> 00:13:13,360
アクセス許可を要求する
必要がなくなりました

174
00:13:14,628 --> 00:13:19,900
連絡先 カメラ 写真では
これがデフォルトです

175
00:13:21,034 --> 00:13:25,405
一部の例外を除く
ほとんどのアプリケーションで

176
00:13:25,506 --> 00:13:28,842
この機能は有効でしょう

177
00:13:32,045 --> 00:13:35,949
この機能の設定は簡単です

178
00:13:36,083 --> 00:13:40,087
表示のスニペットで
設定できます

179
00:13:41,021 --> 00:13:44,992
デバイスに保護されている
さまざまなデータのうち

180
00:13:45,092 --> 00:13:49,830
広範囲なデータが
必要な場合もあるでしょう

181
00:13:50,297 --> 00:13:52,933
これらのAPI使用時には

182
00:13:53,033 --> 00:13:56,970
アクセスを要求する前に
注意すべき点があります

183
00:13:57,838 --> 00:14:03,977
ユースケースに必要なデータだけに
アクセスしましょう

184
00:13:57,838 --> 00:14:03,977
ユースケースに必要なデータだけに
アクセスしましょう

185
00:14:05,212 --> 00:14:08,982
広範囲なデータが
必要でない時は

186
00:14:09,349 --> 00:14:14,221
ユーザに選択させるなどの
代替案を検討しましょう

187
00:14:15,289 --> 00:14:21,195
許可を要求する
タイミングも重要です

188
00:14:21,495 --> 00:14:25,265
最初にアプリケーションを
開いた時に聞かれても

189
00:14:25,365 --> 00:14:27,234
ピンときません

190
00:14:27,835 --> 00:14:30,170
適切な時に表示させましょう

191
00:14:31,004 --> 00:14:34,241
ステータスに関しては
APIだけを信頼してください

192
00:14:34,842 --> 00:14:38,212
ユーザは いつでも
決定を無効にできますが

193
00:14:38,445 --> 00:14:42,783
その場合もアプリケーションを
作動させましょう

194
00:14:44,518 --> 00:14:46,320
アクセスを要求する時

195
00:14:46,420 --> 00:14:50,691
使用理由を明記しなければ
いけません

196
00:14:51,358 --> 00:14:54,895
これは必須事項です

197
00:14:55,462 --> 00:14:58,799
使用目的がないと
そのアプリケーションは

198
00:14:58,899 --> 00:15:03,070
App Reviewで却下され
作動しません

199
00:14:58,899 --> 00:15:03,070
App Reviewで却下され
作動しません

200
00:15:04,238 --> 00:15:08,976
これはユーザへの
透明性を保つ１つの手段です

201
00:15:09,409 --> 00:15:13,480
形式的にユーザに
クリックさせるのではなく

202
00:15:13,680 --> 00:15:18,619
データフローの通知の
一環として行うべきです

203
00:15:19,653 --> 00:15:24,224
データの使用理由を
説明することで

204
00:15:24,525 --> 00:15:29,963
ユーザは自身の優先基準で
決断できます

205
00:15:31,298 --> 00:15:35,969
ここに表示した例は
説明として不適切で

206
00:15:36,436 --> 00:15:42,309
これでは
App Reviewで却下されます

207
00:15:43,110 --> 00:15:49,716
我々はチェックを強化して
適切な記載を求めていきます

208
00:15:50,651 --> 00:15:54,488
記号や空白は不適切ですし

209
00:15:54,721 --> 00:16:00,093
“位置情報を要求する”だけでは
理由が不明確です

210
00:15:54,721 --> 00:16:00,093
“位置情報を要求する”だけでは
理由が不明確です

211
00:16:00,494 --> 00:16:05,499
“コンテンツ向上のため”も
抽象的すぎます

212
00:16:06,233 --> 00:16:11,405
マップを使用する時には
こう表示されます

213
00:16:11,505 --> 00:16:16,677
“現在地が表示され経路検索や
周辺検索に使用されます”

214
00:16:17,544 --> 00:16:21,381
要求する理由を
説明していますね

215
00:16:21,715 --> 00:16:26,487
明確で データの用途の
具体例も挙げています

216
00:16:28,121 --> 00:16:30,891
次はTV Appのものです

217
00:16:30,991 --> 00:16:36,797
“周辺のイベントやニュースを
通知するために使用します”

218
00:16:37,798 --> 00:16:43,737
使用方法が明確であれば
ユーザはデータを提供します

219
00:16:44,838 --> 00:16:48,909
次は地下鉄の
乗り換えアプリケーション

220
00:16:49,009 --> 00:16:52,579
“現在地からの
最寄りの駅を表示し―”

221
00:16:52,679 --> 00:16:55,415
“経路案内のために
使用します”

222
00:16:56,517 --> 00:17:01,722
これも明確に具体例を挙げて
用途を説明しています

223
00:16:56,517 --> 00:17:01,722
これも明確に具体例を挙げて
用途を説明しています

224
00:17:02,956 --> 00:17:07,528
たとえデータへのアクセスが
許可されなくても

225
00:17:07,928 --> 00:17:11,064
アプリケーションは
作動させましょう

226
00:17:11,498 --> 00:17:15,636
作動しないものは却下されます

227
00:17:16,336 --> 00:17:19,339
フォールバック機構を備え

228
00:17:19,439 --> 00:17:22,742
データ提供が拒否されても
作動させましょう

229
00:17:23,076 --> 00:17:27,281
乗り換えアプリケーションで
位置情報が得られなければ

230
00:17:27,381 --> 00:17:30,984
現在地を
手入力できるようにします

231
00:17:31,885 --> 00:17:36,690
データが入手できなくても
作動するように

232
00:17:36,790 --> 00:17:39,860
設定を今一度 確認しましょう

233
00:17:40,360 --> 00:17:43,297
第三者SDKには注意が必要です

234
00:17:43,430 --> 00:17:47,834
あなたのアプリケーションでのみ
アクセスを求めましょう

235
00:17:47,935 --> 00:17:51,471
ライブラリが許可を求めるなら
別の策を探るか

236
00:17:51,605 --> 00:17:54,675
コードをアップデートしましょう

237
00:17:55,742 --> 00:17:58,245
常に透明性を保ちましょう

238
00:17:58,345 --> 00:18:03,917
データの使用目的を
ユーザへ通知するだけでなく

239
00:17:58,345 --> 00:18:03,917
データの使用目的を
ユーザへ通知するだけでなく

240
00:18:04,251 --> 00:18:08,222
プライバシーポリシーを
記載してもいいでしょう

241
00:18:08,322 --> 00:18:11,425
もしくはアプリケーション内でも

242
00:18:11,525 --> 00:18:14,895
用途を説明する文書を
提供できます

243
00:18:16,196 --> 00:18:20,667
では APIの幅広い
ガイダンスの中から

244
00:18:20,834 --> 00:18:24,538
今年 変更された
部分について話します

245
00:18:25,072 --> 00:18:27,574
まずWi-Fiネットワーク情報です

246
00:18:27,808 --> 00:18:31,078
CNCopyCurrentNetworkInfoを
使用する場合

247
00:18:31,211 --> 00:18:35,616
Xcodeにエンタイトルメントの
追加が必要です

248
00:18:36,817 --> 00:18:39,553
アプリケーションで
有効にできる機能です

249
00:18:39,653 --> 00:18:45,526
例えば 通信中のアクセサリが
同じネットワーク上にあるか

250
00:18:45,859 --> 00:18:46,994
これで検証します

251
00:18:47,161 --> 00:18:50,097
このユースケース以外は
心配要りません

252
00:18:50,197 --> 00:18:53,200
必要な場合だけ使ってください

253
00:18:54,368 --> 00:18:57,271
新しいHealth Records APIは
ご存じですか？

254
00:18:57,704 --> 00:19:02,443
アプリケーションの
アイデアが豊富にあっても

255
00:18:57,704 --> 00:19:02,443
アプリケーションの
アイデアが豊富にあっても

256
00:19:02,809 --> 00:19:05,946
健康データは個人情報です

257
00:19:06,547 --> 00:19:11,285
プライバシー技術を
調整することにより

258
00:19:11,385 --> 00:19:14,521
透明性や制御機能が高まります

259
00:19:15,222 --> 00:19:18,559
用途の説明文や
プライバシーポリシーを

260
00:19:18,659 --> 00:19:21,728
ウェブサイトや
アプリケーションで提示でき

261
00:19:22,162 --> 00:19:27,367
共有するデータの
カテゴリも制御できます

262
00:19:27,668 --> 00:19:33,807
火曜からのセッションで
このAPIの使用法を話します

263
00:19:35,742 --> 00:19:41,148
最後にAppleが取り組む
差分プライバシーの技術を

264
00:19:41,248 --> 00:19:43,517
手短に ご説明します

265
00:19:43,917 --> 00:19:47,721
最初のユースケースは
よく間違う単語です

266
00:19:47,955 --> 00:19:54,261
入力を訂正すると デバイスが
単語にデータを付与し

267
00:19:54,361 --> 00:19:58,866
プライバシーを守りつつ
キーボードのアルゴリズムを改善

268
00:19:59,700 --> 00:20:04,938
Safariも
クラッシュを招くサイトのデータを

269
00:19:59,700 --> 00:20:04,938
Safariも
クラッシュを招くサイトのデータを

270
00:20:05,038 --> 00:20:10,244
デバイスが付与できるようになり
ブラウザの安定性が向上

271
00:20:11,645 --> 00:20:13,013
以上がiOSです

272
00:20:13,113 --> 00:20:15,415
次はmacOS

273
00:20:15,983 --> 00:20:21,422
リソースの保護方法を
いくつか変更しました

274
00:20:22,089 --> 00:20:26,260
保護されるデータの
カテゴリが増え

275
00:20:26,360 --> 00:20:32,166
許可プロンプトか
システム環境設定が作動します

276
00:20:32,733 --> 00:20:38,438
Mac用に開発をするなら
覚えておいてください

277
00:20:38,539 --> 00:20:43,110
アプリケーションに
影響を及ぼす変更です

278
00:20:43,777 --> 00:20:49,750
いつプロンプトが
表示されるかも知りましょう

279
00:20:50,184 --> 00:20:54,988
App Store以外のものを含む
第三者アプリケーションは

280
00:20:55,089 --> 00:20:56,924
全て同様です

281
00:20:58,392 --> 00:21:02,596
プロンプトには
用途の説明を表示しましょう

282
00:20:58,392 --> 00:21:02,596
プロンプトには
用途の説明を表示しましょう

283
00:21:02,796 --> 00:21:08,035
火曜からのセッションで
更に詳しく説明します

284
00:21:09,837 --> 00:21:16,477
ではデータアクセスについて
同僚のブランドンがお話しします

285
00:21:16,677 --> 00:21:23,083
(拍手)

286
00:21:23,183 --> 00:21:24,151
どうも

287
00:21:25,252 --> 00:21:29,289
ウェブは今や最大級の
データアクセス場所です

288
00:21:29,723 --> 00:21:35,696
第三者ウェブサイトへの
コンテンツ提供の話をします

289
00:21:37,531 --> 00:21:40,667
Storage Access APIを
今年 発表しました

290
00:21:40,968 --> 00:21:46,006
ログイン後の
第三者の埋め込みコンテンツに

291
00:21:46,106 --> 00:21:48,809
関与することができます

292
00:21:49,176 --> 00:21:52,880
インテリジェント追跡防止機能で
トラッカーとして

293
00:21:52,980 --> 00:21:55,249
分類されたドメインもです

294
00:21:55,916 --> 00:22:00,787
ただしユーザの
明確な同意が必要です

295
00:21:55,916 --> 00:22:00,787
ただしユーザの
明確な同意が必要です

296
00:22:01,622 --> 00:22:02,923
例を見ましょう

297
00:22:04,224 --> 00:22:07,628
ユーザがニュースサイトを
閲覧しています

298
00:22:08,028 --> 00:22:12,065
動画サイトの
埋め込みプレーヤーがあり

299
00:22:12,866 --> 00:22:15,802
ユーザは有料アカウントを
持っています

300
00:22:15,903 --> 00:22:20,307
動画サイトのCookieを
許可すると

301
00:22:20,407 --> 00:22:24,878
ニュースを読みながら
動画も楽しめます

302
00:22:25,646 --> 00:22:28,182
これには動画サイト側が

303
00:22:28,282 --> 00:22:30,951
Storage Access APIを
実行する必要があります

304
00:22:33,053 --> 00:22:37,224
ユーザが再生ボタンを
クリックすると

305
00:22:37,357 --> 00:22:40,194
動画サイトが
このAPIの実行をします

306
00:22:41,228 --> 00:22:44,698
これは非同期APIで
Promiseを返すので

307
00:22:44,798 --> 00:22:48,101
成功も失敗も あり得ます

308
00:22:49,670 --> 00:22:53,106
ユーザが再生ボタンを
クリックすると

309
00:22:53,640 --> 00:22:58,378
プロンプトが表示され
ニュースサイト上の―

310
00:22:58,479 --> 00:23:03,750
動画サイトの
Cookieの許可を求めます

311
00:22:58,479 --> 00:23:03,750
動画サイトの
Cookieの許可を求めます

312
00:23:04,852 --> 00:23:06,487
ユーザが許可すると

313
00:23:06,620 --> 00:23:11,258
このドメインでプロンプトは
二度と表示されません

314
00:23:12,059 --> 00:23:15,062
拒否すると再び表示されます

315
00:23:16,396 --> 00:23:18,098
許可すると

316
00:23:18,632 --> 00:23:23,337
埋め込まれたサイトに
Cookieが戻ります

317
00:23:24,371 --> 00:23:29,409
すると動画サイト側には
ログインしたユーザが

318
00:23:29,510 --> 00:23:34,348
ニュースサイトにいると
分かってしまいます

319
00:23:35,582 --> 00:23:36,884
ここからが―

320
00:23:36,984 --> 00:23:40,554
インテリジェント追跡防止機能の
重要な変更点です

321
00:23:42,022 --> 00:23:46,293
このAPI経由で
ユーザの同意がない場合

322
00:23:46,860 --> 00:23:51,398
トラッカードメインのCookieは
すぐに分割され

323
00:23:51,865 --> 00:23:54,868
第三者コンテキストで
二度と使えません

324
00:23:55,769 --> 00:24:01,508
アクセスが30日間ないと
Cookieは完全に削除されます

325
00:23:55,769 --> 00:24:01,508
アクセスが30日間ないと
Cookieは完全に削除されます

326
00:24:02,943 --> 00:24:07,014
Storage Access APIには

327
00:24:07,114 --> 00:24:10,484
30日間のインタラクション
タイマーがあります

328
00:24:11,285 --> 00:24:15,956
つまり第三者コンテキストで
サイトをよく利用するユーザは

329
00:24:16,056 --> 00:24:17,257
ログイン状態です

330
00:24:19,159 --> 00:24:21,462
ユーザは動画サイトへ―

331
00:24:21,562 --> 00:24:26,066
ホームページに直接ログインして
アクセスしたり

332
00:24:26,400 --> 00:24:29,903
第三者コンテキストで
アクセスしたりします

333
00:24:31,271 --> 00:24:35,075
最初はホームページを訪問

334
00:24:35,509 --> 00:24:42,049
サイトを利用中なので
タイマーの経過日数は０日です

335
00:24:43,650 --> 00:24:48,755
別のサイトに埋め込まれた
動画を見るたびに

336
00:24:49,790 --> 00:24:51,358
タイマーはリセットされます

337
00:24:52,359 --> 00:24:57,164
ユーザが再びホームページに
戻った時には

338
00:24:57,598 --> 00:25:01,135
経過日数は５日となっています

339
00:24:57,598 --> 00:25:01,135
経過日数は５日となっています

340
00:25:01,668 --> 00:25:04,371
実際はホームページに―

341
00:25:04,605 --> 00:25:08,976
最後にアクセスしてから
45日が経っています

342
00:25:10,277 --> 00:25:14,681
Storage Access APIは
ログインを維持し

343
00:25:15,149 --> 00:25:17,117
不要な追跡行為を防ぎます

344
00:25:19,520 --> 00:25:23,323
プライバシーは
データアクセスのためだけでなく

345
00:25:23,891 --> 00:25:30,464
ユーザの信頼を保つために
守り続けなければなりません

346
00:25:31,098 --> 00:25:33,567
データ管理が重要です

347
00:25:35,169 --> 00:25:38,772
アプリケーション開発の際に
考慮すべき―

348
00:25:38,872 --> 00:25:41,175
４つの領域の例を挙げます

349
00:25:42,443 --> 00:25:43,710
まず“削除”です

350
00:25:44,244 --> 00:25:48,482
ユーザがアプリケーションから
何かを削除したら

351
00:25:48,582 --> 00:25:50,951
その意図を尊重しましょう

352
00:25:52,920 --> 00:25:57,491
アプリケーションの外側に生じる
データフローを把握し

353
00:25:57,591 --> 00:26:03,263
システム間の整合性を
取る必要があります

354
00:25:57,591 --> 00:26:03,263
システム間の整合性を
取る必要があります

355
00:26:04,565 --> 00:26:08,669
OSはアプリケーションの
動作を知りません

356
00:26:08,769 --> 00:26:13,040
Siriショートカットなどに
情報を与えたら

357
00:26:13,407 --> 00:26:18,245
ユーザが削除した時点で
その情報も削除しましょう

358
00:26:20,714 --> 00:26:25,752
例えばユーザが連絡先から
誰かの情報を削除したら

359
00:26:25,853 --> 00:26:29,590
Siriはメッセージを
送る提案をしてはいけません

360
00:26:30,657 --> 00:26:34,228
メッセージアプリケーションの
スレッドが削除されたら

361
00:26:34,528 --> 00:26:37,464
関連する通知も消してください

362
00:26:37,564 --> 00:26:44,104
削除したスレッドからの通知が
表示されることになります

363
00:26:45,772 --> 00:26:48,709
パスワード
管理アプリケーションなら

364
00:26:48,809 --> 00:26:51,912
パスワードを
APIに付与した場合―

365
00:26:52,012 --> 00:26:56,950
ユーザがサイトを削除したら
その情報も消してください

366
00:26:59,019 --> 00:27:01,922
デバイス追跡も行いますが

367
00:26:59,019 --> 00:27:01,922
デバイス追跡も行いますが

368
00:27:02,022 --> 00:27:06,193
本日 これについて
詳しくお話しします

369
00:27:07,761 --> 00:27:11,498
デバイスに関する質問が
あるでしょう

370
00:27:12,299 --> 00:27:13,300
例えば―

371
00:27:13,534 --> 00:27:16,503
無料トライアルを終えたか？

372
00:27:17,337 --> 00:27:21,041
不正ユーザが
利用したデバイスか？

373
00:27:21,141 --> 00:27:23,477
詐欺的行為に使われたか？

374
00:27:24,511 --> 00:27:29,249
DeviceCheckというAPIが
答えてくれます

375
00:27:30,584 --> 00:27:35,956
デバイスごとに
２ビットのデータ設定ができ

376
00:27:36,123 --> 00:27:38,959
Appleが その認証を行います

377
00:27:40,260 --> 00:27:45,265
デバイスのリセットや
再インストール後も有効です

378
00:27:46,567 --> 00:27:49,336
デバイスの履歴について

379
00:27:49,436 --> 00:27:55,709
デバイスIDを明かさずに
信頼できる回答を提供します

380
00:27:58,212 --> 00:28:01,415
サポートされていない
手法に頼らず

381
00:27:58,212 --> 00:28:01,415
サポートされていない
手法に頼らず

382
00:28:01,548 --> 00:28:05,419
DeviceCheckを
採用すべきです

383
00:28:06,553 --> 00:28:11,425
プラットフォームの
エントロピーを除去しつつ

384
00:28:11,992 --> 00:28:16,797
ユーザ特定に不正利用されている
機能も除去します

385
00:28:18,131 --> 00:28:22,770
ぜひDeviceCheckで
疑問を解消してください

386
00:28:23,804 --> 00:28:27,040
正しいデータ管理をしつつ

387
00:28:27,674 --> 00:28:31,178
第三者のパートナーも
考慮すべきです

388
00:28:33,480 --> 00:28:38,752
デベロッパはアプリケーション内の
全コードに責任があります

389
00:28:39,419 --> 00:28:44,391
ライブラリで
取り込んだものも含みます

390
00:28:45,225 --> 00:28:48,929
ライブラリがユーザのデータを

391
00:28:49,096 --> 00:28:53,066
接続または転送する方法を
理解しましょう

392
00:28:53,634 --> 00:28:58,505
十分な透明性を確保するには
書いたコードだけではなく

393
00:28:58,605 --> 00:29:01,675
プライバシーへの
全体的な影響を考えましょう

394
00:28:58,605 --> 00:29:01,675
プライバシーへの
全体的な影響を考えましょう

395
00:29:02,943 --> 00:29:04,578
ジョーイも話したとおり―

396
00:29:05,045 --> 00:29:08,615
リソースへの不要なリクエストは
避けましょう

397
00:29:09,182 --> 00:29:10,717
例を挙げます

398
00:29:11,218 --> 00:29:13,253
使いたいライブラリが

399
00:29:13,353 --> 00:29:17,558
個人情報への
アクセス権を求めたとします

400
00:29:17,658 --> 00:29:22,029
それがライブラリの
機能に不要なら

401
00:29:22,696 --> 00:29:24,698
別のライブラリを探すか

402
00:29:25,065 --> 00:29:30,737
デベロッパにアクセス権要求の
削除を依頼しましょう

403
00:29:32,239 --> 00:29:36,610
次は第三者がサーバに
アクセスした場合です

404
00:29:37,811 --> 00:29:42,816
サーバから第三者へデータが
流出することがあります

405
00:29:43,584 --> 00:29:48,388
これにはアプリケーションを
支援するシステムも含まれます

406
00:29:48,489 --> 00:29:53,694
例えばネットワークの
セキュリティシステム

407
00:29:54,127 --> 00:29:58,465
顧客にパスワードの再設定を
依頼するメールプロバイダ

408
00:29:58,599 --> 00:30:01,802
第三者による
顧客支援システムなどです

409
00:29:58,599 --> 00:30:01,802
第三者による
顧客支援システムなどです

410
00:30:03,103 --> 00:30:08,175
よいデータ管理者は
全てに責任を持ち

411
00:30:08,475 --> 00:30:12,012
プライバシーに配慮して
パートナーを選びます

412
00:30:14,481 --> 00:30:17,417
次のトピックは機械学習です

413
00:30:18,085 --> 00:30:21,655
業界では
話題になっていますね

414
00:30:21,755 --> 00:30:25,726
軸は新しいアルゴリズムの
動作特性や

415
00:30:25,826 --> 00:30:28,262
クラウドベース
ソリューションの力です

416
00:30:29,096 --> 00:30:31,798
これらは重要な技術開発です

417
00:30:32,032 --> 00:30:34,268
ティムが話したとおり―

418
00:30:34,668 --> 00:30:39,439
私たちが問うべきは
“何をすべきか”です

419
00:30:40,374 --> 00:30:43,510
これは機械学習にも
当てはまる上に

420
00:30:43,744 --> 00:30:46,013
長年の課題でもあります

421
00:30:47,714 --> 00:30:52,319
Face IDはプライバシー重視の
機械学習です

422
00:30:53,353 --> 00:30:55,589
アプリケーションへの追加は

423
00:30:55,689 --> 00:31:00,694
LocalAuthentication APIを
使えば簡単です

424
00:30:55,689 --> 00:31:00,694
LocalAuthentication APIを
使えば簡単です

425
00:31:01,528 --> 00:31:04,598
ぜひ活用してください

426
00:31:05,165 --> 00:31:11,138
プライバシー重視の
機械学習を使った生体認証です

427
00:31:12,940 --> 00:31:19,346
ARKitも機械学習を使って
ユーザのデバイス環境を作ります

428
00:31:20,247 --> 00:31:27,321
ARKit 2ではアプリケーションに
その環境のマップを保存できます

429
00:31:28,522 --> 00:31:33,994
ただし このマップは
必要な時だけ集めましょう

430
00:31:34,094 --> 00:31:37,397
センシティブ情報に
なり得るので―

431
00:31:38,465 --> 00:31:45,038
誰かとマップを共有しながら
ゲームをする場合などだけです

432
00:31:45,739 --> 00:31:50,811
Game Centerを使っていれば
MultipeerConnectivity APIが

433
00:31:50,911 --> 00:31:56,150
デバイス間でモデルを移す時の
暗号化に役立ちます

434
00:31:57,918 --> 00:32:03,056
Face IDとARKitは
Appleによる開発の好例で

435
00:31:57,918 --> 00:32:03,056
Face IDとARKitは
Appleによる開発の好例で

436
00:32:03,156 --> 00:32:08,061
プライバシー重視の
機械学習が頼りです

437
00:32:08,962 --> 00:32:10,964
もっと柔軟性が欲しいなら

438
00:32:12,499 --> 00:32:18,372
Create MLとCore MLで
機械学習に独自機能を作れます

439
00:32:20,574 --> 00:32:27,314
アプリケーションに簡単に
機械学習を追加できるのです

440
00:32:28,749 --> 00:32:33,287
Create MLは機械学習モデルを
Macで直接 訓練できます

441
00:32:34,021 --> 00:32:39,293
Core MLはユーザのデバイス上で
直接モデルを評価できます

442
00:32:40,394 --> 00:32:44,698
ユーザのセンシティブ情報を
集めずに済むのです

443
00:32:45,299 --> 00:32:49,269
データ保護は
多くの技術を要しますが

444
00:32:49,703 --> 00:32:54,908
デバイス上でモデルを評価すれば
セキュリティ要件が減ります

445
00:32:55,008 --> 00:33:00,414
更に情報を保持しないので
侵害の危険性も減ります

446
00:32:55,008 --> 00:33:00,414
更に情報を保持しないので
侵害の危険性も減ります

447
00:33:01,381 --> 00:33:06,153
これらのAPIを使えば
機械学習の採用は簡単です

448
00:33:09,156 --> 00:33:15,062
プライバシーに関する質問を
開発時にしていますよね

449
00:33:15,996 --> 00:33:20,834
この重要な質問を
ジョーイと私も使っています

450
00:33:21,902 --> 00:33:25,639
しかしプライバシーの
目的を達成するなら

451
00:33:25,739 --> 00:33:29,376
機械学習には
新たな質問が必要です

452
00:33:30,477 --> 00:33:37,050
例えば 自分のモデルは
訓練データを開示するか？

453
00:33:38,318 --> 00:33:44,858
機械学習したモデルを反転させれば
訓練データを復元できます

454
00:33:45,692 --> 00:33:50,030
そうなれば予想外の
開示を招きかねません

455
00:33:50,130 --> 00:33:54,434
訓練に関わった人の情報が
公開されるのです

456
00:33:56,470 --> 00:33:59,406
学術調査が
活発に行われているので

457
00:33:59,506 --> 00:34:02,309
スライドの記事を
見てください

458
00:33:59,506 --> 00:34:02,309
スライドの記事を
見てください

459
00:34:04,344 --> 00:34:06,146
続いて 別の質問です

460
00:34:06,847 --> 00:34:10,516
ユーザの予想以上に
推測していないか？

461
00:34:11,418 --> 00:34:13,120
例えばセンサーデータで

462
00:34:13,219 --> 00:34:16,590
アクティビティを
分類するとしましょう

463
00:34:17,257 --> 00:34:18,458
ここで自問します

464
00:34:18,958 --> 00:34:24,063
このユーザが車椅子を使うと
うっかり符号化していないか？

465
00:34:25,197 --> 00:34:31,505
車椅子向けの機能を提供するなら
そう明確にすべきです

466
00:34:32,505 --> 00:34:36,208
新しいユースケースが
機械学習で見つかったら

467
00:34:36,376 --> 00:34:39,612
新たに同意を得る必要があります

468
00:34:41,081 --> 00:34:45,918
次の小さな２つの改良が
こうした問題を緩和します

469
00:34:47,321 --> 00:34:51,024
１つ目は正しいデータで
訓練すること

470
00:34:51,891 --> 00:34:56,429
つまり適切な同意の下
収集された―

471
00:34:56,730 --> 00:34:58,932
多様で十分な量のデータです

472
00:35:00,567 --> 00:35:06,073
２つ目はモデルの複雑さを
目標に比例するよう保つこと

473
00:35:07,074 --> 00:35:10,410
反転や 予期せぬ推測を招く―

474
00:35:10,911 --> 00:35:15,082
モデルの過学習を
この２つで防げます

475
00:35:16,650 --> 00:35:23,490
ユーザの信頼を得る上で
今まで挙げた質問は重要です

476
00:35:24,358 --> 00:35:28,395
プライバシーとは
人に関することだからです

477
00:35:29,363 --> 00:35:35,702
ユーザとの信頼関係を築き
彼らに敬意を払いましょう

478
00:35:36,837 --> 00:35:40,174
今回 説明した
テクニックを使えば

479
00:35:40,407 --> 00:35:46,146
プライバシーをしっかりと
保護する製品を作れます

480
00:35:48,182 --> 00:35:51,952
次の３つの要点を
覚えて帰ってください

481
00:35:52,352 --> 00:35:54,321
プライバシーは
人に関することです

482
00:35:54,922 --> 00:35:57,458
何をすべきかを
自問しましょう

483
00:35:57,858 --> 00:36:02,229
データプラクティスを
ユースケースに合わせましょう

484
00:35:57,858 --> 00:36:02,229
データプラクティスを
ユースケースに合わせましょう

485
00:36:03,897 --> 00:36:06,800
今後のセッションで
より詳細に話します

486
00:36:06,934 --> 00:36:10,003
このあと ラボにも来てください

487
00:36:10,104 --> 00:36:14,208
プライバシーを重視した
アプリケーションを作りましょう

488
00:36:14,341 --> 00:36:15,042
ありがとう

489
00:36:15,175 --> 00:36:18,946
(拍手)