
1
00:00:07,074 --> 00:00:16,183
(音楽)

2
00:00:23,757 --> 00:00:31,031
(拍手)

3
00:00:31,131 --> 00:00:31,999
おはようございます

4
00:00:32,732 --> 00:00:35,903
キース･ラウンビュラーです

5
00:00:36,904 --> 00:00:41,308
HomeKitについて
３点お話しします

6
00:00:42,543 --> 00:00:45,913
まずはHomeKitと
ホームAppの概要

7
00:00:47,014 --> 00:00:51,151
次にHomeKitの
アクセサリの作り方

8
00:00:51,952 --> 00:00:55,222
最後にAPIの使い方を
紹介します

9
00:00:57,157 --> 00:00:58,458
では始めます

10
00:01:00,994 --> 00:01:06,233
HomeKitをよく理解するため
ホームAppを見てみましょう

11
00:01:07,601 --> 00:01:11,305
全アクセサリを管理する
ホームAppには

12
00:01:12,239 --> 00:01:15,108
多くの機能が備わっています

13
00:01:15,309 --> 00:01:19,112
本日は主要な機能を
紹介します

14
00:01:20,681 --> 00:01:25,686
ホームAppはiPadとiPhone
Apple Watchで利用できます

15
00:01:28,288 --> 00:01:30,490
タブが３つあります

16
00:01:31,024 --> 00:01:36,730
ホームタブにはアクセサリと
シーンが表示されます

17
00:01:37,331 --> 00:01:40,167
部屋のタブでは―

18
00:01:40,868 --> 00:01:46,273
部屋別にアクセサリの詳細を
確認できます

19
00:01:47,241 --> 00:01:48,876
オートメーションタブでは

20
00:01:49,009 --> 00:01:53,447
スマートホームの自動化を
設定し管理できます

21
00:01:55,349 --> 00:01:58,485
アクセサリのコントロールは
簡単です

22
00:01:59,152 --> 00:02:02,189
タップ１つで操作できます

23
00:01:59,152 --> 00:02:02,189
タップ１つで操作できます

24
00:02:02,823 --> 00:02:07,461
タイルをタップすれば
照明がつきます

25
00:02:11,732 --> 00:02:17,471
3D Touchを使えば
調光器が表示され

26
00:02:17,804 --> 00:02:23,310
全体の明るさを
微調整することができます

27
00:02:23,577 --> 00:02:27,614
タイルを3Dプレスして
調光器を表示します

28
00:02:32,386 --> 00:02:34,488
シーンを追加すれば

29
00:02:35,022 --> 00:02:40,527
複数のアクセサリを
一度にコントロールできます

30
00:02:41,895 --> 00:02:45,833
シーンは複数のアクセサリを
関連付けます

31
00:02:45,999 --> 00:02:48,035
朝の雑事を済ませ

32
00:02:48,769 --> 00:02:52,172
映画観賞用に居間を整えます

33
00:02:52,272 --> 00:02:54,975
時間により家は変化します

34
00:02:55,542 --> 00:03:00,981
人が出入りし照明がついたり
消えたりします

35
00:02:55,542 --> 00:03:00,981
人が出入りし照明がついたり
消えたりします

36
00:03:01,248 --> 00:03:05,686
シーンは自分が望む状態に
整えてくれます

37
00:03:06,053 --> 00:03:09,289
就寝のシーンは照明を消し

38
00:03:09,456 --> 00:03:13,493
ブラインドを閉じ 施錠し
空調設定する

39
00:03:14,361 --> 00:03:18,398
ベッドに入って
“おやすみ”をタップすれば

40
00:03:18,966 --> 00:03:21,068
すべてが完了します

41
00:03:29,576 --> 00:03:35,082
iOSでは コントロールセンターでも
操作できます

42
00:03:35,716 --> 00:03:39,753
アクセサリを確認して
コントロールし

43
00:03:39,953 --> 00:03:42,256
シーンも実行できます

44
00:03:43,524 --> 00:03:49,363
Siriでコントロールするのも
賢い方法です

45
00:03:50,864 --> 00:03:55,002
“おはよう”と言えば
シーンが実行されます

46
00:03:56,136 --> 00:03:59,640
アクセサリも
コントロールできます

47
00:04:00,107 --> 00:04:02,376
台所の照明をつけたり

48
00:04:03,177 --> 00:04:05,312
玄関の鍵も閉められます

49
00:04:05,712 --> 00:04:08,782
カメラストリームも表示できます

50
00:04:09,850 --> 00:04:15,255
HomeKitはiOSとwatchOS
tvOSでしか

51
00:04:16,156 --> 00:04:18,291
使えませんでした

52
00:04:18,992 --> 00:04:22,496
しかし今年から
Macでも使えます

53
00:04:24,464 --> 00:04:29,436
(拍手)

54
00:04:29,603 --> 00:04:34,808
コンピュータで使えるのは
喜ばしいことです

55
00:04:35,209 --> 00:04:37,477
電話を出さずに済みます

56
00:04:39,112 --> 00:04:44,918
Macに通知が来るので
家の監視にも適しています

57
00:04:46,019 --> 00:04:50,290
MacもSiriと
インテグレートしているので

58
00:04:50,390 --> 00:04:55,762
好みのSiriのトリガで
アクセサリをコントロールできます

59
00:04:55,863 --> 00:05:02,135
新製品のHomePodは 私の
お気に入りのコントロール方法です

60
00:04:55,863 --> 00:05:02,135
新製品のHomePodは 私の
お気に入りのコントロール方法です

61
00:05:02,302 --> 00:05:04,338
スピーカーの機能だけでなく

62
00:05:04,905 --> 00:05:08,442
HomeKitのコントロールにも
優れています

63
00:05:08,542 --> 00:05:12,045
話しかければ誰でも使えます

64
00:05:13,514 --> 00:05:18,952
手を使わずSiriで
コントロールできるのです

65
00:05:20,254 --> 00:05:21,922
セットアップも簡単で

66
00:05:22,356 --> 00:05:25,792
私は照明の操作に
使っています

67
00:05:26,793 --> 00:05:31,198
荷物を抱えていても
Siriを使って

68
00:05:31,298 --> 00:05:34,101
照明がつくので
重宝しています

69
00:05:35,936 --> 00:05:38,972
HomePodのユーザからは

70
00:05:39,072 --> 00:05:42,409
おやすみシーンに最適だと
好評です

71
00:05:43,010 --> 00:05:45,846
“おやすみ”だけで
済むからです

72
00:05:47,814 --> 00:05:52,152
さらに HomePodが
効果を発揮するのが

73
00:05:53,954 --> 00:05:59,059
リモートアクセスや
オートメーションの制御です

74
00:06:00,594 --> 00:06:03,330
リモートアクセス機能で

75
00:06:03,964 --> 00:06:07,634
リモートから
家を監視できます

76
00:06:08,535 --> 00:06:13,674
“ガレージのドアを
閉め忘れていないか？”

77
00:06:13,841 --> 00:06:16,610
“サーモスタットはオフに？”

78
00:06:17,511 --> 00:06:19,379
すべて外で確認できます

79
00:06:20,614 --> 00:06:22,549
必要となるホームハブには

80
00:06:23,417 --> 00:06:29,022
HomePodやApple TV
iPadが使えます

81
00:06:32,359 --> 00:06:36,163
リモートアクセスできれば
もう安心です

82
00:06:36,763 --> 00:06:41,802
ホームのコントロールは
共有できます

83
00:06:42,469 --> 00:06:46,340
リモートアクセスへの許可は

84
00:06:46,440 --> 00:06:49,977
ユーザごとに設定できます

85
00:06:52,112 --> 00:06:54,848
リモートアクセスの仕組みを
お話しします

86
00:06:55,816 --> 00:07:01,788
家では Appleデバイスが
アクセサリに働きかけます

87
00:06:55,816 --> 00:07:01,788
家では Appleデバイスが
アクセサリに働きかけます

88
00:07:02,856 --> 00:07:06,760
リモートでは
ホームハブが要ります

89
00:07:06,860 --> 00:07:10,831
HomePodやApple TV
iPadです

90
00:07:11,532 --> 00:07:16,970
iPhoneはホームハブを通じ
アクセサリに働きかけます

91
00:07:19,473 --> 00:07:21,909
現状を把握できます

92
00:07:22,009 --> 00:07:24,444
カメラストリームを見て

93
00:07:24,611 --> 00:07:28,949
閉め忘れた鍵を
閉めることもできます

94
00:07:29,716 --> 00:07:34,321
シーンの設定は簡単だと
述べました

95
00:07:34,421 --> 00:07:38,625
オートメーションが自動的に
完了させることも可能です

96
00:07:39,126 --> 00:07:43,664
ホームAppも声も使わずに
済みます

97
00:07:46,500 --> 00:07:52,706
家に人が到着したり
所定の時刻を迎えると

98
00:07:52,806 --> 00:07:57,678
アクセサリやシーンが
自動的に実行されます

99
00:07:58,145 --> 00:08:02,449
他のアクセサリで
トリガすることもできます

100
00:07:58,145 --> 00:08:02,449
他のアクセサリで
トリガすることもできます

101
00:08:03,584 --> 00:08:10,557
裏戸を開けると照明が付いたり
外出時にエアコンが弱まるのは

102
00:08:10,657 --> 00:08:13,594
単純な
オートメーションの例です

103
00:08:15,762 --> 00:08:18,532
複雑なオートメーションも
作れます

104
00:08:19,399 --> 00:08:25,539
車庫が開いたら照明がついて
ブラインドが上がり

105
00:08:25,639 --> 00:08:30,310
車庫入れの間に
家が適温に設定される

106
00:08:30,410 --> 00:08:32,379
便利ですね

107
00:08:32,479 --> 00:08:37,284
帰宅時は買い物袋を持ち
子供の相手をし

108
00:08:37,384 --> 00:08:39,986
電話するので忙しいものです

109
00:08:40,386 --> 00:08:44,658
オートメーションを使えば
鍵を探す手間も省けます

110
00:08:47,594 --> 00:08:50,964
HomeKitの主だった特長は

111
00:08:51,632 --> 00:08:55,936
アクセサリの追加が
容易であること

112
00:08:57,237 --> 00:08:59,606
ダウンロードをして

113
00:09:00,007 --> 00:09:05,746
面倒な設定が伴うサービスは
いくらでもあります

114
00:09:06,947 --> 00:09:09,249
設定に手こずると

115
00:09:09,683 --> 00:09:12,586
イライラするはずです

116
00:09:13,921 --> 00:09:16,757
HomeKitの場合
ホームAppを起動し

117
00:09:17,524 --> 00:09:21,662
アクセサリコードを
スキャンするだけ

118
00:09:22,830 --> 00:09:24,431
それで完了です

119
00:09:24,665 --> 00:09:25,966
とても簡単です

120
00:09:27,334 --> 00:09:31,638
NFCを使えば
さらに楽になります

121
00:09:32,339 --> 00:09:33,974
ホームAppを起動し

122
00:09:34,074 --> 00:09:37,177
アクセサリを
タップして完了です

123
00:09:41,682 --> 00:09:44,918
また セキュリティや
プライバシーの確保も万全です

124
00:09:45,986 --> 00:09:48,889
やり取りはすべて暗号化され

125
00:09:49,623 --> 00:09:52,459
セッションごとに
共有鍵があります

126
00:09:54,328 --> 00:09:55,996
データはプライベートです

127
00:09:56,530 --> 00:09:59,833
Appleはカメラストリームを
見れませんし

128
00:09:59,933 --> 00:10:02,369
会話も盗聴できません

129
00:09:59,933 --> 00:10:02,369
会話も盗聴できません

130
00:10:02,469 --> 00:10:05,405
照明の状態さえ
分かりません

131
00:10:06,073 --> 00:10:08,642
プライバシーは守るべきです

132
00:10:09,877 --> 00:10:13,714
家を監視し
アクセサリをコントロールし

133
00:10:13,814 --> 00:10:15,249
シーンを実行

134
00:10:15,349 --> 00:10:18,685
すべて安全な環境で
使えるのです

135
00:10:21,622 --> 00:10:23,657
セキュリティを高めるため

136
00:10:23,757 --> 00:10:29,396
データ送信はデバイスと
アクセサリ間で行います

137
00:10:29,930 --> 00:10:32,666
クラウドは経由しません

138
00:10:35,235 --> 00:10:38,305
サーバーを使わないので

139
00:10:38,405 --> 00:10:44,244
安全性が高いだけでなく
通信速度が速くなります

140
00:10:49,016 --> 00:10:52,519
HomeKit Accessory
Protocolは

141
00:10:52,619 --> 00:10:57,324
安全にデータを
送受信するチャネルです

142
00:10:58,692 --> 00:11:02,830
データは暗号化され
読めるデバイスを限定

143
00:10:58,692 --> 00:11:02,830
データは暗号化され
読めるデバイスを限定

144
00:11:03,430 --> 00:11:06,767
つまりデータが盗まれても

145
00:11:06,867 --> 00:11:09,136
相手は理解できません

146
00:11:10,037 --> 00:11:15,242
このプロトコルはWi-Fi や
Bluetooth Low Energy上で

147
00:11:15,576 --> 00:11:18,612
IPはWi-FiやEthernet上で
有効です

148
00:11:18,712 --> 00:11:23,350
Wi-Fiは確実で速く
広範囲をサポートするので

149
00:11:23,450 --> 00:11:26,854
機器をどこへでも
設置できます

150
00:11:27,688 --> 00:11:29,957
Bluetooth Low Energyも
使えるので

151
00:11:30,424 --> 00:11:35,362
電池が必要な機器には
好都合です

152
00:11:35,996 --> 00:11:39,867
センサーなどは
配線を考えずに

153
00:11:40,334 --> 00:11:44,805
使い勝手のいいところに
設置できます

154
00:11:47,941 --> 00:11:50,277
自動化推進のため

155
00:11:50,377 --> 00:11:56,550
あらゆるカテゴリの
アクセサリが作られています

156
00:11:58,151 --> 00:12:00,454
カテゴリは増え続け

157
00:11:58,151 --> 00:12:00,454
カテゴリは増え続け

158
00:12:00,554 --> 00:12:03,690
複数のメーカーに
対応しています

159
00:12:04,057 --> 00:12:06,426
望みの製品は必ずあります

160
00:12:07,327 --> 00:12:11,465
同じカテゴリの
アクセサリなら

161
00:12:11,565 --> 00:12:14,401
違うメーカー同士で
併用できます

162
00:12:14,802 --> 00:12:18,539
HomeKitなら
選ぶのは簡単です

163
00:12:19,940 --> 00:12:23,810
AirPlay 2は
複数のスピーカーに対応し

164
00:12:25,479 --> 00:12:29,683
iOS 12はリモートコントロールに
使えます

165
00:12:30,751 --> 00:12:37,257
Siriを含めたApple TVの
リモートコントロールも可能です

166
00:12:39,593 --> 00:12:43,931
ここまではHomeKitの機能を
述べました

167
00:12:44,731 --> 00:12:48,669
次にアクセサリ作成用の
リソースを紹介します

168
00:12:50,704 --> 00:12:52,840
MFiライセンスを取得すれば

169
00:12:52,940 --> 00:12:55,776
作成は簡単に始められます

170
00:12:57,044 --> 00:13:01,181
貴重なツールを
たくさん入手できます

171
00:12:57,044 --> 00:13:01,181
貴重なツールを
たくさん入手できます

172
00:13:02,316 --> 00:13:07,721
HomeKit Accessory
Protocolは公開されています

173
00:13:08,522 --> 00:13:13,594
非商業的に体験することを
目的としているので

174
00:13:14,328 --> 00:13:17,998
学びの場としては
いいと思います

175
00:13:18,098 --> 00:13:20,601
しかし本気で始めたいなら

176
00:13:21,034 --> 00:13:26,807
MFi Programへの参加を
強くお勧めします

177
00:13:29,042 --> 00:13:33,714
プログラムの利点について
お話しします

178
00:13:35,949 --> 00:13:40,621
ライセンス取得者はツールや
リソースを入手できます

179
00:13:40,988 --> 00:13:45,959
新しいアクセサリ開発キット
“ADK”を使えば

180
00:13:46,960 --> 00:13:50,898
アクセサリの作成を
簡単に始められます

181
00:13:52,065 --> 00:13:55,002
アクセサリ上で
実行するコードで

182
00:13:55,102 --> 00:13:59,673
細かな実装を
省くことができます

183
00:14:01,108 --> 00:14:03,544
認証に使えるツールや

184
00:14:03,677 --> 00:14:07,381
ドキュメントも入手可能です

185
00:14:09,049 --> 00:14:12,653
また認証機能の構築方法など

186
00:14:13,420 --> 00:14:16,690
商業的に対応した
仕様も得られます

187
00:14:19,693 --> 00:14:22,963
ADKは開発の工程を
簡略化します

188
00:14:23,997 --> 00:14:27,134
以前はロジックの作成や

189
00:14:27,901 --> 00:14:33,640
プロトコルの適用 暗号化など
多くの手間がかかりました

190
00:14:34,041 --> 00:14:37,845
ADKは
このプロセスを省きます

191
00:14:38,045 --> 00:14:42,049
プラットフォームの
ロジックが提供され

192
00:14:42,182 --> 00:14:45,552
ADKが細かな処理をします

193
00:14:46,119 --> 00:14:51,024
アクセサリの特徴であり
労力を割きたいロジックに

194
00:14:51,124 --> 00:14:53,227
時間をかけられるのです

195
00:14:56,163 --> 00:15:01,802
(拍手)

196
00:14:56,163 --> 00:15:01,802
(拍手)

197
00:15:01,902 --> 00:15:08,242
ADKは新しいのですが
簡単さで既に高い評価を得ています

198
00:15:08,842 --> 00:15:12,579
ライセンスの新規取得者の
作成時間が

199
00:15:12,679 --> 00:15:16,617
短縮していることも確かです

200
00:15:17,851 --> 00:15:20,354
ADKの信頼性と安全性は

201
00:15:20,621 --> 00:15:24,625
テストとレビューを通じ
確保されています

202
00:15:25,626 --> 00:15:30,597
ADKは
通年更新しています

203
00:15:30,731 --> 00:15:35,702
iOSが更新され
新しいサポートが出たら

204
00:15:35,802 --> 00:15:39,273
ADKも同時進行で
更新します

205
00:15:41,408 --> 00:15:43,577
工期は早まるのか？

206
00:15:45,345 --> 00:15:47,981
ADKを使えば プロトタイプを

207
00:15:48,182 --> 00:15:50,250
１週間以内に動かせます

208
00:15:51,385 --> 00:15:54,087
全体の工期は？

209
00:15:55,155 --> 00:15:56,623
以前は―

210
00:15:57,825 --> 00:16:01,028
開発に６ヵ月かかっていました

211
00:15:57,825 --> 00:16:01,028
開発に６ヵ月かかっていました

212
00:16:01,128 --> 00:16:05,833
インテグレーションや認定を
出荷前に済ませ

213
00:16:06,433 --> 00:16:09,403
１年かかることもありました

214
00:16:11,371 --> 00:16:15,509
ADKを使えば
大幅に時間を短縮できます

215
00:16:16,477 --> 00:16:22,182
パートナーたちによれば
３ヵ月以内の出荷も可能です

216
00:16:22,783 --> 00:16:28,689
(拍手)

217
00:16:28,789 --> 00:16:32,259
ADKを活用するために

218
00:16:32,359 --> 00:16:34,895
MFi Programに
参加してください

219
00:16:34,995 --> 00:16:40,501
現場で使われている
ADKの情報を入手できます

220
00:16:42,102 --> 00:16:45,739
認証について説明しましょう

221
00:16:46,373 --> 00:16:49,309
認証はMFi Programの
重要な項目です

222
00:16:49,877 --> 00:16:52,913
ユーザはAppleロゴを

223
00:16:53,046 --> 00:16:55,282
品質の証しと信じています

224
00:16:55,616 --> 00:16:59,553
HomeKitのアクセサリも―

225
00:17:01,388 --> 00:17:05,959
慎重にレビューされた
製品だと思われています

226
00:17:06,960 --> 00:17:09,829
App Store Reviewと同様

227
00:17:10,230 --> 00:17:13,200
レビュー方法が
決まっています

228
00:17:14,034 --> 00:17:17,438
品質が一定の水準に達し

229
00:17:17,838 --> 00:17:20,307
出荷可能か確かめます

230
00:17:22,209 --> 00:17:24,111
認定を終えたら―

231
00:17:26,113 --> 00:17:28,382
オンボーディング用に
認証スタックを使います

232
00:17:29,883 --> 00:17:32,753
こうして確かな品質を得ます

233
00:17:33,487 --> 00:17:36,557
認証は
ハードウェアのチップや

234
00:17:37,057 --> 00:17:39,593
ソフトウェア経由で行えます

235
00:17:41,995 --> 00:17:44,865
MFiライセンスの取得者は

236
00:17:44,965 --> 00:17:48,035
メーカーの協力も得られます

237
00:17:48,936 --> 00:17:52,639
HomeKitアクセサリの
アイデアがあるなら

238
00:17:52,739 --> 00:17:55,776
この機会を生かしてください

239
00:17:57,878 --> 00:18:01,148
認証はハードウェアベース
だけでなく―

240
00:17:57,878 --> 00:18:01,148
認証はハードウェアベース
だけでなく―

241
00:18:03,383 --> 00:18:06,920
ソフトウェアベースでも
行っています

242
00:18:09,656 --> 00:18:13,160
品質や安全性の高さは
変わりません

243
00:18:13,594 --> 00:18:16,563
インテグレーションは
ファームウェア経由で―

244
00:18:18,165 --> 00:18:23,637
出荷済みのアクセサリにも
ロールアウトできます

245
00:18:26,273 --> 00:18:29,843
他に３つのツールを
ご紹介します

246
00:18:30,711 --> 00:18:36,383
１つ目のリソースは
ライセンスの取得者用です

247
00:18:36,483 --> 00:18:38,786
その名は
HomeKit Accessory Tester

248
00:18:39,152 --> 00:18:44,958
アクセサリをテストする簡単な
インターフェイスを可能にします

249
00:18:45,993 --> 00:18:50,964
品質がレビュー段階に
届いているか確かめます

250
00:18:53,200 --> 00:18:57,404
２つ目は
HomeKit Certification Assistant

251
00:18:59,239 --> 00:19:02,443
MFi Programに参加すれば

252
00:18:59,239 --> 00:19:02,443
MFi Programに参加すれば

253
00:19:02,543 --> 00:19:05,546
こちらも入手できます

254
00:19:06,180 --> 00:19:09,049
１つ目と合わせて使えます

255
00:19:09,917 --> 00:19:12,819
アクセサリを自分で認定し

256
00:19:13,720 --> 00:19:17,724
テスト過程を
自動化させます

257
00:19:20,561 --> 00:19:24,464
３つ目は
HomeKit Accessory Simulator

258
00:19:25,499 --> 00:19:28,902
アプリケーション
デベロッパ用のツールで

259
00:19:29,102 --> 00:19:31,805
アクセサリを
シュミレートします

260
00:19:33,207 --> 00:19:35,342
アプリケーションが
すべての―

261
00:19:35,442 --> 00:19:38,946
アクセサリと機能するか
確かめられます

262
00:19:39,413 --> 00:19:44,751
各種アクセサリを購入せずに
テストできるわけです

263
00:19:46,854 --> 00:19:49,423
Xcodeや
MFi Programで

264
00:19:49,523 --> 00:19:51,592
ツールは入手できます

265
00:19:53,093 --> 00:19:57,664
多くのアクセサリを備えた
ホームを設定するのに

266
00:19:57,764 --> 00:20:00,434
社内でも使っています

267
00:19:57,764 --> 00:20:00,434
社内でも使っています

268
00:20:01,635 --> 00:20:05,339
実際の機器も
試したくなるでしょう

269
00:20:07,641 --> 00:20:13,113
HomeKitのアクセサリではなく
アプリケーションについては？

270
00:20:15,048 --> 00:20:19,620
作成には
何が必要でしょうか？

271
00:20:22,055 --> 00:20:27,394
どうすれば他と差別化を
図れるのでしょうか？

272
00:20:28,862 --> 00:20:33,100
ターゲットの客層を
絞ることが重要なので

273
00:20:34,535 --> 00:20:39,306
カスタム機能の拡張が
必要かも知れません

274
00:20:40,874 --> 00:20:43,610
まだApp Storeにない―

275
00:20:43,710 --> 00:20:48,248
地域特有の機能を
提供することも可能です

276
00:20:51,051 --> 00:20:55,923
MFiライセンスを取得し
開発を手掛けたら

277
00:20:56,290 --> 00:21:01,295
カスタムサービスなどの
サポートが要るかもしれません

278
00:20:56,290 --> 00:21:01,295
カスタムサービスなどの
サポートが要るかもしれません

279
00:21:02,696 --> 00:21:06,433
最後にHomeKitのAPIを
ご紹介します

280
00:21:06,967 --> 00:21:08,836
本題に入る前に

281
00:21:08,936 --> 00:21:14,107
まずオジェクトの階層を
見てみましょう

282
00:21:15,509 --> 00:21:20,581
中心となるオブジェクト
HMHomeです

283
00:21:21,782 --> 00:21:24,451
これは家全体に相当します

284
00:21:26,019 --> 00:21:31,191
HMHomeの中には
HMZoneがあります

285
00:21:31,325 --> 00:21:34,461
１階や２階などのことです

286
00:21:35,429 --> 00:21:37,498
HMRoomもあります

287
00:21:37,664 --> 00:21:40,400
台所や居間
ダイニング 寝室など

288
00:21:40,500 --> 00:21:43,270
個々の部屋と関連しています

289
00:21:45,639 --> 00:21:48,909
部屋の中には
HMAccessoryがあり

290
00:21:49,543 --> 00:21:54,915
照明や換気扇などの機器が
サポートされています

291
00:21:56,316 --> 00:21:59,453
HMHomeはHMZoneから

292
00:21:59,720 --> 00:22:02,456
HMZoneはHMRoomから
成っています

293
00:21:59,720 --> 00:22:02,456
HMZoneはHMRoomから
成っています

294
00:22:02,589 --> 00:22:05,359
HMRoomには
HMAccessoryがあります

295
00:22:09,296 --> 00:22:11,331
プロパティもありますが

296
00:22:12,366 --> 00:22:16,136
ホームは
核となるオブジェクトです

297
00:22:17,771 --> 00:22:21,542
ここでアクセサリを作り
部屋を設定し―

298
00:22:21,675 --> 00:22:25,012
シーンやオートメーションを
加えます

299
00:22:26,280 --> 00:22:28,482
家を複数持っているユーザは

300
00:22:29,216 --> 00:22:33,954
家の管理に
HMHomeManagerを使います

301
00:22:34,521 --> 00:22:38,258
家を追加したり
削除する場合は

302
00:22:38,826 --> 00:22:41,395
HMHomeManagerのAPIを
使います

303
00:22:45,599 --> 00:22:50,871
ホームのコントロールは
他のユーザと共有できます

304
00:22:52,439 --> 00:22:54,708
アクセスコントロールの
権限もあり

305
00:22:54,808 --> 00:22:58,445
配偶者や同居人にも
特権を与えられます

306
00:22:59,279 --> 00:23:04,718
管理者にはシーンの変更や
アクセサリの追加など

307
00:22:59,279 --> 00:23:04,718
管理者にはシーンの変更や
アクセサリの追加など

308
00:23:04,818 --> 00:23:07,287
全権限が与えられます

309
00:23:09,523 --> 00:23:13,360
通常のアクセス権だけ
与えられた場合

310
00:23:13,460 --> 00:23:17,164
アクセサリの変更は
できません

311
00:23:18,298 --> 00:23:20,134
非管理者の扱いです

312
00:23:21,135 --> 00:23:23,737
デベロッパは注意しましょう

313
00:23:24,204 --> 00:23:28,909
管理者以外のユーザには
主要な機能を無効にし

314
00:23:29,076 --> 00:23:33,814
実行時に問題がないように
しておきましょう

315
00:23:36,817 --> 00:23:40,420
HMHomeオブジェクトを通じ
ユーザ管理を行うのは

316
00:23:41,155 --> 00:23:44,491
一般的な設計のパターンです

317
00:23:44,992 --> 00:23:48,295
基本的な機能が
見えるからです

318
00:23:50,998 --> 00:23:53,634
サンプルコードを
見ましょう

319
00:23:55,435 --> 00:24:01,108
HMHomeManagerのインスタンスを
生成するクラスがあります

320
00:23:55,435 --> 00:24:01,108
HMHomeManagerのインスタンスを
生成するクラスがあります

321
00:24:02,409 --> 00:24:05,812
homeManagerに
ホームを足すため

322
00:24:05,946 --> 00:24:09,950
addHomeのAPIを使い
名前を指定します

323
00:24:11,084 --> 00:24:13,453
コールバックを
得られるように

324
00:24:13,554 --> 00:24:16,023
自分をデリゲートにします

325
00:24:17,324 --> 00:24:23,030
ホームのユーザを指定し
manageUsersを呼び出します

326
00:24:27,601 --> 00:24:31,305
HMZoneについてお話しします

327
00:24:31,738 --> 00:24:34,908
ゾーンは複数の部屋を
グループ化します

328
00:24:36,210 --> 00:24:38,078
１階や２階です

329
00:24:38,512 --> 00:24:42,082
または寝室すべてを
１ゾーンにします

330
00:24:43,550 --> 00:24:47,888
ゾーンには名前など
基本的なプロパティの他に

331
00:24:47,988 --> 00:24:50,657
固有の識別子もあります

332
00:24:51,325 --> 00:24:56,063
これで どのゾーンかを
識別するためです

333
00:24:56,163 --> 00:24:59,032
名前や部屋が変わっても

334
00:24:59,132 --> 00:25:02,135
そのゾーンに
アクセスできます

335
00:24:59,132 --> 00:25:02,135
そのゾーンに
アクセスできます

336
00:25:04,071 --> 00:25:07,274
HMRoomオブジェクト上にも

337
00:25:07,374 --> 00:25:10,244
名前やアクセサリが
並んでいます

338
00:25:10,344 --> 00:25:15,082
固有の識別子から
部屋の判別もできます

339
00:25:17,918 --> 00:25:22,189
部屋とゾーンは
HMHome APIで管理します

340
00:25:22,289 --> 00:25:27,361
部屋やゾーンを追加
もしくは削除する場合

341
00:25:28,061 --> 00:25:31,265
HMHome APIから行います

342
00:25:33,467 --> 00:25:34,701
サンプルコードに戻り

343
00:25:35,636 --> 00:25:37,438
他を見てみましょう

344
00:25:40,541 --> 00:25:44,645
roomNameを使い
部屋を追加し

345
00:25:46,146 --> 00:25:49,616
zoneNameを使い
ゾーンを追加します

346
00:25:50,884 --> 00:25:53,620
次に部屋をゾーンに
関連付けます

347
00:25:58,192 --> 00:26:01,328
オブジェクト階層の
次のレベルは

348
00:25:58,192 --> 00:26:01,328
オブジェクト階層の
次のレベルは

349
00:26:01,428 --> 00:26:05,666
アクセサリとサービス
そしてキャラクタの関係です

350
00:26:06,333 --> 00:26:10,204
アクセサリがサービスを含み

351
00:26:10,304 --> 00:26:12,673
サービスがキャラクタを
含んでいます

352
00:26:13,207 --> 00:26:17,745
機器を取り上げ
関係を見てみましょう

353
00:26:19,546 --> 00:26:21,849
シーリングファンは―

354
00:26:22,883 --> 00:26:26,453
１つのアクセサリとして扱います

355
00:26:27,087 --> 00:26:28,789
照明と―

356
00:26:30,724 --> 00:26:32,192
扇風機があります

357
00:26:33,961 --> 00:26:37,431
マップ先は
照明サービスと―

358
00:26:38,499 --> 00:26:40,634
扇風機サービスです

359
00:26:42,135 --> 00:26:47,341
これらサービスには
一般的なキャラクタ以外にも

360
00:26:47,708 --> 00:26:51,612
固有のキャラクタもあります

361
00:26:52,212 --> 00:26:55,282
照明のキャラクタは

362
00:26:55,382 --> 00:26:58,318
電力 輝度 そして彩度

363
00:26:59,786 --> 00:27:04,992
扇風機のキャラクタは
電力 回転速度 回転方向

364
00:26:59,786 --> 00:27:04,992
扇風機のキャラクタは
電力 回転速度 回転方向

365
00:27:07,027 --> 00:27:09,263
照明の彩度や色は

366
00:27:09,963 --> 00:27:13,534
任意のキャラクタと言えます

367
00:27:15,536 --> 00:27:20,774
ユーザが選べるように
APIはこれらも提供します

368
00:27:21,942 --> 00:27:27,548
HMAccessoryの
シーリングファンがあります

369
00:27:28,715 --> 00:27:33,654
HMServiceの照明と
扇風機のサービスがあり

370
00:27:34,588 --> 00:27:38,659
HMCharacteristicの
キャラクタがあります

371
00:27:42,062 --> 00:27:44,464
APIを見てみます

372
00:27:45,532 --> 00:27:47,935
HMAccessoryがあり

373
00:27:48,235 --> 00:27:51,071
コントロールしている
アクセサリが分かります

374
00:27:51,972 --> 00:27:54,842
プロパティは 名前や―

375
00:27:56,043 --> 00:27:58,245
サービスのリスト

376
00:27:59,580 --> 00:28:01,415
ファームウェアの
バージョンなどです

377
00:27:59,580 --> 00:28:01,415
ファームウェアの
バージョンなどです

378
00:28:02,516 --> 00:28:06,687
どんなものがあるか
知ってもらうために

379
00:28:06,787 --> 00:28:10,157
プロパティの一部を
紹介しました

380
00:28:12,593 --> 00:28:14,962
HMServiceには

381
00:28:15,729 --> 00:28:19,099
キャラクタのリストが
あります

382
00:28:20,300 --> 00:28:23,203
名前の更新用に
setterメソッドもあります

383
00:28:24,771 --> 00:28:27,374
名前の更新は重要です

384
00:28:29,376 --> 00:28:35,916
SiriとホームAppは名前で
アクセサリと接するからです

385
00:28:37,551 --> 00:28:39,620
デフォルト名は慎重に選びましょう

386
00:28:41,021 --> 00:28:44,124
シリアルナンバーや

387
00:28:44,224 --> 00:28:48,395
MACアドレスなどは
避けてください

388
00:28:48,495 --> 00:28:52,399
Siriに話しかけるのが
難しくなります

389
00:28:55,169 --> 00:29:00,407
特殊文字や番号 絵文字や
句読点も避けましょう

390
00:28:55,169 --> 00:29:00,407
特殊文字や番号 絵文字や
句読点も避けましょう

391
00:29:01,308 --> 00:29:05,412
アクセサリへの指示が
伝わりにくくなります

392
00:29:09,750 --> 00:29:13,921
サービスの種類は
40以上あります

393
00:29:14,388 --> 00:29:18,292
照明や空調設定
ガレージのドア

394
00:29:18,392 --> 00:29:21,261
コンセント センサーなど

395
00:29:21,762 --> 00:29:25,666
カスタムサービスのタイプも
設定できます

396
00:29:28,469 --> 00:29:31,305
ホームに
アクセサリを追加する際

397
00:29:31,538 --> 00:29:34,641
HMHomeのヘルパーメソッドに
戻ります

398
00:29:35,109 --> 00:29:37,311
簡単に使えますが

399
00:29:37,411 --> 00:29:40,047
例を見てみましょう

400
00:29:41,582 --> 00:29:43,550
addAccessoryのAPIは

401
00:29:44,651 --> 00:29:47,721
HomeのUIビューサービスを
呼びます

402
00:29:48,222 --> 00:29:52,092
先に述べた
アクセサリ追加フローで

403
00:29:52,459 --> 00:29:57,898
QRコードやNFCを使い
アクセサリを追加します

404
00:30:00,434 --> 00:30:06,940
最後にaddAndSetupAccessories
WithPayloadを紹介します

405
00:30:08,909 --> 00:30:15,048
ペイロードを使い有効化のための
アクセサリコードを渡します

406
00:30:15,716 --> 00:30:19,553
ソフトウェアの認証に
便利なAPIです

407
00:30:20,087 --> 00:30:26,226
アクセサリをHomeKitコードなしに
出荷した例を考えます

408
00:30:27,427 --> 00:30:33,066
ファームウェア経由で
アクセサリを更新しています

409
00:30:33,433 --> 00:30:38,839
ユーザがコードを覚える手間は
避けたいところです

410
00:30:39,239 --> 00:30:42,910
このAPIを使えば
HomeKitのコードを渡し

411
00:30:43,010 --> 00:30:46,180
手間なく
アクセサリを追加できます

412
00:30:48,081 --> 00:30:51,685
MFiライセンス取得者向けの
APIです

413
00:30:52,252 --> 00:30:55,222
問い合わせはMFiの代表まで

414
00:30:58,959 --> 00:31:02,896
ホームに
アクセサリを追加するには

415
00:30:58,959 --> 00:31:02,896
ホームに
アクセサリを追加するには

416
00:31:03,997 --> 00:31:09,503
addAndSetupAccessoriesを
呼び出すだけです

417
00:31:12,372 --> 00:31:16,276
前に説明したシーンについて

418
00:31:16,376 --> 00:31:17,811
詳しく述べます

419
00:31:19,079 --> 00:31:24,685
シーンは複数のアクセサリを
併せてコントロールします

420
00:31:26,520 --> 00:31:29,056
お勧めのシーンもありますが

421
00:31:29,523 --> 00:31:33,026
カスタマイズもできます

422
00:31:37,097 --> 00:31:41,502
シーンはSiriで操作できます

423
00:31:41,802 --> 00:31:44,838
シーンの名前を言えば

424
00:31:45,272 --> 00:31:48,742
そのシーンが実行されます

425
00:31:52,112 --> 00:31:54,114
HomeKitではシーンを

426
00:31:54,448 --> 00:31:56,583
HMActionSetと呼びます

427
00:31:57,251 --> 00:32:01,121
帰宅時を考えてみましょう

428
00:31:57,251 --> 00:32:01,121
帰宅時を考えてみましょう

429
00:32:01,989 --> 00:32:04,625
HMActionのリストを作り

430
00:32:07,394 --> 00:32:10,097
アクションセットと
関連付けます

431
00:32:11,665 --> 00:32:12,933
HMActionSetは

432
00:32:13,634 --> 00:32:17,805
個々のHMActionを
含んでいます

433
00:32:21,208 --> 00:32:23,811
定義済みのシーンがあります

434
00:32:24,111 --> 00:32:25,212
起床や―

435
00:32:26,647 --> 00:32:27,681
就寝

436
00:32:30,551 --> 00:32:32,252
外出や―

437
00:32:33,287 --> 00:32:34,488
帰宅など

438
00:32:35,722 --> 00:32:39,993
組み合わせの
参考にしてもらうだけでなく

439
00:32:40,627 --> 00:32:43,697
実用的なアクセサリを
選びました

440
00:32:45,499 --> 00:32:48,769
映画鑑賞の照明の設定など

441
00:32:48,969 --> 00:32:52,105
ユーザによる定義も可能です

442
00:32:56,210 --> 00:33:00,714
HMHomeのAPIに戻り
追加すれば

443
00:32:56,210 --> 00:33:00,714
HMHomeのAPIに戻り
追加すれば

444
00:33:00,814 --> 00:33:05,652
アクションセットを
実行できるのです

445
00:33:07,221 --> 00:33:10,490
ビルドインされた
アクションセットに

446
00:33:11,825 --> 00:33:14,027
アクセスする方法もあります

447
00:33:18,699 --> 00:33:20,667
コードを見てみましょう

448
00:33:20,901 --> 00:33:26,874
生成にはaddActionSet
WithNameを呼び出し

449
00:33:26,974 --> 00:33:28,909
名前を入れます

450
00:33:29,676 --> 00:33:33,013
アクションごとに
同じ手順を繰り返し

451
00:33:33,480 --> 00:33:36,016
アクションセットに
追加します

452
00:33:37,885 --> 00:33:40,487
シーンを実行させたければ

453
00:33:41,121 --> 00:33:44,758
excuteActionSetを
呼ぶだけです

454
00:33:48,896 --> 00:33:52,099
UIやSiriも使えますが

455
00:33:52,566 --> 00:33:54,968
オートメーションも
設定できます

456
00:33:55,602 --> 00:34:01,208
オートメーションの
トリガには選択肢があります

457
00:33:55,602 --> 00:34:01,208
オートメーションの
トリガには選択肢があります

458
00:34:02,509 --> 00:34:04,244
ジオフェンスが使えます

459
00:34:04,344 --> 00:34:07,648
家に近付けば照明が点灯

460
00:34:08,315 --> 00:34:09,716
時間を設定して

461
00:34:09,817 --> 00:34:12,286
起床前に暖房が可能です

462
00:34:13,719 --> 00:34:15,155
アクセサリ側では

463
00:34:15,255 --> 00:34:18,125
モーションセンサーでの点灯も

464
00:34:19,092 --> 00:34:20,860
人の出入りでは

465
00:34:21,428 --> 00:34:24,164
外出すれば
照明が消えます

466
00:34:30,270 --> 00:34:33,674
トリガもアクションセットで
構成され

467
00:34:34,141 --> 00:34:38,946
HMTriggerのAPIでは
もっぱら 名前付け―

468
00:34:40,013 --> 00:34:40,914
追加

469
00:34:42,248 --> 00:34:43,350
有効化などです

470
00:34:46,687 --> 00:34:52,592
オートメーションの回数は
１回でも複数でも構いません

471
00:34:53,960 --> 00:34:59,099
その時だけでもいいし
毎日でもいいのです

472
00:34:59,867 --> 00:35:04,338
平日や金曜だけという
設定もできます

473
00:34:59,867 --> 00:35:04,338
平日や金曜だけという
設定もできます

474
00:35:05,005 --> 00:35:10,310
オートメーションの頻度は
自由に選べるのです

475
00:35:13,113 --> 00:35:17,184
HMTriggerの作り方と
追加方法を説明します

476
00:35:18,185 --> 00:35:21,955
オートメーションを
毎晩７時に実行するとします

477
00:35:23,190 --> 00:35:28,228
日付のコンポーネントを
作り 夜７時に設定し―

478
00:35:29,429 --> 00:35:32,666
暦のイベントを作ります

479
00:35:34,802 --> 00:35:37,504
そのイベントで
トリガを作ります

480
00:35:39,540 --> 00:35:41,575
ホームにトリガを追加し―

481
00:35:43,277 --> 00:35:45,546
トリガにアクションセットを
追加します

482
00:35:47,314 --> 00:35:50,718
これでオートメーションは
毎晩７時に実行です

483
00:35:50,918 --> 00:35:53,854
毎晩７時に照明が
つくとしたら

484
00:35:55,522 --> 00:35:58,058
困る時もあります

485
00:35:58,926 --> 00:36:01,495
７時に暗くならない時も

486
00:35:58,926 --> 00:36:01,495
７時に暗くならない時も

487
00:36:01,595 --> 00:36:04,498
７時前に暗くなる時も
あります

488
00:36:04,598 --> 00:36:06,767
７時過ぎに暗くなる時は

489
00:36:07,101 --> 00:36:10,304
７時に照明は
要らないでしょう

490
00:36:12,172 --> 00:36:15,943
“有意なタイムイベント”
と称し

491
00:36:16,577 --> 00:36:18,879
日の出や日没を考慮します

492
00:36:20,380 --> 00:36:22,349
前の例でいうと

493
00:36:22,683 --> 00:36:27,287
毎晩７時という設定を
変更できます

494
00:36:28,689 --> 00:36:31,291
相対的に時間をオフセットし

495
00:36:31,391 --> 00:36:35,529
日没の30分前に
照明をつけることもできます

496
00:36:37,731 --> 00:36:41,668
では前のコードに戻って
変更を加え

497
00:36:42,202 --> 00:36:46,507
毎晩日没の30分前に
つくよう設定します

498
00:36:47,674 --> 00:36:52,746
まず日付のコンポーネントを
30分に変更し

499
00:36:53,213 --> 00:36:58,118
日没30分前に実行したいので
マイナス30とします

500
00:36:59,286 --> 00:37:04,258
有意なタイムイベントを作り
オフセットを入れます

501
00:36:59,286 --> 00:37:04,258
有意なタイムイベントを作り
オフセットを入れます

502
00:37:05,926 --> 00:37:09,363
トリガを作り
日没のイベントを入れます

503
00:37:11,932 --> 00:37:13,834
ホームにトリガを追加し

504
00:37:13,934 --> 00:37:18,338
トリガにアクションセットを
追加するコードを実行します

505
00:37:22,676 --> 00:37:25,279
自動化が不要な時もあります

506
00:37:26,113 --> 00:37:29,483
家を空けていれば
暖房は要らないし

507
00:37:30,751 --> 00:37:35,522
日中なら 玄関を開けても
照明は不要でしょう

508
00:37:37,391 --> 00:37:40,327
“条件”にも対応するのです

509
00:37:41,428 --> 00:37:43,831
特定の日時や

510
00:37:44,398 --> 00:37:46,300
人の出入り

511
00:37:47,234 --> 00:37:50,838
あるいは
アクセサリの状態や

512
00:37:53,273 --> 00:37:55,609
有意なイベントなど

513
00:37:59,246 --> 00:38:01,248
私の家の設定では

514
00:37:59,246 --> 00:38:01,248
私の家の設定では

515
00:38:02,149 --> 00:38:04,952
人が出かけたら
照明が消えます

516
00:38:05,652 --> 00:38:07,754
便利な機能ですが

517
00:38:09,423 --> 00:38:14,428
私が居ても 妻が出かけると
消灯してしまいます

518
00:38:16,129 --> 00:38:20,134
この場合
家から誰もいなくなったら

519
00:38:20,234 --> 00:38:23,804
照明を消すように
設定できます

520
00:38:25,606 --> 00:38:28,875
これには
プレディケートを使います

521
00:38:30,577 --> 00:38:32,546
サンプルコードを
見てみましょう

522
00:38:34,581 --> 00:38:36,483
ここにあるのは

523
00:38:37,117 --> 00:38:42,256
日没時間のオフセットに
使ったコードです

524
00:38:43,724 --> 00:38:45,559
ユーザが在宅時は―

525
00:38:47,294 --> 00:38:49,429
在宅というイベントです

526
00:38:50,731 --> 00:38:54,468
そのイベントを使い
プレディケートを作り

527
00:38:56,370 --> 00:38:59,173
トリガの生成に入れます

528
00:39:01,241 --> 00:39:05,479
ホームにトリガを追加した
コードに戻り

529
00:39:07,147 --> 00:39:09,016
アクションセットを追加

530
00:39:13,120 --> 00:39:17,357
初めは毎晩７時に実行される
オートメーションでした

531
00:39:18,225 --> 00:39:20,794
それが毎晩日没30分前に―

532
00:39:21,762 --> 00:39:25,466
人が居れば照明が
つくように変更されました

533
00:39:31,705 --> 00:39:34,675
HomeKitのカメラも
サポートしています

534
00:39:36,009 --> 00:39:37,744
HomeKitのAPIを使えば

535
00:39:39,012 --> 00:39:41,181
ライブストリームが見れます

536
00:39:42,115 --> 00:39:46,153
静止画も見れて
カメラの設定も変更でき

537
00:39:47,054 --> 00:39:52,559
スピーカーの音量やマイクも
コントロールできます

538
00:39:54,862 --> 00:39:57,631
サンプルコードを見てみます

539
00:40:02,903 --> 00:40:07,708
カメラのストリームを
開始させる関数があります

540
00:40:09,677 --> 00:40:12,679
コールバックを
得られるように

541
00:40:12,780 --> 00:40:15,048
自分をデリゲートにします

542
00:40:17,117 --> 00:40:20,320
開始には
startStream APIを使います

543
00:40:21,555 --> 00:40:24,425
カメラビューも生成し

544
00:40:25,426 --> 00:40:27,661
ビューの階層に加えます

545
00:40:28,562 --> 00:40:31,131
これでストリームが
表示されます

546
00:40:34,201 --> 00:40:37,104
あとでコールバックを
受け取ります

547
00:40:37,204 --> 00:40:40,307
HMCameraStream
ControlDelegateを使い

548
00:40:41,942 --> 00:40:47,014
デリゲートのコールバックはcamera
StreamControlDidStartStream

549
00:40:48,515 --> 00:40:52,386
あとはカメラソースを
設定すれば完了です

550
00:40:54,788 --> 00:40:56,924
サンプルコードは
以上ですが

551
00:40:57,558 --> 00:41:01,328
オンラインに
多数のドキュメントがあります

552
00:40:57,558 --> 00:41:01,328
オンラインに
多数のドキュメントがあります

553
00:41:04,565 --> 00:41:09,737
本日をきっかけに
Homekitを学んでください

554
00:41:10,270 --> 00:41:15,876
MFi Programに参加すれば
多くの特典があります

555
00:41:16,577 --> 00:41:19,546
ライセンス取得は簡単です

556
00:41:20,180 --> 00:41:22,249
ラボをお訪ねください

557
00:41:23,417 --> 00:41:25,686
ライセンスをお持ちなら

558
00:41:25,886 --> 00:41:30,290
MFiの代表者に連絡し
最新ツールを入手しましょう

559
00:41:33,994 --> 00:41:39,099
新しいADKで
アクセサリの売り出しが容易に

560
00:41:40,100 --> 00:41:45,072
ファームウェアの更新を通じ
アクセサリを作るのも

561
00:41:45,806 --> 00:41:48,375
初めてアクセサリを
作るのも簡単です

562
00:41:49,576 --> 00:41:53,747
Siriのサポートを得て
他のアクセサリとも

563
00:41:54,415 --> 00:41:56,583
インテグレートできます

564
00:41:58,752 --> 00:42:01,789
すばらしいアクセサリを
思いつくでしょう

565
00:41:58,752 --> 00:42:01,789
すばらしいアクセサリを
思いつくでしょう

566
00:42:03,290 --> 00:42:09,463
これらAPIを使い ユーザに
ユニークなエクスペリエンスを

567
00:42:09,797 --> 00:42:13,100
HomeKitを
活用しましょう

568
00:42:17,304 --> 00:42:21,775
情報の詳細
及びプレゼンへの質問は

569
00:42:22,676 --> 00:42:25,679
こちら もしくは私たちまで

570
00:42:26,013 --> 00:42:28,882
Technology Lab12で―

571
00:42:30,017 --> 00:42:31,552
お待ちしています

572
00:42:32,052 --> 00:42:34,922
ご清聴
ありがとうございました

573
00:42:35,022 --> 00:42:40,094
(拍手)