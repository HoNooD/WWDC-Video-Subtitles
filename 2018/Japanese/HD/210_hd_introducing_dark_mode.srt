
1
00:00:07,074 --> 00:00:16,383
(音楽)

2
00:00:24,091 --> 00:00:29,062
(拍手)

3
00:00:29,162 --> 00:00:33,333
こんにちは
ダークモード入門編です

4
00:00:33,433 --> 00:00:38,605
レイモンド･セプルヴェダ
macOSのデザイナーです

5
00:00:38,705 --> 00:00:42,943
前半は まず
ダークモードの設計理念を

6
00:00:43,043 --> 00:00:45,078
私から説明します

7
00:00:45,179 --> 00:00:48,582
アプリケーションの
アップデートに際し

8
00:00:48,682 --> 00:00:52,019
考慮すべき点もお伝えします

9
00:00:52,119 --> 00:00:54,521
セッション後半の担当は

10
00:00:54,621 --> 00:00:59,126
エンジニアのレイチェルと
Cocoaチームのテイラーです

11
00:00:59,226 --> 00:01:02,930
ダークモードを
採用する方法を

12
00:00:59,226 --> 00:01:02,930
ダークモードを
採用する方法を

13
00:01:03,030 --> 00:01:05,933
サンプルを使って説明します

14
00:01:06,033 --> 00:01:10,470
３人とも早く話したいので
始めましょう

15
00:01:11,839 --> 00:01:13,674
Keynoteのとおり―

16
00:01:13,774 --> 00:01:17,244
macOS 10.14には
新しい色調が入ります

17
00:01:17,344 --> 00:01:19,913
ダークモードです

18
00:01:20,314 --> 00:01:24,084
このデザインは
魅力的であると同時に

19
00:01:24,184 --> 00:01:27,154
落ち着いていて渋めです

20
00:01:27,254 --> 00:01:31,625
画面を暗くできるのは
クリエイターに朗報です

21
00:01:31,725 --> 00:01:36,129
画像や動画といった
細かく カラフルな素材を

22
00:01:36,230 --> 00:01:38,465
常に扱っている人々です

23
00:01:38,732 --> 00:01:43,170
でも 全ユーザが
恩恵を受けるでしょう

24
00:01:43,270 --> 00:01:47,574
コンテンツに
集中しやすくなるからです

25
00:01:47,808 --> 00:01:51,411
傑作小説の執筆に
集中したい人や

26
00:01:51,512 --> 00:01:55,249
眠るパートナーの横で
本を読む人

27
00:01:55,349 --> 00:01:58,552
どちらにも適したモードです

28
00:02:03,156 --> 00:02:05,659
ライトとダーク
両モードは―

29
00:02:05,759 --> 00:02:09,062
よく似た
インターフェイスです

30
00:02:09,163 --> 00:02:13,233
ユーザに 気軽に
明暗を切り替えて

31
00:02:13,333 --> 00:02:17,571
用途に合う色調を
決めてほしいからです

32
00:02:17,671 --> 00:02:23,477
よって コントロール部分や
レイアウトや半透明な素材を

33
00:02:23,577 --> 00:02:27,948
明暗両方のモードで
極力そろえました

34
00:02:28,582 --> 00:02:34,354
すべてのアプリケーションが
両モードを存分に生かせて

35
00:02:34,454 --> 00:02:40,294
正常にアップデートが
できることも重視しました

36
00:02:40,394 --> 00:02:44,798
アピアランスが不統一だと
困りますからね

37
00:02:46,200 --> 00:02:49,436
総じて 出来栄えに満足です

38
00:02:49,536 --> 00:02:52,506
皆さんが
ベータ版の入手後に

39
00:02:52,606 --> 00:02:57,644
アプリケーションを
どう変えるか楽しみです

40
00:02:59,079 --> 00:03:02,950
ダークモードの他に
macOS 10.14では

41
00:02:59,079 --> 00:03:02,950
ダークモードの他に
macOS 10.14では

42
00:03:03,050 --> 00:03:06,286
アクセントカラーを
追加しました

43
00:03:06,386 --> 00:03:11,291
これまではブルーと
グラファイトの２択でした

44
00:03:11,391 --> 00:03:15,596
10.14では 選択肢を
８色に増やしたので

45
00:03:15,696 --> 00:03:18,031
パーソナライズが楽に

46
00:03:18,131 --> 00:03:22,035
例えば私のように
赤が好きな人は

47
00:03:22,135 --> 00:03:25,672
すぐ赤に切り替えるでしょう

48
00:03:25,772 --> 00:03:27,307
オレンジ色や―

49
00:03:28,876 --> 00:03:30,644
黄色もあります

50
00:03:30,744 --> 00:03:33,881
好きな色を選んでください

51
00:03:33,981 --> 00:03:36,416
アクセントカラーは

52
00:03:36,783 --> 00:03:41,054
ダークモードだけの
機能ではありません

53
00:03:41,154 --> 00:03:42,856
ライトモードでも―

54
00:03:42,956 --> 00:03:47,794
例えば緑色などを
選べるようになりました

55
00:03:49,129 --> 00:03:52,966
ダークモードと
アクセントカラーの

56
00:03:53,066 --> 00:03:55,002
基本は以上です

57
00:03:55,102 --> 00:03:59,273
次に ダークモードの
設計理念を説明します

58
00:03:59,373 --> 00:04:02,342
Appleでは
プロジェクト開始時に

59
00:03:59,373 --> 00:04:02,342
Appleでは
プロジェクト開始時に

60
00:04:02,442 --> 00:04:07,414
全工程において指針となる
設計理念を確立します

61
00:04:07,514 --> 00:04:11,084
ダークモードの
設計理念は３つあり

62
00:04:11,218 --> 00:04:14,721
開発の全工程で
何度も確認しました

63
00:04:15,122 --> 00:04:19,125
１点目は単純なので
簡単に説明できます

64
00:04:19,226 --> 00:04:23,797
“暗めのインターフェイスは
クール”です

65
00:04:23,897 --> 00:04:29,269
ライトモードと比べると
クールに見えやすいのは

66
00:04:29,369 --> 00:04:31,205
なぜでしょうか

67
00:04:31,305 --> 00:04:37,077
それは私たちが 暗い色調に
好印象を持っているからです

68
00:04:37,177 --> 00:04:40,247
ＳＦやアクション映画など

69
00:04:40,347 --> 00:04:43,984
ポップカルチャーから
得たイメージです

70
00:04:44,084 --> 00:04:48,522
暗めのインターフェイスから
連想する言葉を

71
00:04:48,622 --> 00:04:50,691
人に尋ねたとします

72
00:04:50,791 --> 00:04:53,493
“クール”という答えの他に

73
00:04:53,594 --> 00:04:58,699
“上品 プロ 未来的 美”
なども出てくるでしょう

74
00:04:59,500 --> 00:05:03,303
そこでダークモードの
設計に際し

75
00:04:59,500 --> 00:05:03,303
そこでダークモードの
設計に際し

76
00:05:03,403 --> 00:05:08,542
暗い色調から連想する
美的イメージを尊重しました

77
00:05:08,642 --> 00:05:13,981
同時に デザイン上必要な
高コントラストなど

78
00:05:14,081 --> 00:05:16,917
暗い画面の利点も
加味しました

79
00:05:17,684 --> 00:05:21,588
ダークモードは
本当にクールなので

80
00:05:21,688 --> 00:05:25,359
永久にダークモードを
選ぶ人も多いでしょう

81
00:05:25,459 --> 00:05:30,564
でも常時 ダークモードが
適したアプリケーションは

82
00:05:30,664 --> 00:05:34,735
メディア系や
コンテンツ制作ぐらいです

83
00:05:34,835 --> 00:05:40,440
皆さんのアプリケーションが
そのいずれかでないなら

84
00:05:40,541 --> 00:05:45,546
むしろシステム環境に
従わせることを勧めます

85
00:05:46,747 --> 00:05:52,319
２点目の理念は“ダークは
ライトの反転ではない”です

86
00:05:52,419 --> 00:05:55,455
要点は次のようなことです

87
00:05:55,556 --> 00:05:59,626
単純な発想として
暗い色調を得るために

88
00:05:59,726 --> 00:06:03,964
明るい色調を反転させようと
考えがちです

89
00:05:59,726 --> 00:06:03,964
明るい色調を反転させようと
考えがちです

90
00:06:04,064 --> 00:06:07,467
でも それだけでは
不十分です

91
00:06:07,568 --> 00:06:10,637
アプリケーションの要素を

92
00:06:10,737 --> 00:06:13,440
個別に見た方がいいでしょう

93
00:06:13,540 --> 00:06:17,878
その要素の視覚刺激で
何を伝えたいのかを

94
00:06:17,978 --> 00:06:19,613
見極めてください

95
00:06:19,713 --> 00:06:23,784
そして それを反転すべきか
判断するのです

96
00:06:24,117 --> 00:06:29,490
例えば 明るい画面に
表示されたボタンがあります

97
00:06:29,590 --> 00:06:32,125
アクティブな状態から―

98
00:06:32,226 --> 00:06:35,062
クリックすると暗くなります

99
00:06:35,162 --> 00:06:39,099
明るい色調の画面では
これが標準です

100
00:06:39,199 --> 00:06:43,570
クリック後は
色が暗くなるのです

101
00:06:44,171 --> 00:06:45,405
ダークモードでは―

102
00:06:45,506 --> 00:06:49,977
アクティブなボタンは
クリックで明るくなります

103
00:06:50,077 --> 00:06:55,148
コントロール部分では
これを標準としました

104
00:06:56,316 --> 00:06:59,820
グループボックスの例も
挙げます

105
00:06:59,920 --> 00:07:03,490
ライトモードの
グループボックスは暗く

106
00:06:59,920 --> 00:07:03,490
ライトモードの
グループボックスは暗く

107
00:07:03,590 --> 00:07:06,059
まるで影のようです

108
00:07:06,160 --> 00:07:08,529
へこんだように見せて―

109
00:07:08,629 --> 00:07:12,866
背景が削られたような
質感を出すのです

110
00:07:13,600 --> 00:07:17,037
一方 ダークモードの
グループボックスは

111
00:07:17,137 --> 00:07:19,540
発光している感じです

112
00:07:19,640 --> 00:07:25,679
グループボックスの目的は
どちらのモードでも同じです

113
00:07:25,779 --> 00:07:28,815
ボックスに
まとめられた内容に

114
00:07:28,916 --> 00:07:32,819
関連性があると
ユーザに伝えることです

115
00:07:33,921 --> 00:07:37,925
個別に見た方がいいと
先ほど言いました

116
00:07:38,025 --> 00:07:43,530
視覚刺激で何を伝えようと
しているかを見極めるのは

117
00:07:43,630 --> 00:07:46,400
大事だと考えてください

118
00:07:46,500 --> 00:07:52,005
特定の視覚刺激が すでに
ライトモードで効果的なら

119
00:07:52,105 --> 00:07:54,608
そのまま生かしましょう

120
00:07:54,708 --> 00:07:57,411
例えばウィンドウの影です

121
00:07:57,678 --> 00:08:02,449
macOSで 複数のウィンドウを
重ねて開くと

122
00:07:57,678 --> 00:08:02,449
macOSで 複数のウィンドウを
重ねて開くと

123
00:08:02,549 --> 00:08:07,154
ウィンドウの影が
深度を伝えてくれます

124
00:08:07,254 --> 00:08:11,625
でも もしこの影を反転させ
白くしたら―

125
00:08:11,725 --> 00:08:16,663
インターフェイス全体が
平たくなってしまいます

126
00:08:18,999 --> 00:08:21,502
ウィンドウの影の構造は

127
00:08:21,602 --> 00:08:25,739
霧状の部分と縁取りの
２レイヤーです

128
00:08:25,839 --> 00:08:28,842
この部分に注目してください

129
00:08:28,942 --> 00:08:33,647
ダークモードでは
次のように影を構築しました

130
00:08:33,746 --> 00:08:38,251
暗い色調での
影の見せ方を考える際に

131
00:08:38,352 --> 00:08:43,724
ユーザは 頻繁にモードを
切り替えられるものとし―

132
00:08:43,823 --> 00:08:46,894
ただ 一部が常に
暗い可能性を考え

133
00:08:46,994 --> 00:08:51,298
霧状の影の部分は
両モード共通にしました

134
00:08:51,398 --> 00:08:55,002
ボカシのパラメータは
ダークモードでも

135
00:08:55,102 --> 00:08:57,337
変更ありません

136
00:08:57,704 --> 00:09:00,440
次に 縁取りの影の
部分ですが

137
00:08:57,704 --> 00:09:00,440
次に 縁取りの影の
部分ですが

138
00:09:00,541 --> 00:09:03,644
こちらは少々
変更が必要でした

139
00:09:03,744 --> 00:09:08,448
ダークモードでは
少し不透明度を上げて

140
00:09:08,549 --> 00:09:14,221
コントラストをくっきりさせ
より鮮明にしました

141
00:09:15,455 --> 00:09:20,561
ウィンドウの枠には
さらに工夫を凝らしました

142
00:09:20,661 --> 00:09:25,065
枠の内側に
新たに縁取りをしています

143
00:09:25,465 --> 00:09:28,969
ウィンドウを
浮き上がらせる工夫です

144
00:09:29,069 --> 00:09:34,441
結果 ライトモードに近い
視覚刺激にできました

145
00:09:34,541 --> 00:09:38,946
でも ダークモードの
特性を発揮できるように

146
00:09:39,046 --> 00:09:41,482
微調整してあります

147
00:09:45,786 --> 00:09:49,122
次の理念は“コンテンツ重視”

148
00:09:49,223 --> 00:09:53,760
特に この理念に
何度も立ち返りました

149
00:09:54,128 --> 00:09:57,631
明るい色調の
インターフェイスでは

150
00:09:57,731 --> 00:10:01,301
ユーザのフォーカスが
散ってしまいます

151
00:09:57,731 --> 00:10:01,301
ユーザのフォーカスが
散ってしまいます

152
00:10:01,401 --> 00:10:06,607
いくつもウィンドウが
開いている時はなおさらです

153
00:10:06,707 --> 00:10:10,644
それは 私たちが作る
コンテンツの多くは

154
00:10:10,744 --> 00:10:12,913
一般的に明色だからです

155
00:10:13,013 --> 00:10:18,151
そのため 背景が暗い
インターフェイスに乗せると

156
00:10:18,252 --> 00:10:20,687
コンテンツが目立ちます

157
00:10:20,888 --> 00:10:25,425
コンテンツ以外の領域が
背景に溶け込むので

158
00:10:25,526 --> 00:10:28,562
コンテンツに集中できます

159
00:10:29,163 --> 00:10:33,133
フォーカスを
容易にするために

160
00:10:33,233 --> 00:10:37,905
コンテンツ領域を
最適化する方法は３つ

161
00:10:38,472 --> 00:10:42,476
１点目は 背景を
真っ黒にする方法です

162
00:10:42,576 --> 00:10:46,713
Finderのような
コンテンツ表示なら

163
00:10:46,813 --> 00:10:48,782
それも可能でしょう

164
00:10:48,882 --> 00:10:52,653
カラフルなアイコンを
見せるだけなので

165
00:10:52,753 --> 00:10:57,191
背景が暗い方が
コンテンツが目立ちます

166
00:10:57,991 --> 00:11:03,030
２点目は コンテンツのみ
そのまま見せる方法です

167
00:10:57,991 --> 00:11:03,030
２点目は コンテンツのみ
そのまま見せる方法です

168
00:11:03,130 --> 00:11:06,400
例えばPagesなどが好例です

169
00:11:06,500 --> 00:11:11,071
コンテンツは 完全に
ユーザが作った状態で

170
00:11:11,171 --> 00:11:13,373
表示されるべきです

171
00:11:13,707 --> 00:11:17,778
ダークモードは
このような場面に最適です

172
00:11:17,878 --> 00:11:21,348
ユーザはコンテンツに
フォーカスでき

173
00:11:21,448 --> 00:11:25,986
インターフェイスに
気を取られずに済みます

174
00:11:27,487 --> 00:11:29,122
３点目の方法は―

175
00:11:30,424 --> 00:11:35,696
アピアランスを
ユーザに選ばせることです

176
00:11:35,796 --> 00:11:40,267
例えばメールは
コンテンツが人それぞれで

177
00:11:40,367 --> 00:11:43,337
明暗どちらもあり得ます

178
00:11:43,437 --> 00:11:47,307
よって
アプリケーションの設定から

179
00:11:47,407 --> 00:11:50,911
ユーザが選べると
いいでしょう

180
00:11:51,011 --> 00:11:54,281
一方で
機能と関係ない部分は

181
00:11:54,381 --> 00:11:56,416
システムに準じます

182
00:11:58,218 --> 00:12:01,722
今の３つの方法に
共通していたのは

183
00:11:58,218 --> 00:12:01,722
今の３つの方法に
共通していたのは

184
00:12:01,822 --> 00:12:07,327
コンテンツ領域以外が暗く
目立たなくなっていた点です

185
00:12:07,427 --> 00:12:12,132
これを実現した機能を
Desktop Tintingといいます

186
00:12:12,232 --> 00:12:16,703
ウィンドウの色を
壁紙の写真に紛れるように

187
00:12:16,803 --> 00:12:18,505
着色する機能です

188
00:12:19,106 --> 00:12:22,709
サチュレーションを
下げたグレーは

189
00:12:22,810 --> 00:12:27,848
色温度が デスクトップと
合わない傾向がありました

190
00:12:27,948 --> 00:12:30,784
例えば
半透明のサイドバーと

191
00:12:30,884 --> 00:12:37,324
完全に不透明なウィンドウを
比べた時などに顕著でした

192
00:12:37,424 --> 00:12:40,694
Desktop Tintingは
これを緩和します

193
00:12:40,794 --> 00:12:44,965
適用すると
ウィンドウの色が調和され

194
00:12:45,065 --> 00:12:50,103
ウィンドウ全体が
周囲の領域に溶け込みます

195
00:12:50,204 --> 00:12:53,407
そして色温度の差が
縮まります

196
00:12:54,408 --> 00:12:57,711
Desktop Tintingの
仕組みとは？

197
00:12:57,811 --> 00:13:03,283
まずウィンドウの後ろにある
デスクトップから―

198
00:12:57,811 --> 00:13:03,283
まずウィンドウの後ろにある
デスクトップから―

199
00:13:03,383 --> 00:13:08,288
そこにある写真等の色の
平均値を割り出します

200
00:13:08,388 --> 00:13:11,592
次に その平均値の色を
グレーと混ぜ

201
00:13:12,092 --> 00:13:14,862
ウィンドウの色にするのです

202
00:13:15,229 --> 00:13:17,197
この色は動的なので

203
00:13:17,297 --> 00:13:20,834
ウィンドウを動かすと
変わります

204
00:13:20,934 --> 00:13:25,506
ウィンドウと壁紙が
常に調和する仕組みです

205
00:13:25,606 --> 00:13:31,011
試しに ２種の壁紙の上に
ウィンドウを乗せてみます

206
00:13:31,278 --> 00:13:34,314
右のウィンドウが
壁紙に合わせて

207
00:13:34,414 --> 00:13:38,252
自動的に色を調整しています

208
00:13:39,052 --> 00:13:42,356
デスクトップの色を
活用するのは

209
00:13:42,456 --> 00:13:46,193
ウィンドウの背景色に
限りません

210
00:13:46,293 --> 00:13:51,598
不透明なコントロール部分も
色を変化させます

211
00:13:55,068 --> 00:14:00,607
細かな色の違いが重要な
アプリケーションなどで

212
00:13:55,068 --> 00:14:00,607
細かな色の違いが重要な
アプリケーションなどで

213
00:14:00,707 --> 00:14:07,047
Desktop Tintingを
適用したくなかったら？

214
00:14:07,347 --> 00:14:12,319
グラファイトモードで
着色効果を無効化できます

215
00:14:14,121 --> 00:14:19,259
ウィンドウの背景色の
見本をご覧ください

216
00:14:19,359 --> 00:14:23,964
上段左はライトモードの
ウィンドウ背景色で

217
00:14:24,064 --> 00:14:27,534
おなじみの明るいグレーです

218
00:14:27,634 --> 00:14:32,172
中央は同モードの
ドキュメントの下地の色で

219
00:14:32,272 --> 00:14:35,442
右はコンテンツの背景色です

220
00:14:35,542 --> 00:14:40,247
ライトモードでは
コンテンツの背景は白です

221
00:14:40,581 --> 00:14:45,018
中段は Desktop Tintingが
効いた色調

222
00:14:45,118 --> 00:14:49,056
下段がグラファイトモードで

223
00:14:49,156 --> 00:14:51,658
Desktop Tintingは無効です

224
00:14:53,927 --> 00:14:59,133
次は アプリケーションを
アップデートする際に

225
00:14:59,233 --> 00:15:02,002
デザインで考慮すべき点です

226
00:14:59,233 --> 00:15:02,002
デザインで考慮すべき点です

227
00:15:03,203 --> 00:15:05,038
まず 色の話です

228
00:15:06,073 --> 00:15:09,676
10.14では 多くの色を
追加しましたが

229
00:15:09,776 --> 00:15:14,214
同時に 色の削除や
アップデートもしました

230
00:15:14,314 --> 00:15:17,618
こちらが
システム環境の色の一部で

231
00:15:17,718 --> 00:15:21,255
上段に比べて
下段は暗い色調です

232
00:15:21,355 --> 00:15:22,489
ご覧のとおり―

233
00:15:22,589 --> 00:15:27,194
暗い色調ではブライトネスと
サチュレーションが高いです

234
00:15:27,494 --> 00:15:31,265
色に関しては
レイチェルとテイラーも

235
00:15:31,365 --> 00:15:33,834
セッション後半で話します

236
00:15:33,934 --> 00:15:37,304
今は３色だけに
着目してください

237
00:15:37,404 --> 00:15:38,805
３つの青です

238
00:15:39,373 --> 00:15:42,476
左から controlAccentColor

239
00:15:42,576 --> 00:15:44,945
systemBlueColor
linkColorです

240
00:15:45,045 --> 00:15:47,347
linkColorは
その名のとおり―

241
00:15:47,447 --> 00:15:51,418
テキストリンクに
適用する青色です

242
00:15:51,518 --> 00:15:55,422
ウェブサイトや
アプリケーション内の―

243
00:15:55,522 --> 00:16:00,928
任意のエリアにユーザを導く
ハイパーリンクです

244
00:15:55,522 --> 00:16:00,928
任意のエリアにユーザを導く
ハイパーリンクです

245
00:16:01,028 --> 00:16:03,063
これはlinkColorに
すべきです

246
00:16:03,363 --> 00:16:05,899
controlAccentColorと
systemBlueColorは

247
00:16:05,999 --> 00:16:08,569
コントロール部分に使います

248
00:16:08,669 --> 00:16:14,308
はっきりとした境界線や
ボタンの境目や グリフです

249
00:16:14,942 --> 00:16:17,544
controlAccentColorは―

250
00:16:17,644 --> 00:16:21,849
システム環境の
アクセントカラーに応えます

251
00:16:21,949 --> 00:16:23,283
この場合は赤です

252
00:16:23,383 --> 00:16:28,789
カスタマイズによって
画面のアピアランスを

253
00:16:28,889 --> 00:16:34,361
標準のシステム環境に
従わせるような設計なら―

254
00:16:34,461 --> 00:16:36,296
controlAccentColorをどうぞ

255
00:16:36,396 --> 00:16:39,633
情報伝達や
ブランド上の意図で

256
00:16:39,733 --> 00:16:44,037
コントロールを
青にしておきたいなら―

257
00:16:44,138 --> 00:16:47,374
systemBlueColorを
使ってください

258
00:16:48,442 --> 00:16:51,845
次に バイブランシーの
話です

259
00:16:53,046 --> 00:16:57,784
半透明な素材を
コンテンツと重ねた際に

260
00:16:57,885 --> 00:17:02,990
コンテンツの色と
連動させるための機能です

261
00:16:57,885 --> 00:17:02,990
コンテンツの色と
連動させるための機能です

262
00:17:03,090 --> 00:17:08,395
Finderのサイドバーを
例に挙げて説明します

263
00:17:09,896 --> 00:17:12,432
通常 バイブランシーは

264
00:17:12,532 --> 00:17:16,569
非着色のアートワークに
適用します

265
00:17:16,670 --> 00:17:18,539
この画面でいえば

266
00:17:18,638 --> 00:17:23,410
Finderのサイドバーにある
グリフと文字です

267
00:17:23,510 --> 00:17:29,283
バイブランシーを加えると
サチュレーションが上がり

268
00:17:29,383 --> 00:17:33,020
文字のコントラストも
上がります

269
00:17:33,654 --> 00:17:39,526
ただ Finderのタグの色など
着色部には適用しません

270
00:17:39,626 --> 00:17:42,596
色付きのアイコン等も
同様です

271
00:17:42,696 --> 00:17:47,301
バイブランシーを使うと
元の色が変わるので

272
00:17:47,401 --> 00:17:50,237
使わない方がいいでしょう

273
00:17:50,337 --> 00:17:55,075
バイブランシーを使った
コンテンツ構築ですが

274
00:17:55,175 --> 00:17:59,780
まず 透過率がカギだろうと
考えるでしょう

275
00:17:59,880 --> 00:18:03,116
白の不透明度を変えるのです

276
00:17:59,880 --> 00:18:03,116
白の不透明度を変えるのです

277
00:18:03,217 --> 00:18:07,054
素材によっては
半透明にすることで

278
00:18:07,154 --> 00:18:10,791
背景色を
残せることもあります

279
00:18:10,891 --> 00:18:14,728
でも 結果的に
不透明になるのですから

280
00:18:14,828 --> 00:18:19,967
サチュレーションが
期待したほど上がりません

281
00:18:20,234 --> 00:18:23,504
ここでは
Quaternary Label Colorが

282
00:18:23,604 --> 00:18:27,007
やや読みにくくなっています

283
00:18:27,574 --> 00:18:32,212
むしろ グレースケールを
使うべきです

284
00:18:32,312 --> 00:18:34,648
注目してほしいのは

285
00:18:34,748 --> 00:18:40,187
RGB表示のラベルカラーが
完全に黒だという点です

286
00:18:40,287 --> 00:18:43,991
これにブレンドモードを
適用すると

287
00:18:44,091 --> 00:18:48,695
黒いテキストが
完全に透過するのです

288
00:18:48,796 --> 00:18:53,901
完全に抜きたい部分は
真っ黒にしてください

289
00:18:54,001 --> 00:18:57,938
不透明にする
グラデーションが必要なら

290
00:18:58,038 --> 00:19:01,408
黒に流れるグレーを
使うのです

291
00:18:58,038 --> 00:19:01,408
黒に流れるグレーを
使うのです

292
00:19:01,508 --> 00:19:06,713
明るい色にバイブランシーを
適用する場合は逆で

293
00:19:06,813 --> 00:19:10,984
不透明な白にすると
文字が透過します

294
00:19:11,084 --> 00:19:14,988
その場合も
グラデーションは使えます

295
00:19:15,823 --> 00:19:18,325
バイブランシーを適用すると

296
00:19:18,425 --> 00:19:22,463
グレーのサチュレーションが
上がります

297
00:19:22,563 --> 00:19:28,168
一番下のカラーラベルも
読めるようになりました

298
00:19:28,268 --> 00:19:31,238
並べて比較すると分かります

299
00:19:31,338 --> 00:19:37,311
左が透過率を変えた場合
右がグレーを使った場合です

300
00:19:37,411 --> 00:19:40,180
色によっては
透過率を変えて―

301
00:19:40,280 --> 00:19:43,784
うまくいくケースもあります

302
00:19:43,884 --> 00:19:47,988
でも やはり美しさや
読みやすさの点で

303
00:19:48,088 --> 00:19:51,058
ベストとは言えません

304
00:19:52,526 --> 00:19:56,663
次に グリフを
芸術的に反転する話です

305
00:19:56,763 --> 00:20:02,503
芸術的な反転とは 例えば
ダークモードを生かすために

306
00:19:56,763 --> 00:20:02,503
芸術的な反転とは 例えば
ダークモードを生かすために

307
00:20:02,603 --> 00:20:08,008
グリフのどこを調整すべきか
見極める過程です

308
00:20:09,343 --> 00:20:14,648
こちらが 明色で標準的に
用意しているグリフです

309
00:20:14,748 --> 00:20:17,918
明るい色調でのグリフは

310
00:20:18,018 --> 00:20:23,190
一般的に 縁の線が濃く
内側が空白になっています

311
00:20:23,290 --> 00:20:26,493
これを白い背景の上に乗せて

312
00:20:26,593 --> 00:20:32,566
形や立体性を表現すると
とても効果的だからです

313
00:20:33,033 --> 00:20:36,837
では 同じベクター画像を
反転させ

314
00:20:36,937 --> 00:20:38,972
暗色に乗せてみます

315
00:20:39,072 --> 00:20:43,043
当初の外観や厚みが
失われました

316
00:20:43,143 --> 00:20:48,749
そこで芸術的に反転させ
外観や厚みを取り戻します

317
00:20:50,184 --> 00:20:53,020
構築方法は次のとおりです

318
00:20:53,120 --> 00:20:56,123
Finderのタグで説明します

319
00:20:56,223 --> 00:21:01,728
左側では 黒い穴を抜いた
白いタグが表現されています

320
00:20:56,223 --> 00:21:01,728
左側では 黒い穴を抜いた
白いタグが表現されています

321
00:21:01,828 --> 00:21:07,601
これを右のように反転すると
白い紙の質感が消えます

322
00:21:07,701 --> 00:21:13,540
そこで 再び反転させ
黒穴付きの白タグに直します

323
00:21:14,174 --> 00:21:17,144
手順を説明しましょう

324
00:21:17,344 --> 00:21:23,383
まず どの形でも共通ですが
クリッピングパスを広げます

325
00:21:23,484 --> 00:21:29,289
次に 小穴の形を選択し
抜く部分を反転させます

326
00:21:29,389 --> 00:21:33,494
そして 余分なパスを
選んで取り除き

327
00:21:33,594 --> 00:21:37,531
きれいなベクターに
するだけです

328
00:21:38,532 --> 00:21:43,537
家のような少し複雑な形でも
説明しましょう

329
00:21:43,637 --> 00:21:46,707
左側の家は白ですが

330
00:21:46,807 --> 00:21:49,443
右側は白くありません

331
00:21:49,543 --> 00:21:54,381
これを再び反転させ
白い家にします

332
00:21:55,983 --> 00:21:59,920
方法は
先ほどのタグと同じです

333
00:22:00,020 --> 00:22:04,424
ただ このグリフで
重要なのは

334
00:22:04,525 --> 00:22:09,663
ベクターに新しい形を
加える必要がある点です

335
00:22:09,763 --> 00:22:12,599
それは 屋根の線を
出すために

336
00:22:12,699 --> 00:22:16,770
影を模した抜き部分を
作ることです

337
00:22:16,870 --> 00:22:18,539
これは大事です

338
00:22:18,639 --> 00:22:23,377
影を模した線がないと
屋根がはっきりせず

339
00:22:23,477 --> 00:22:28,215
ごく小さなグリフでは
見づらいでしょう

340
00:22:29,817 --> 00:22:33,320
さらに複雑な
グリフの例として

341
00:22:33,420 --> 00:22:35,923
メールの封筒で説明します

342
00:22:36,023 --> 00:22:40,928
左側は 厚みが感じられる
２レイヤー構造です

343
00:22:41,028 --> 00:22:45,365
後ろのフラップと
前のボトムが封筒で

344
00:22:45,465 --> 00:22:47,234
間に手紙があります

345
00:22:47,334 --> 00:22:53,607
右側は 塗りつぶしが少なく
その厚みが失われています

346
00:22:53,974 --> 00:22:58,545
そこで 再び色を反転させ
厚みを戻します

347
00:22:59,813 --> 00:23:05,719
方法は すでに紹介した
他の２つと似ていますが

348
00:22:59,813 --> 00:23:05,719
方法は すでに紹介した
他の２つと似ていますが

349
00:23:05,819 --> 00:23:10,691
少し細かい作業が必要で
時間もかかります

350
00:23:10,791 --> 00:23:12,993
パスが多いからです

351
00:23:13,093 --> 00:23:16,997
でも 基本的に
２レイヤーを意識して

352
00:23:17,231 --> 00:23:22,402
前後の封筒と 中の手紙に
分ければいいだけです

353
00:23:22,503 --> 00:23:27,574
このグリフで例示した
細かな点がもう１つ

354
00:23:27,674 --> 00:23:31,145
それは２種類の不透明度です

355
00:23:31,245 --> 00:23:34,414
手紙の部分は
不透明度80％にして

356
00:23:34,515 --> 00:23:39,753
封筒より色が薄くなるように
してあります

357
00:23:40,287 --> 00:23:42,656
ライトモードでも―

358
00:23:42,756 --> 00:23:46,860
こうした手法を
使うことがあります

359
00:23:48,028 --> 00:23:52,366
まとめとして
私の話をおさらいします

360
00:23:52,799 --> 00:23:55,169
ダークモードはクールなので

361
00:23:55,269 --> 00:23:59,740
アプリケーションを
常に暗くしたくなるでしょう

362
00:23:59,840 --> 00:24:04,478
でもメディア制作系以外では
勧めません

363
00:23:59,840 --> 00:24:04,478
でもメディア制作系以外では
勧めません

364
00:24:04,578 --> 00:24:09,049
システム環境に
合わせることを勧めます

365
00:24:10,551 --> 00:24:15,055
単に既存の色を
反転させるのではなく

366
00:24:15,155 --> 00:24:21,228
アプリケーションの要素を
個別に見て調整してください

367
00:24:21,328 --> 00:24:26,900
その視覚刺激によって
何を伝えたいのかを見極め

368
00:24:27,000 --> 00:24:30,604
色を反転させるべきか
決めるのです

369
00:24:31,605 --> 00:24:36,710
アプリケーションが扱う
コンテンツを基準にして

370
00:24:36,810 --> 00:24:40,247
アピアランスを
考えてください

371
00:24:40,347 --> 00:24:45,485
そして コンテンツ領域を
最適化する方法を決めます

372
00:24:45,586 --> 00:24:49,790
完全にダークにするか
変更しないか

373
00:24:49,890 --> 00:24:53,260
ユーザに設定させるかです

374
00:24:54,361 --> 00:24:57,598
それから 色の話もしました

375
00:24:58,866 --> 00:25:02,002
一般的に必要なのは

376
00:24:58,866 --> 00:25:02,002
一般的に必要なのは

377
00:25:02,102 --> 00:25:05,139
３つの色を適切に使うこと

378
00:25:05,239 --> 00:25:08,809
リンクの付いた
テキストがあるなら

379
00:25:08,909 --> 00:25:12,079
linkColorを勧めます

380
00:25:12,179 --> 00:25:17,184
コントロールの色を
システム環境に従わせるなら

381
00:25:17,284 --> 00:25:20,187
controlAccentColorです

382
00:25:20,287 --> 00:25:25,425
常に青にしておくなら
systemBlueColorをどうぞ

383
00:25:25,526 --> 00:25:31,031
テイラーとレイチェルが
色の話を詳しくするので

384
00:25:31,131 --> 00:25:34,401
セッション後半も
お見逃しなく

385
00:25:35,602 --> 00:25:38,438
バイブランシーを使うなら

386
00:25:38,539 --> 00:25:43,544
その効果を存分に
生かせるようにしてください

387
00:25:43,644 --> 00:25:46,513
グレースケールを使うのです

388
00:25:46,613 --> 00:25:50,884
抜いたり透明にしたりする
必要があれば

389
00:25:50,984 --> 00:25:55,489
ダークモードでは黒に
ライトモードでは白に寄せます

390
00:25:57,458 --> 00:26:03,063
最後に グリフの色反転は
芸術性を考慮してください

391
00:25:57,458 --> 00:26:03,063
最後に グリフの色反転は
芸術性を考慮してください

392
00:26:03,163 --> 00:26:07,100
そのグリフで伝えたい情報を

393
00:26:07,201 --> 00:26:11,171
ユーザに極力
効果的に伝えるためです

394
00:26:12,372 --> 00:26:16,043
また Human Interface
Guidelinesを

395
00:26:16,143 --> 00:26:18,545
必ず参照してください

396
00:26:19,346 --> 00:26:22,583
Design Resourcesは

397
00:26:22,683 --> 00:26:27,354
2018年６月末までに
アップデートする予定です

398
00:26:27,454 --> 00:26:30,190
ファイルをご確認ください

399
00:26:30,457 --> 00:26:33,694
では レイチェルに
場を譲ります

400
00:26:33,794 --> 00:26:37,931
ダークモードの採用方法を
話してくれます

401
00:26:38,031 --> 00:26:39,032
よろしく

402
00:26:39,132 --> 00:26:42,669
(拍手)

403
00:26:46,039 --> 00:26:46,807
ありがとう

404
00:26:46,907 --> 00:26:48,108
こんにちは

405
00:26:48,208 --> 00:26:53,080
ダークモードを設計した
デザインチームに拍手を

406
00:26:53,180 --> 00:26:54,314
お見事です

407
00:26:54,414 --> 00:26:58,819
(拍手)

408
00:26:58,919 --> 00:27:02,990
テイラーと私は
Mojaveに採用された―

409
00:26:58,919 --> 00:27:02,990
テイラーと私は
Mojaveに採用された―

410
00:27:03,090 --> 00:27:06,393
ダークモードの
技術的な話をします

411
00:27:10,330 --> 00:27:12,299
以前 テイラーと話した時

412
00:27:12,399 --> 00:27:16,837
２人とも カメレオンが
大好きだと分かりました

413
00:27:16,937 --> 00:27:19,907
カメレオンを飼う前の
準備として

414
00:27:20,007 --> 00:27:24,778
Chameleon Wranglerという
アプリケーションを作りました

415
00:27:24,878 --> 00:27:27,147
High Sierraの時代です

416
00:27:27,247 --> 00:27:30,417
これをMojave用に
アップデートします

417
00:27:31,785 --> 00:27:34,888
システム環境を
ダークモードにして―

418
00:27:34,988 --> 00:27:36,890
起動しましょう

419
00:27:38,058 --> 00:27:40,894
暗い色になりませんね

420
00:27:41,462 --> 00:27:46,033
ライトとダークの
両モードで同様です

421
00:27:46,767 --> 00:27:49,236
なお 私のプレゼン画面では

422
00:27:49,336 --> 00:27:53,307
左にライトモード
右にダークモードを見せます

423
00:27:53,407 --> 00:27:58,912
これは並べて見比べるためで
デモ専用の画面です

424
00:28:00,414 --> 00:28:05,919
では 10.14 SDKと
Xcode 10にリンクさせます

425
00:28:06,987 --> 00:28:10,023
そして
アプリケーションを起動

426
00:28:10,457 --> 00:28:11,992
暗くなりました

427
00:28:12,359 --> 00:28:17,397
いろいろな箇所が
自動的に暗く変わっています

428
00:28:18,065 --> 00:28:20,567
でも 直したい所があります

429
00:28:21,435 --> 00:28:24,872
そこで 色の調整方法を
説明します

430
00:28:26,707 --> 00:28:28,442
色は多数あります

431
00:28:30,777 --> 00:28:34,481
ヘッダ領域の
ライトグリーンにご注目を

432
00:28:37,417 --> 00:28:39,419
これはカスタムで―

433
00:28:39,520 --> 00:28:44,024
RGBA値で
ハードコーディングしました

434
00:28:44,925 --> 00:28:50,097
この実装方法では
アピアランスが変わった時に

435
00:28:50,197 --> 00:28:54,401
システム環境の設定に
ついていけません

436
00:28:55,936 --> 00:28:57,538
そこで 代わりに―

437
00:28:57,638 --> 00:29:01,742
アセットカタログの色を
活用します

438
00:28:57,638 --> 00:29:01,742
アセットカタログの色を
活用します

439
00:29:02,142 --> 00:29:06,713
色の追加は
10.13からできましたが

440
00:29:06,813 --> 00:29:10,684
10.14では モード別に
色を指定できます

441
00:29:10,784 --> 00:29:14,388
暗いヘッダの
選択肢ができました

442
00:29:15,089 --> 00:29:17,891
アセットカタログを
使う利点は―

443
00:29:19,593 --> 00:29:24,798
まず 用途に応じて
名前を付けられることです

444
00:29:24,898 --> 00:29:27,701
意味ある名前にできるのです

445
00:29:29,970 --> 00:29:35,008
複数の色を定義できるので
モードごとに変えられます

446
00:29:35,109 --> 00:29:39,780
カラースペースでも…
sRGBかP3の違いです

447
00:29:40,881 --> 00:29:45,219
定義する際 どの色でも
中央値が出るので

448
00:29:45,319 --> 00:29:49,656
微調整が必要な場合も
簡単にできます

449
00:29:51,758 --> 00:29:55,495
これは
アセットカタログの色です

450
00:29:55,596 --> 00:29:58,532
ヘッダの色なので
headerColorと呼びます

451
00:29:59,500 --> 00:30:03,003
これがheaderColorの
使用例です

452
00:29:59,500 --> 00:30:03,003
これがheaderColorの
使用例です

453
00:30:03,270 --> 00:30:05,806
ダークグリーンが
クリアです

454
00:30:06,039 --> 00:30:07,975
しかし文字が―

455
00:30:08,776 --> 00:30:10,210
ぼやけました

456
00:30:10,644 --> 00:30:15,282
クロエの名前と年齢が
読みづらいですね

457
00:30:16,517 --> 00:30:21,188
明るいと見やすくても
暗いと見づらくなります

458
00:30:22,456 --> 00:30:26,293
使用しているのは
静的カラーの

459
00:30:26,693 --> 00:30:29,363
黒とダークグレーです

460
00:30:30,330 --> 00:30:34,735
ハードコードされたものと
同じではありませんが

461
00:30:35,802 --> 00:30:37,104
変わりません

462
00:30:37,871 --> 00:30:40,674
そこで アセットカタログの
代わりに

463
00:30:40,774 --> 00:30:44,978
動的な
システムカラーを使います

464
00:30:45,345 --> 00:30:49,850
NSColorは様々な
アピアランスで使用できる―

465
00:30:49,983 --> 00:30:52,753
動的な色が豊富です

466
00:30:53,554 --> 00:30:56,023
NSColorの特徴は

467
00:30:56,123 --> 00:30:59,560
書き込み時に
変換されることです

468
00:30:59,860 --> 00:31:03,831
つまり使用されるRGBA値は

469
00:30:59,860 --> 00:31:03,831
つまり使用されるRGBA値は

470
00:31:03,931 --> 00:31:07,734
色を使用する状況に
依存するのです

471
00:31:08,936 --> 00:31:12,906
動的システムカラーの
例を示します

472
00:31:14,208 --> 00:31:17,644
レイモンドが話をした
labelColorです

473
00:31:19,012 --> 00:31:21,715
上半分が動的な色で

474
00:31:21,815 --> 00:31:27,654
下半分は静的カラーの
不透明な黒です

475
00:31:27,888 --> 00:31:31,959
明るくするとすべてが
クリアに見えます

476
00:31:32,326 --> 00:31:35,662
暗くすると
labelColorは見えても

477
00:31:35,762 --> 00:31:38,866
黒い文字は背景に埋もれます

478
00:31:40,968 --> 00:31:43,570
メールの例を示します

479
00:31:43,670 --> 00:31:47,674
ここでは第１と第２の
labelColorを使います

480
00:31:48,509 --> 00:31:51,111
重要な文には第１の色を使い

481
00:31:51,211 --> 00:31:54,848
それ以外には
第２の色を使います

482
00:31:57,518 --> 00:31:59,920
どの色が動的か見るため

483
00:32:00,254 --> 00:32:03,891
Interface Builderの 
メニューを開きます

484
00:32:03,991 --> 00:32:07,361
このリストに載っているのが

485
00:32:08,295 --> 00:32:10,297
動的な色です

486
00:32:12,666 --> 00:32:16,904
では
この黒とダークグレーを

487
00:32:17,404 --> 00:32:22,242
第１と第２の
labelColorに変えます 

488
00:32:22,342 --> 00:32:25,179
明暗の両方でクリアです

489
00:32:27,481 --> 00:32:30,450
より詳しく説明すると

490
00:32:30,784 --> 00:32:35,856
レイモンドも言ったように
システムカラーは色が豊富です

491
00:32:35,956 --> 00:32:39,827
赤 黄 緑は
あくまで例であり

492
00:32:40,127 --> 00:32:44,765
明暗に応じて
アピアランスを細かく変えます

493
00:32:44,865 --> 00:32:48,569
そこが静的カラーとの
違いです

494
00:32:49,636 --> 00:32:54,875
systemRedなどの色には
他にも特徴があります

495
00:32:55,008 --> 00:33:00,280
OSの他の用途だけでなく
iOSにもマッチするのです

496
00:32:55,008 --> 00:33:00,280
OSの他の用途だけでなく
iOSにもマッチするのです

497
00:33:01,515 --> 00:33:07,454
ですから これらの色は
変えない方がいいでしょう

498
00:33:07,554 --> 00:33:10,591
例えば警告には
赤や黄を使います

499
00:33:13,494 --> 00:33:15,262
レイモンドと同じく

500
00:33:15,629 --> 00:33:20,300
linkColor systemBlue
controlAccentColorの話をします

501
00:33:21,401 --> 00:33:24,905
linkColorとsystemBlueは
似ていますが少し違います

502
00:33:25,005 --> 00:33:27,641
linkColorはウェブページや

503
00:33:27,741 --> 00:33:31,044
アプリケーションに
リンクするために使用します

504
00:33:31,145 --> 00:33:35,649
一方 systemBlueは
通常の動作に使用します

505
00:33:35,749 --> 00:33:39,653
システム環境に適応するため
controlAccentColorも使えます

506
00:33:39,753 --> 00:33:41,221
ここでは紫です

507
00:33:43,824 --> 00:33:46,527
アプリケーションの
コードを探し

508
00:33:46,627 --> 00:33:50,063
色をすべて
直すこともできます

509
00:33:50,430 --> 00:33:53,767
すると こうなります

510
00:33:54,301 --> 00:33:56,803
文字色を変えても

511
00:33:56,904 --> 00:34:00,541
何かの理由で
不具合が残っています

512
00:33:56,904 --> 00:34:00,541
何かの理由で
不具合が残っています

513
00:34:02,242 --> 00:34:04,778
打開できなかったら―

514
00:34:05,679 --> 00:34:09,516
Xcodeのビューデバッガが
お勧めです

515
00:34:09,616 --> 00:34:11,819
ここでは
簡単に触れるだけですが

516
00:34:11,918 --> 00:34:17,291
上級編でデバッギングの
詳細な話をします

517
00:34:19,059 --> 00:34:23,864
この明るい画面は
私のスクロール画面です

518
00:34:23,964 --> 00:34:28,768
Interface Builderで
カスタムグレーに設定したので

519
00:34:28,869 --> 00:34:31,271
コードが見えませんでした

520
00:34:31,938 --> 00:34:34,574
よって
デフォルトの色に替えると

521
00:34:35,409 --> 00:34:37,411
クリアに見えます

522
00:34:38,145 --> 00:34:42,482
テキストビューを見ながら
色の話をします

523
00:34:42,583 --> 00:34:46,253
これは動的な色で便利です

524
00:34:49,089 --> 00:34:53,226
まず黒と白が切り替わる
TextColorがあります

525
00:34:54,161 --> 00:34:57,431
textBackgroundColorsが
白と黒を切り替え

526
00:34:58,899 --> 00:35:00,834
selectedTextColorは

527
00:34:58,899 --> 00:35:00,834
selectedTextColorは

528
00:35:01,568 --> 00:35:03,136
黒から白へ変化

529
00:35:03,971 --> 00:35:07,007
selectedTextBackgroundColorは

530
00:35:07,107 --> 00:35:10,677
青ですが
両モードで違います

531
00:35:11,311 --> 00:35:15,582
ハイライトカラーの
システム環境設定に従うからです

532
00:35:15,682 --> 00:35:21,321
selectedTextBackgroundColorは
ハイライトカラーと連動します

533
00:35:23,290 --> 00:35:26,860
次は
アクセシビリティの話です

534
00:35:28,662 --> 00:35:33,567
“コントラストを上げる”の
チェックボックスがあります

535
00:35:34,435 --> 00:35:40,941
このシステムの変更により
低視力の人でも―

536
00:35:41,074 --> 00:35:44,711
色やイラストが見やすくなります

537
00:35:45,779 --> 00:35:48,749
アセットカタログでは

538
00:35:49,349 --> 00:35:52,753
高コントラストの
アピアランス用に

539
00:35:52,853 --> 00:35:54,254
色を追加できます

540
00:35:54,521 --> 00:35:57,057
高コントラストの明暗を

541
00:35:57,191 --> 00:36:00,894
ヘッダの色に加えました

542
00:35:57,191 --> 00:36:00,894
ヘッダの色に加えました

543
00:36:02,830 --> 00:36:08,602
暗い高コントラストの
Chameleon Wranglerです

544
00:36:08,702 --> 00:36:13,674
特殊な色を使っているのは
ヘッダだけではありません

545
00:36:13,774 --> 00:36:19,446
それ以外も高コントラストの
アピアランスに合わせています

546
00:36:19,813 --> 00:36:23,984
明るい高コントラストの
場合も同じです

547
00:36:26,286 --> 00:36:29,690
次に画像の話をします

548
00:36:34,361 --> 00:36:37,631
ツールバーのボタンに
ご注目を

549
00:36:40,834 --> 00:36:45,272
カメレオンカラーのボタンは
明るいとクリアに見えますが

550
00:36:45,372 --> 00:36:50,410
暗いと枠が
黒っぽい背景に埋もれます

551
00:36:51,211 --> 00:36:52,146
そこで―

552
00:36:53,247 --> 00:36:56,950
ダークモード用の
特別版を使います

553
00:36:57,051 --> 00:37:00,187
アセットカタログの画面で

554
00:36:57,051 --> 00:37:00,187
アセットカタログの画面で

555
00:37:01,922 --> 00:37:05,092
ダークモード用の
バージョンを加えます

556
00:37:09,029 --> 00:37:14,835
すると 暗いボタンに対して
枠がクリアに見えます

557
00:37:16,437 --> 00:37:18,639
フルカラーの画像に
ぴったりです

558
00:37:20,941 --> 00:37:22,709
他のボタンは？

559
00:37:22,810 --> 00:37:25,345
すでにクリアですね

560
00:37:25,612 --> 00:37:29,083
手を加えていないのに
なぜでしょう

561
00:37:29,783 --> 00:37:35,656
それは この画像を
テンプレートにしていたからです

562
00:37:37,991 --> 00:37:42,596
テンプレート画像の
話を少しします

563
00:37:43,697 --> 00:37:48,502
テンプレート画像を使うと
透明度は維持されます

564
00:37:50,804 --> 00:37:51,939
色は無視されます

565
00:37:52,039 --> 00:37:58,011
画像を好きな色にしても
透明度しか反映されません

566
00:37:58,312 --> 00:38:00,147
ビットマップかPDFです

567
00:37:58,312 --> 00:38:00,147
ビットマップかPDFです

568
00:38:01,148 --> 00:38:04,918
スピーカーの音量の画像で
説明します

569
00:38:05,419 --> 00:38:06,920
元の画像は黒です

570
00:38:08,188 --> 00:38:12,459
大音量を表す部分が
一部透明です

571
00:38:14,127 --> 00:38:17,364
画像を
NSImageViewに入れました

572
00:38:18,932 --> 00:38:21,268
第２のlabelColorが
付与されます

573
00:38:21,368 --> 00:38:25,539
明るい画面では
ミディアムグレーで

574
00:38:25,639 --> 00:38:27,474
暗い方は明るいグレーに

575
00:38:27,641 --> 00:38:32,179
透明な部分は背景に対して
コントラストが低めです

576
00:38:35,382 --> 00:38:40,053
テンプレート画像の別の利点は
ボタンの状態が分かることです

577
00:38:41,622 --> 00:38:44,591
テンプレート画像を使うと

578
00:38:44,691 --> 00:38:48,295
無効な時はボタンが
不鮮明になります

579
00:38:53,534 --> 00:38:55,969
このような処理で―

580
00:38:56,069 --> 00:38:58,105
Chameleon Wranglerは
クリアに

581
00:38:58,205 --> 00:39:01,809
色と画像の問題を
解消しました

582
00:38:58,205 --> 00:39:01,809
色と画像の問題を
解消しました

583
00:39:02,075 --> 00:39:05,279
しかし
もっと様々なことができます

584
00:39:05,379 --> 00:39:09,349
続きはテイラーが
話してくれます

585
00:39:10,050 --> 00:39:11,351
ありがとう

586
00:39:11,552 --> 00:39:15,522
(拍手)

587
00:39:18,692 --> 00:39:19,927
ありがとう

588
00:39:20,227 --> 00:39:26,133
色と画像をダークモードに
合わせる基本の話でした

589
00:39:26,300 --> 00:39:30,370
私からは適用方法の
より詳しい話を

590
00:39:31,071 --> 00:39:32,439
まずはMoodometerです

591
00:39:32,539 --> 00:39:36,610
これでクロエの様子を
記録できます

592
00:39:37,010 --> 00:39:41,615
背景がダークモード用に
自動調整されました

593
00:39:41,782 --> 00:39:46,386
でも ボタンが
背景に対して暗すぎます

594
00:39:47,588 --> 00:39:49,389
アセットカタログを
ご覧ください

595
00:39:49,490 --> 00:39:54,461
アセットカタログの色で
画像を作りました

596
00:39:55,362 --> 00:40:01,401
明るい色でダークモード用の
画像を作ります

597
00:39:55,362 --> 00:40:01,401
明るい色でダークモード用の
画像を作ります

598
00:40:02,336 --> 00:40:08,442
しかし画像を塗りつぶす色を
変えるだけでは残念です

599
00:40:09,243 --> 00:40:10,844
そこで提案です

600
00:40:11,378 --> 00:40:15,816
Mojaveで使用しているのは
contentTintColor APIです

601
00:40:15,983 --> 00:40:18,785
これで
画像テンプレートを作り

602
00:40:18,885 --> 00:40:23,223
デフォルトではなく
カスタムの色を作ります

603
00:40:23,557 --> 00:40:28,295
これを画像を
塗りつぶす色に使用します

604
00:40:28,829 --> 00:40:33,534
NSImageViewで画像を
着色する色を設定するか

605
00:40:33,634 --> 00:40:37,071
NSButton上で着色します

606
00:40:38,205 --> 00:40:40,174
使用例を見ます

607
00:40:40,274 --> 00:40:43,677
まず
テンプレート画像に変換し

608
00:40:43,777 --> 00:40:47,381
レンダリングモードを設定

609
00:40:48,348 --> 00:40:53,554
画面はデフォルトの
テンプレート効果を持ち

610
00:40:53,654 --> 00:40:55,456
ダークモードでもクリアに

611
00:40:55,556 --> 00:40:58,325
次のステップで色を塗ります

612
00:40:58,859 --> 00:41:03,063
ダークモード用に
アセットカタログから色を抜き

613
00:40:58,859 --> 00:41:03,063
ダークモード用に
アセットカタログから色を抜き

614
00:41:03,163 --> 00:41:06,600
contentTintColorを
色ボタン上で設定します

615
00:41:07,634 --> 00:41:13,374
ボタンは明暗に応じて
自動的に変更されます

616
00:41:14,241 --> 00:41:17,978
しかしシステムカラーは
色が豊富なので

617
00:41:18,078 --> 00:41:22,015
それらで
代用することもできます

618
00:41:23,016 --> 00:41:27,154
systemRed systemYellow
systemGreenを使うと

619
00:41:27,854 --> 00:41:31,258
Chameleon Wranglerが
クリアに見え

620
00:41:31,358 --> 00:41:34,461
ボタンが背景上に
浮き上がります

621
00:41:35,863 --> 00:41:37,531
この処理により

622
00:41:37,664 --> 00:41:42,703
明暗の両モードで
緑が鮮やかに見えます

623
00:41:43,570 --> 00:41:45,138
また
contentTintColor APIにより

624
00:41:45,239 --> 00:41:49,409
アピアランスに応じて
効果が変わります

625
00:41:49,943 --> 00:41:52,479
レイモンドが話したように

626
00:41:52,579 --> 00:41:55,616
ライトモードでは
色調が暗くなり

627
00:41:55,716 --> 00:41:58,452
ダークモードは その逆です

628
00:42:00,053 --> 00:42:04,491
この効果は高コントラスト用に
カスタマイズされます

629
00:42:05,459 --> 00:42:07,761
アプリケーションは
何も変えずにです

630
00:42:08,295 --> 00:42:14,234
全12色の指定は不要で
指定したのは１色だけですが

631
00:42:14,334 --> 00:42:19,873
動的なシステムカラーにより
残り11色が自動調整されました

632
00:42:21,875 --> 00:42:24,445
これでMoodometerが
クリアに見えます

633
00:42:24,745 --> 00:42:26,847
別のタブを見てみましょう

634
00:42:27,014 --> 00:42:30,384
ここではクロエの
情報を記録します

635
00:42:30,517 --> 00:42:34,755
“ストレス度”や
“好きなベリー”などです

636
00:42:35,489 --> 00:42:37,658
クリアに見えています

637
00:42:37,758 --> 00:42:40,894
Cocoaの
コントロールを使用し

638
00:42:40,994 --> 00:42:43,330
自動調整されているのです

639
00:42:44,331 --> 00:42:48,302
アクセントカラーの特徴に
どう反応するか見ましょう

640
00:42:48,402 --> 00:42:50,304
システム環境設定を開き

641
00:42:50,404 --> 00:42:53,374
黄色のカメレオンに変えたら

642
00:42:53,474 --> 00:42:56,043
Chameleon Wranglerに
戻りましょう

643
00:42:56,610 --> 00:42:58,545
コントロールで自動的に

644
00:42:58,645 --> 00:43:04,251
フォーカスリングなどを含む
アクセントカラーを調整します

645
00:42:58,645 --> 00:43:04,251
フォーカスリングなどを含む
アクセントカラーを調整します

646
00:43:04,952 --> 00:43:10,457
しかしカスタムのタブバーが
青いままです

647
00:43:10,924 --> 00:43:14,395
この青はアプリケーションに
特に重要ではなく

648
00:43:14,495 --> 00:43:17,331
アクセントカラーに
合わせるだけです

649
00:43:18,699 --> 00:43:21,535
アクセントカラーや
ハイライトカラーの―

650
00:43:21,635 --> 00:43:25,072
選択に沿った色が
いくつかあります

651
00:43:25,873 --> 00:43:28,175
Mojaveで新しいのは
controlAccentColorです 

652
00:43:28,275 --> 00:43:32,679
システムコントロールの
強調されたエリアをマネします

653
00:43:32,780 --> 00:43:38,619
ポップアップボタンの側部や
デフォルトボタンなどです

654
00:43:39,620 --> 00:43:43,924
表の行の背景色が
selectedContentBackgroundColorで

655
00:43:44,124 --> 00:43:46,427
カスタムだと示せます

656
00:43:47,394 --> 00:43:50,964
selectedTextBackgroundColorは
文字の背景です

657
00:43:52,132 --> 00:43:57,404
タブにはsystemBlueを
使っていますが

658
00:43:57,504 --> 00:44:01,141
controlAccentColorも
使えます

659
00:43:57,504 --> 00:44:01,141
controlAccentColorも
使えます

660
00:44:02,643 --> 00:44:05,946
次はタブバーの問題で
より細かいです

661
00:44:06,246 --> 00:44:11,618
カーソルを動かし
クリックすれば暗くなります

662
00:44:11,719 --> 00:44:14,822
ダークモードで
明度を上げる代わりです

663
00:44:15,823 --> 00:44:17,724
ベースカラーを使い

664
00:44:17,824 --> 00:44:21,395
常に30％暗くする効果を
適用します

665
00:44:21,495 --> 00:44:23,997
ライトモードで
クリアに見えるためです

666
00:44:25,833 --> 00:44:30,337
その代わり
クリックした色で何か書けば

667
00:44:30,437 --> 00:44:36,910
その意味記述が両モードに
必要な効果を付与します

668
00:44:37,411 --> 00:44:41,115
NSColorのMojaveでの
新しいシステム効果APIにより

669
00:44:41,215 --> 00:44:43,450
意味ある記述にできます

670
00:44:43,717 --> 00:44:46,220
controlAccentColorの
ベースカラーを使い

671
00:44:46,320 --> 00:44:51,792
クリックを反映させると
明暗の両モードで反応します

672
00:44:55,195 --> 00:44:58,999
さらにアクセントカラーは

673
00:44:59,099 --> 00:45:03,437
選択した写真を囲う
枠にも使われています

674
00:44:59,099 --> 00:45:03,437
選択した写真を囲う
枠にも使われています

675
00:45:04,505 --> 00:45:08,175
selectedContentBackgroundColorで

676
00:45:08,275 --> 00:45:12,212
アクセントカラーを
自動調整します

677
00:45:13,814 --> 00:45:18,785
写真の１枚を開き
クロエの写真を見ましょう

678
00:45:19,987 --> 00:45:24,725
この写真はダークモード用に
背景を調整していません

679
00:45:24,925 --> 00:45:27,427
ハードコーディングされた
色のような

680
00:45:27,528 --> 00:45:29,329
透光効果を使っています

681
00:45:30,898 --> 00:45:33,434
これがNSVisualEffectViewの
効果であり

682
00:45:33,534 --> 00:45:37,371
システムが透けて見える
半透明の素材です

683
00:45:37,938 --> 00:45:41,742
デスクトップ上の
不鮮明なサイドバーや

684
00:45:42,476 --> 00:45:46,680
スクロールした部分を
不透明にするタイトルバーです

685
00:45:48,048 --> 00:45:53,086
NSVisualEffectViewは
バイブランシーを可能にしました

686
00:45:53,187 --> 00:45:56,223
グレースケールのカラーと
ブレンドモードを合わせ

687
00:45:56,290 --> 00:45:58,892
背景に浮き上がらせます

688
00:45:59,827 --> 00:46:01,028
ダークモードの上級編は

689
00:45:59,827 --> 00:46:01,028
ダークモードの上級編は

690
00:46:01,128 --> 00:46:04,498
上級編はブレンドモードの
効果的な使用の話をします

691
00:46:06,633 --> 00:46:10,804
この不透明な素材は
自動的に付与されます

692
00:46:11,672 --> 00:46:13,640
例えばNSWindowは

693
00:46:13,740 --> 00:46:17,277
背後にタイトルバー素材が
自動付与されます

694
00:46:18,445 --> 00:46:21,849
ソースリストテーブルビューと
サイドバースタイルの分割ビューは

695
00:46:21,949 --> 00:46:26,353
背後にサイドバー素材が
自動付与されます

696
00:46:27,521 --> 00:46:31,692
カスタムUI用に
効果を生むのは簡単です

697
00:46:32,125 --> 00:46:37,231
しかし重要なのは
素材を選択できることです

698
00:46:37,965 --> 00:46:42,002
ハードコーディングされた色など
非セマンティックな素材は

699
00:46:42,102 --> 00:46:44,705
その視覚的品質を表します

700
00:46:44,805 --> 00:46:47,508
それは何かの表現を
意図しません

701
00:46:48,075 --> 00:46:52,212
これらはダークモード用に
調整されず質を保つでしょう

702
00:46:53,046 --> 00:46:55,883
セマンティックな素材は
他にもあり

703
00:46:55,983 --> 00:47:00,154
カスタムUIがどんなタイプか
表すことができます

704
00:46:55,983 --> 00:47:00,154
カスタムUIがどんなタイプか
表すことができます

705
00:47:00,621 --> 00:47:04,358
UIなどカスタムメニュー用に
新素材を使えますね

706
00:47:04,958 --> 00:47:10,097
これらはシステムが変化しても
モードの調整だけでなく

707
00:47:10,264 --> 00:47:12,332
UIを素材に
常にマッチさせます

708
00:47:13,100 --> 00:47:17,304
Mojaveには過去よりも
豊富な素材があり

709
00:47:17,404 --> 00:47:22,476
カスタムUIが素材に
マッチするよう調整します

710
00:47:25,145 --> 00:47:28,849
写真は
ミディアムライト素材です

711
00:47:28,949 --> 00:47:32,820
ポップアップウィンドウを
表現するためです

712
00:47:33,086 --> 00:47:36,290
その代わり
素材を取り替えるだけで

713
00:47:36,390 --> 00:47:39,226
ダークモードで
希望の効果を得ます

714
00:47:41,228 --> 00:47:47,101
これはUIの背景の素材を得る
唯一のエリアではありません

715
00:47:47,634 --> 00:47:50,370
フォトギャラリーの
背景にあるのは

716
00:47:50,470 --> 00:47:53,173
Desktop Tintingの
効果です

717
00:47:53,307 --> 00:47:58,845
デスクトップから青を少し抜き
視覚的に調和を取ります

718
00:47:59,513 --> 00:48:04,651
例えば花の写真の上では
見やすいです

719
00:47:59,513 --> 00:48:04,651
例えば花の写真の上では
見やすいです

720
00:48:06,253 --> 00:48:12,025
背景素材に対して意味がある
３つの変形があります

721
00:48:12,292 --> 00:48:15,896
Window Backgroundは
一般的なウィンドウの背景

722
00:48:15,996 --> 00:48:21,335
Under Page Backgroundは
文書エリアの背後に現れます

723
00:48:21,468 --> 00:48:25,406
一般的なのは
Content Background素材です

724
00:48:25,572 --> 00:48:27,207
ライトモードでは白く

725
00:48:27,307 --> 00:48:29,443
ダークモードでは暗い

726
00:48:30,110 --> 00:48:32,246
実際に
ダークモードでは暗く見え

727
00:48:32,346 --> 00:48:35,215
壁紙の着色効果もあります

728
00:48:36,817 --> 00:48:39,887
この効果は簡単に得られます

729
00:48:39,987 --> 00:48:43,457
システムビューにより
完全に自動化できます

730
00:48:44,091 --> 00:48:46,527
例えばウィンドウの
デフォルトの背景は

731
00:48:46,627 --> 00:48:49,596
Window Backgroundの
素材を備えています

732
00:48:50,297 --> 00:48:54,668
さらにNSCollectionViewや
NSTableView も

733
00:48:54,768 --> 00:48:59,907
Content Backgroundの素材を
自動的に備えます

734
00:49:00,708 --> 00:49:03,877
ダークモードサポートを
改善できる場所が

735
00:49:03,977 --> 00:49:05,078
システム全体に…

736
00:49:05,178 --> 00:49:09,416
デフォルトの色の
オーバーライドを削除するのです

737
00:49:10,818 --> 00:49:14,521
ビューの色を
カスタマイズするなら

738
00:49:14,621 --> 00:49:18,825
背景色として
システムカラーを設定します

739
00:49:18,926 --> 00:49:21,461
そして
希望の素材を得ます

740
00:49:23,163 --> 00:49:28,001
しかし重要なのは
色のRGB値を読むなら

741
00:49:28,102 --> 00:49:30,137
Desktop Tintingを
含めないことです

742
00:49:30,804 --> 00:49:34,107
この色調は動的なので

743
00:49:34,208 --> 00:49:36,343
画面上のウィンドウを
動かすと

744
00:49:36,443 --> 00:49:40,314
アプリケーションと
非同時的に更新されます

745
00:49:40,414 --> 00:49:44,485
ウィンドウ周囲で動くと
すばらしい体験ができます

746
00:49:45,519 --> 00:49:49,423
Chameleon Wranglerに戻ると
背景が自動付与されています

747
00:49:49,523 --> 00:49:52,326
NSCollectionViewを
使うだけだからです

748
00:49:53,327 --> 00:49:54,528
重要なセクションで

749
00:49:54,628 --> 00:49:56,797
透過性の
ウィンドウ背景素材を得ました

750
00:49:56,897 --> 00:49:59,433
不透明な覆う素材が
ないからです

751
00:50:00,067 --> 00:50:02,135
しかしメモのセクションでは

752
00:50:02,236 --> 00:50:04,438
カスタムしたものを
常用にします

753
00:50:04,538 --> 00:50:08,442
ダークモード向けに
セマンティックで調整されていない

754
00:50:08,542 --> 00:50:11,578
明るいグレーの背景です

755
00:50:12,946 --> 00:50:16,650
Interface Builderでは
どこで背景を準備するかを見て

756
00:50:16,783 --> 00:50:20,154
カスタムグレーで
塗りつぶします 

757
00:50:20,921 --> 00:50:22,923
IBでは速く

758
00:50:23,023 --> 00:50:25,626
Under Page Background Colorを
使って変えます

759
00:50:25,726 --> 00:50:29,730
それはセマンティックであり
即座に結果が得られます

760
00:50:29,930 --> 00:50:34,668
文書アプリケーションの残りで
ダークモード向きに見せます

761
00:50:36,703 --> 00:50:41,108
次は 静的な文書エリアの
明るい背景のトップでの

762
00:50:41,208 --> 00:50:43,243
暗いフォアグラウンドです

763
00:50:43,911 --> 00:50:45,579
これはWYSIWYGの
エディタです

764
00:50:45,679 --> 00:50:50,284
Chameleon Wranglerユーザは
色 画像 フォントなどを

765
00:50:50,450 --> 00:50:52,886
コントロールしています

766
00:50:53,554 --> 00:50:57,691
だから同じ明度を
維持すると期待します

767
00:50:58,592 --> 00:51:02,229
しかし細かいアラが
気になります

768
00:50:58,592 --> 00:51:02,229
しかし細かいアラが
気になります

769
00:51:02,830 --> 00:51:07,000
文字のハイライトカラーは
今も黒の変形です

770
00:51:07,101 --> 00:51:09,069
オートコレクトにより

771
00:51:09,169 --> 00:51:13,106
暗さが明るいアピアランスを
妨げます

772
00:51:13,874 --> 00:51:18,078
全エリアを
明るく戻したいなら

773
00:51:19,479 --> 00:51:21,648
NSAppearanceが有効です

774
00:51:22,316 --> 00:51:25,185
NSAppearanceは
魔法のように

775
00:51:25,285 --> 00:51:29,957
明暗の違いを
ダークモードに切り替えます

776
00:51:30,691 --> 00:51:37,231
色 素材 画像を含む束として
NSAppearanceは

777
00:51:37,331 --> 00:51:41,268
システム全体で図柄を
コントロールします

778
00:51:42,703 --> 00:51:46,507
labelColorで何か描くなら

779
00:51:46,607 --> 00:51:51,378
現在のアピアランスでの
正確なRGB値を知ることです

780
00:51:52,112 --> 00:51:55,849
図柄や素材の効果の
コントロールでも同様です

781
00:51:57,017 --> 00:52:00,020
Mojaveで新しいのは
ダークアピアランスであり

782
00:51:57,017 --> 00:52:00,020
Mojaveで新しいのは
ダークアピアランスであり

783
00:52:00,120 --> 00:52:05,592
デザイナーはシステムを
再定義し構築してきました

784
00:52:06,793 --> 00:52:08,262
ダークモードの時は

785
00:52:08,362 --> 00:52:12,733
ダークアピアランスが
アプリケーションに適用されます

786
00:52:13,300 --> 00:52:15,235
labelColorで描く時

787
00:52:15,335 --> 00:52:17,037
ライトの代わりに

788
00:52:17,137 --> 00:52:20,407
ダークアピアランスを
参照します

789
00:52:20,708 --> 00:52:22,643
全素材に共通です

790
00:52:23,944 --> 00:52:26,380
これはシステムで唯一の
素材ではありません

791
00:52:27,147 --> 00:52:29,083
他にもあるのです

792
00:52:29,183 --> 00:52:31,819
アクセシビリティの
高コントラストと共に

793
00:52:31,919 --> 00:52:34,521
アピアランスも
高コントラストになり

794
00:52:34,621 --> 00:52:37,091
アプリケーションに
適用されます

795
00:52:37,791 --> 00:52:39,059
実際はもっとあります

796
00:52:39,159 --> 00:52:42,930
サイドバーなどの
すべての色を再定義する

797
00:52:43,030 --> 00:52:45,699
バイブランシーが
またあります

798
00:52:46,867 --> 00:52:49,203
上級編では
バイブランシーのために

799
00:52:49,636 --> 00:52:54,875
アセットカタログを
効果的に使う方法を話します

800
00:52:55,909 --> 00:53:00,514
デフォルトでは
アプリケーションのアピアランスは

801
00:52:55,909 --> 00:53:00,514
デフォルトでは
アプリケーションのアピアランスは

802
00:53:00,614 --> 00:53:02,216
システムに従います

803
00:53:02,316 --> 00:53:05,219
しかしアピアランスの
プロパティを設定で

804
00:53:05,319 --> 00:53:06,620
オーバーライドも

805
00:53:07,121 --> 00:53:09,723
これは両モードの
Chameleon Wranglerで

806
00:53:10,290 --> 00:53:12,292
システムに準じています

807
00:53:12,393 --> 00:53:16,830
アピアランスをdarkAquaに
設定するとダークモードになり

808
00:53:17,698 --> 00:53:20,901
ライトアピアランスでは
逆になります

809
00:53:21,235 --> 00:53:26,173
もちろんゼロに設定すれば
デフォルトに戻ります

810
00:53:27,641 --> 00:53:31,545
ダークモードで作動する
アプリケーションを見たら

811
00:53:31,712 --> 00:53:36,683
見栄えがいいダークモードに
常にしたくなるでしょう

812
00:53:37,584 --> 00:53:43,557
しかしダークモードにするか
常に自問することは重要です

813
00:53:44,558 --> 00:53:48,662
QuickTimeのような
メディア特化型のものや

814
00:53:48,796 --> 00:53:54,902
色彩関係のプロ向けの
アプリケーションなら必要でしょう

815
00:53:55,602 --> 00:53:58,739
しかしユーザの選択次第です

816
00:53:59,573 --> 00:54:01,675
システム環境設定により

817
00:53:59,573 --> 00:54:01,675
システム環境設定により

818
00:54:01,775 --> 00:54:05,479
アプリケーションを
暗くしてる人もいるでしょう

819
00:54:05,746 --> 00:54:08,615
まずシステム環境設定に戻り

820
00:54:08,782 --> 00:54:12,252
常にダークモードにできます

821
00:54:13,620 --> 00:54:18,025
場合によっては
さらなる設定が必要です

822
00:54:18,125 --> 00:54:19,393
例えばメールですね

823
00:54:19,493 --> 00:54:24,231
しかしユーザの希望が
尊重されるべきです

824
00:54:25,265 --> 00:54:27,868
常にダークモードにするなら

825
00:54:27,968 --> 00:54:31,505
全体を
暗くしないのが重要です

826
00:54:31,605 --> 00:54:35,008
暗くするのは
ウィンドウではなく

827
00:54:35,108 --> 00:54:38,412
サイドバーだけに
するといいでしょう

828
00:54:39,213 --> 00:54:43,050
darkAquaアピアランスも
使用できます

829
00:54:44,818 --> 00:54:50,390
また個別のウィンドウや
ビュースコーピングで設定でき

830
00:54:50,490 --> 00:54:53,093
そこに含まれるビューにより
継承されます

831
00:54:54,194 --> 00:54:58,065
例えばサイドバーを
常にdarkAquaに設定します

832
00:54:58,666 --> 00:55:04,405
実験するならダークモード内の
テキストと画像のすべてを

833
00:54:58,666 --> 00:55:04,405
実験するならダークモード内の
テキストと画像のすべてを

834
00:55:04,905 --> 00:55:09,376
問題解消のために
使うこともできます

835
00:55:09,843 --> 00:55:15,349
全文書エリアの
ライトアピアランスを保つなら

836
00:55:15,449 --> 00:55:20,754
lightAquaに設定すれば
適切に表示されるでしょう

837
00:55:20,854 --> 00:55:24,958
オートコレクトで生じる
問題もありません

838
00:55:26,593 --> 00:55:32,433
効果を得ると共に
デバッグしにくくなります

839
00:55:32,733 --> 00:55:36,637
テーブルビューで
vibrantLightを使うと

840
00:55:36,837 --> 00:55:42,476
そのアピアランスを継承し
クリアに見えます

841
00:55:43,544 --> 00:55:46,880
ダークモードでは
明確な問題になります

842
00:55:47,114 --> 00:55:51,985
テーブルビューの文字と画像は
vibrantLightの見た目を継承し

843
00:55:52,085 --> 00:55:54,822
暗い背景では
見づらくなります

844
00:55:55,155 --> 00:55:58,058
大部分で３つの
オーバーライドを除外し

845
00:55:58,225 --> 00:56:02,062
ここでは常に明るくする
意図はありません

846
00:55:58,225 --> 00:56:02,062
ここでは常に明るくする
意図はありません

847
00:56:03,364 --> 00:56:08,135
これはInterface Builderでも起き
属性インスペクタの最底部で

848
00:56:08,235 --> 00:56:10,204
アウトラインビューが

849
00:56:10,304 --> 00:56:14,274
lightAquaアピアランス
であることを優先しました

850
00:56:14,641 --> 00:56:17,411
ここでの修正は元の
スタイルに戻すためで

851
00:56:17,511 --> 00:56:22,616
起動すると
ダークモードに従います

852
00:56:23,016 --> 00:56:24,918
チェックもします

853
00:56:27,121 --> 00:56:31,058
Chameleon Wranglerは
ダークモードでクリアに見えます

854
00:56:31,859 --> 00:56:34,661
この時点では

855
00:56:34,761 --> 00:56:39,199
ダークモードに
０ラインのコードを書きました

856
00:56:40,100 --> 00:56:43,170
偉大なダークモード市民に
必要な変更は

857
00:56:43,303 --> 00:56:49,243
アイデアを文字より
意味で表すことです

858
00:56:51,612 --> 00:56:55,115
例えば同じ変更により
ダークモードだけでなく

859
00:56:55,482 --> 00:56:59,653
ライトアピアランスでも
クリアに見えるようにします

860
00:57:00,721 --> 00:57:02,790
アクセントカラーなどを加え

861
00:57:02,890 --> 00:57:06,527
ラベルカラーを
システムと一致させます

862
00:57:07,794 --> 00:57:12,132
これらの変更はダークモードでも
生かされるべきで

863
00:57:12,333 --> 00:57:14,768
高コントラストの
アクセシビリティでも

864
00:57:14,868 --> 00:57:18,105
同じ変更と
サポートが要ります

865
00:57:19,940 --> 00:57:25,946
これらのステップを繰り返すため
Xcode 10を使い

866
00:57:26,513 --> 00:57:28,248
10.14 SDKでリンクします

867
00:57:28,415 --> 00:57:32,186
システムコントロールと
システムカラーを使うための

868
00:57:32,286 --> 00:57:36,623
必要なステップであり
クリアに見えるよう調整します

869
00:57:37,224 --> 00:57:42,496
次はアプリケーションの静的な色や
非テンプレート画像―

870
00:57:42,729 --> 00:57:47,501
非セマンティック素材を
監査し 適切に置換します

871
00:57:48,602 --> 00:57:52,306
システムカラーや
セマンティックな素材でもよく

872
00:57:52,406 --> 00:57:56,143
カスタムのアセットカタログの
色や画像を定義します

873
00:57:56,510 --> 00:58:00,614
またこれらのアピアランスに
注意することが重要です

874
00:57:56,510 --> 00:58:00,614
またこれらのアピアランスに
注意することが重要です

875
00:58:01,615 --> 00:58:04,485
詳細は上級編で話します

876
00:58:04,651 --> 00:58:07,321
NSAppearanceの使い方や

877
00:58:07,421 --> 00:58:10,958
NSVisualEffectView内での
カスタム方法についてです

878
00:58:11,358 --> 00:58:16,296
ビューが正確に機能しているかの
確認方法もです

879
00:58:17,764 --> 00:58:21,902
ビューデバッガと
Interface Builderは有益です

880
00:58:22,169 --> 00:58:28,976
多くのファンがダークモードを
待ち望んでいます

881
00:58:29,076 --> 00:58:33,146
皆さんには 犠牲を
払わないでいただきたい

882
00:58:33,380 --> 00:58:36,817
これらの機能は
１年以上利用可能ですが

883
00:58:36,917 --> 00:58:41,054
上級編では
さらに掘り下げます

884
00:58:42,423 --> 00:58:43,857
いくつかの
Cocoaラボがあります

885
00:58:43,957 --> 00:58:48,028
ダークモードラボでは
技術面のサポートに加え

886
00:58:48,128 --> 00:58:53,000
レイモンドとメンバーが
デザインの質問に答えます

887
00:58:53,133 --> 00:58:56,303
特別な機会を
お見逃しなく

888
00:58:56,937 --> 00:59:01,475
ありがとうございます
最後までお楽しみください

889
00:58:56,937 --> 00:59:01,475
ありがとうございます
最後までお楽しみください

890
00:59:01,575 --> 00:59:03,043
(拍手)