
1
00:00:06,974 --> 00:00:15,215
(音楽)

2
00:00:18,352 --> 00:00:24,491
(拍手)

3
00:00:25,058 --> 00:00:26,093
ようこそ

4
00:00:26,360 --> 00:00:29,630
Siriのショートカットの
Voice設定について

5
00:00:29,997 --> 00:00:34,001
私 アミットと
同僚の彩花が説明します

6
00:00:34,101 --> 00:00:38,138
この機能をご紹介できて
とても光栄です

7
00:00:39,006 --> 00:00:41,341
ショートカットを使うと

8
00:00:41,441 --> 00:00:47,147
アプリケーションの中で
重要なものをすぐに呼び出せます

9
00:00:47,648 --> 00:00:49,783
しかも ショートカットを

10
00:00:50,217 --> 00:00:54,121
Siriに追加できるように
なりました

11
00:00:54,588 --> 00:00:57,591
つまり 声で操作ができます

12
00:00:58,325 --> 00:01:02,196
ユーザが声で
ショートカットを利用する際

13
00:00:58,325 --> 00:01:02,196
ユーザが声で
ショートカットを利用する際

14
00:01:02,296 --> 00:01:05,165
重要なのは快適に使えること

15
00:01:05,432 --> 00:01:07,501
そこが今日のポイントです

16
00:01:07,868 --> 00:01:09,269
では 始めましょう

17
00:01:10,304 --> 00:01:15,576
まず Siriにショートカットを
追加する方法を紹介します

18
00:01:15,676 --> 00:01:19,880
設定は とても簡単で
すぐ利用できます

19
00:01:20,714 --> 00:01:23,951
次にカスタム応答の
Siriの発言を

20
00:01:24,051 --> 00:01:27,654
ユーザに提供する方法を
解説します

21
00:01:28,355 --> 00:01:32,392
次に 彩花が
UIを快適に利用するための

22
00:01:32,492 --> 00:01:36,797
ベストプラクティスを
いくつか紹介します

23
00:01:37,364 --> 00:01:40,667
最後に アプリケーションに
ショートカットを

24
00:01:40,767 --> 00:01:44,271
設定する方法をご紹介します

25
00:01:47,474 --> 00:01:54,281
では カスタム応答などの
詳細な設定を解説する前に

26
00:01:54,815 --> 00:02:00,554
Siriでショートカットを
設定してみましょう

27
00:01:54,815 --> 00:02:00,554
Siriでショートカットを
設定してみましょう

28
00:02:02,923 --> 00:02:07,361
使うのはスープを注文する
アプリケーションで

29
00:02:07,628 --> 00:02:09,463
Soup Chefといいます

30
00:02:10,464 --> 00:02:14,868
当社のあらゆる
ショートカットAPIに対応

31
00:02:15,302 --> 00:02:17,971
ユーザが注文するたびに

32
00:02:18,138 --> 00:02:23,777
Soup ChefはカスタムIntentを
Siriに伝えます

33
00:02:24,945 --> 00:02:27,581
昨日 トマトスープを
注文したら

34
00:02:27,848 --> 00:02:29,383
すごく気に入りました

35
00:02:30,017 --> 00:02:33,320
もう一度
注文したいと思った時

36
00:02:33,854 --> 00:02:37,124
Siriで注文できたら
いいですよね

37
00:02:37,491 --> 00:02:38,859
実はできるんです

38
00:02:40,627 --> 00:02:45,566
Siriの設定画面に行くと
既存のIntentが

39
00:02:45,666 --> 00:02:49,336
ショートカット候補になっています

40
00:02:49,803 --> 00:02:51,405
タップしましょう

41
00:02:52,272 --> 00:02:54,174
この画面が出たら

42
00:02:54,274 --> 00:02:58,512
ショートカット実行の
言葉を登録します

43
00:02:59,012 --> 00:03:03,884
画面上にはショートカットで
何をするかが

44
00:02:59,012 --> 00:03:03,884
画面上にはショートカットで
何をするかが

45
00:03:03,984 --> 00:03:06,053
詳細に示されています

46
00:03:06,486 --> 00:03:09,122
この設定も解説しますが

47
00:03:09,423 --> 00:03:13,393
まずはショートカットの
言葉を決めましょう

48
00:03:13,560 --> 00:03:18,232
短く 覚えやすくて
何度も言える言葉です

49
00:03:18,866 --> 00:03:22,402
すぐには
思いつかない人のために

50
00:03:22,636 --> 00:03:27,074
“スープタイム”という
候補が出ています

51
00:03:27,407 --> 00:03:29,676
これにしましょう

52
00:03:30,744 --> 00:03:32,913
それでは録音します

53
00:03:34,214 --> 00:03:37,951
Siriでの
ショートカット登録です

54
00:03:38,151 --> 00:03:39,653
では やりますよ

55
00:03:40,387 --> 00:03:43,757
Siriに
“スープタイム”と言うと

56
00:03:44,324 --> 00:03:47,227
Intentを実行するか聞かれます

57
00:03:47,961 --> 00:03:50,764
“はい”と言うと注文されます

58
00:03:50,898 --> 00:03:52,799
すごく簡単です

59
00:03:53,934 --> 00:03:58,405
ユーザは よく使うものに
ショートカットを設定し

60
00:03:58,572 --> 00:04:01,842
どこからでも使うことができます

61
00:03:58,572 --> 00:04:01,842
どこからでも使うことができます

62
00:04:02,009 --> 00:04:05,913
iOS端末でも Apple Watchでも

63
00:04:06,046 --> 00:04:11,251
HomePodでも
CarPlayでも使えます

64
00:04:12,019 --> 00:04:17,925
ですから最高のエクスペリエンスを
用意しなくてはいけません

65
00:04:19,091 --> 00:04:23,530
そこで利用すべきものが
カスタム応答です

66
00:04:24,665 --> 00:04:30,470
ショートカットを使うことで
Siriとの対話を提供できます

67
00:04:30,637 --> 00:04:34,107
しかも 声と共に
適切かつ重要な情報を

68
00:04:34,208 --> 00:04:37,344
提供することができるのです

69
00:04:38,478 --> 00:04:43,083
カスタム応答には
テンプレート文字列を使うので

70
00:04:43,183 --> 00:04:45,886
Intent Definitionファイルが
使えます

71
00:04:47,688 --> 00:04:51,792
応答の種類によって
ショートカットは

72
00:04:51,992 --> 00:04:54,328
４種類に分類できます

73
00:04:55,095 --> 00:04:59,666
１つは確認のカスタム応答です

74
00:05:01,001 --> 00:05:04,137
ユーザが
ショートカットを実行する前に

75
00:05:04,404 --> 00:05:07,941
ここで重要な情報を提示できます

76
00:05:09,576 --> 00:05:12,346
次は実行完了の通知です

77
00:05:12,713 --> 00:05:18,552
ショートカットの実行後に
補足情報を伝えることができます

78
00:05:18,652 --> 00:05:24,057
まず ショートカットが
正しく実行されたことを

79
00:05:24,158 --> 00:05:28,262
Siriがユーザに知らせます

80
00:05:28,362 --> 00:05:32,799
続いてアプリケーションに
関連する情報が出ます

81
00:05:34,535 --> 00:05:38,505
３つめは情報提供のための応答で

82
00:05:38,605 --> 00:05:41,175
これが非常に画期的です

83
00:05:42,276 --> 00:05:47,915
情報提供の応答は
乗り換え案内や天気予報などを

84
00:05:48,015 --> 00:05:52,920
声を介してユーザに
伝える仕組みです

85
00:05:53,253 --> 00:05:58,926
Siriがアプリケーションの
可能性を広げたのです

86
00:06:00,727 --> 00:06:05,032
最後に うまく機能しない時の
話もしましょう

87
00:06:05,365 --> 00:06:10,337
カスタムエラー応答では
“失敗した”と言う代わりに

88
00:06:10,437 --> 00:06:13,240
原因の説明も可能になりました

89
00:06:13,907 --> 00:06:20,480
まず 実行できなかったことを
Siriがユーザに伝えます

90
00:06:20,647 --> 00:06:22,649
そして ユーザに対し

91
00:06:22,850 --> 00:06:28,422
次にすべき操作を
示唆することができるのです

92
00:06:31,024 --> 00:06:35,095
カスタム応答について
理解できましたね

93
00:06:36,530 --> 00:06:40,734
では 実際の導入方法を説明します

94
00:06:42,769 --> 00:06:47,808
カスタム応答は
Intentと一緒に機能します

95
00:06:48,308 --> 00:06:51,378
まずはショートカットを使う状況を

96
00:06:51,478 --> 00:06:55,082
Intentで
定義しなくてはいけません

97
00:06:56,116 --> 00:07:00,187
今回は“OrderSoup”という
Intentを作りました

98
00:06:56,116 --> 00:07:00,187
今回は“OrderSoup”という
Intentを作りました

99
00:07:00,287 --> 00:07:03,257
スープを注文するものです

100
00:07:06,059 --> 00:07:10,130
ここで Intentの種類を選びます

101
00:07:10,430 --> 00:07:15,002
種類によって
Siriの発言の仕方や

102
00:07:15,135 --> 00:07:18,605
注文ボタンの表示が変わってきます

103
00:07:18,872 --> 00:07:23,544
ですから状況にふさわしいものを
選びましょう

104
00:07:24,878 --> 00:07:27,814
カスタムIntentの定義が済んだら

105
00:07:28,182 --> 00:07:30,484
次は応答タブです

106
00:07:30,884 --> 00:07:36,857
ここには すでに完了とエラーの
応答コードがあります

107
00:07:37,024 --> 00:07:43,330
これは一般的な応答で
ただ状況を伝えるためのものです

108
00:07:43,730 --> 00:07:47,134
我々がユーザに伝えたいのは

109
00:07:47,234 --> 00:07:52,072
いつ スープを店舗で
受け取れるかの情報です

110
00:07:52,639 --> 00:07:56,477
そのカスタム完了通知を
定義しましょう

111
00:07:56,944 --> 00:08:01,415
そのための手順を説明します

112
00:07:56,944 --> 00:08:01,415
そのための手順を説明します

113
00:08:02,382 --> 00:08:06,119
ランタイムで情報を
提供するために

114
00:08:06,220 --> 00:08:10,324
テンプレートの応答プロパティを
宣言します

115
00:08:11,225 --> 00:08:13,727
プロパティの画面で

116
00:08:14,328 --> 00:08:17,764
waitTimeとsoupプロパティを
追加します

117
00:08:19,466 --> 00:08:24,338
あとはカスタム応答のための
テンプレートを

118
00:08:24,972 --> 00:08:26,773
定義するだけです

119
00:08:26,907 --> 00:08:30,077
これはSiriが読み上げるものです

120
00:08:31,145 --> 00:08:35,115
Intent Definitionファイルの
テンプレート画面で

121
00:08:35,682 --> 00:08:38,585
完了のテンプレートを追加

122
00:08:39,720 --> 00:08:41,121
ここでもう１つ

123
00:08:41,288 --> 00:08:44,825
最近 スープが売り切れるので

124
00:08:45,025 --> 00:08:51,231
ただエラー表示をするよりも
“完売”と表示したいところです

125
00:08:51,732 --> 00:08:56,570
なので スープが売り切れたのを
伝えるための

126
00:08:56,670 --> 00:09:00,240
failureOutOfStock
というコードを追加しました

127
00:08:56,670 --> 00:09:00,240
failureOutOfStock
というコードを追加しました

128
00:09:02,810 --> 00:09:06,413
これでIntent応答が定義でき

129
00:09:06,613 --> 00:09:13,053
それにより Xcodeが
応答のサブクラスを自動生成します

130
00:09:13,287 --> 00:09:17,558
定義した全プロパティと
テンプレートのコンストラクタが

131
00:09:17,658 --> 00:09:19,560
これに含まれます

132
00:09:19,726 --> 00:09:23,831
構築に必要なプロパティは
これだけです

133
00:09:27,467 --> 00:09:32,873
そして この応答を
Intentハンドラで使います

134
00:09:34,641 --> 00:09:38,846
Intentのハンドルは２ステップ

135
00:09:39,079 --> 00:09:41,181
確認と実行です

136
00:09:42,115 --> 00:09:43,617
このIntentを―

137
00:09:44,084 --> 00:09:48,555
実行できる状態か
確認する質問が出ます

138
00:09:49,289 --> 00:09:55,162
まずは ユーザが選んだスープが
メニューにあるか確認

139
00:09:56,063 --> 00:10:00,167
メニューにあれば
注文可能と判定されます

140
00:09:56,063 --> 00:10:00,167
メニューにあれば
注文可能と判定されます

141
00:10:00,834 --> 00:10:06,940
この段階で 実際に注文可能か
スープの在庫も確認します

142
00:10:07,241 --> 00:10:08,675
やってみましょう

143
00:10:09,476 --> 00:10:12,312
まず メニューを参照し

144
00:10:13,280 --> 00:10:15,349
在庫を確認します

145
00:10:15,649 --> 00:10:18,986
売り切れの場合は
completionハンドラを

146
00:10:19,086 --> 00:10:22,823
failureOutOfStockで
呼び出します

147
00:10:24,391 --> 00:10:27,794
問題がなければ次に進みましょう

148
00:10:28,328 --> 00:10:34,234
これを機にカスタム確認応答も
加えたいところですね

149
00:10:34,468 --> 00:10:37,471
それも追ってサポートします

150
00:10:38,438 --> 00:10:40,641
さて 確認が終わりました

151
00:10:41,775 --> 00:10:44,077
次はIntentをハンドルし

152
00:10:44,311 --> 00:10:47,247
スープの注文を入れましょう

153
00:10:47,581 --> 00:10:53,020
Intent上の全情報を使って
注文を作成し

154
00:10:54,054 --> 00:10:56,857
orderManagerで注文します

155
00:10:57,157 --> 00:11:03,397
注文が完了したら 応答コードで
システムに通知します

156
00:10:57,157 --> 00:11:03,397
注文が完了したら 応答コードで
システムに通知します

157
00:11:04,164 --> 00:11:08,836
実はここで カスタム応答
テンプレートを使って

158
00:11:08,936 --> 00:11:11,738
ユーザに
待ち時間も伝えられます

159
00:11:12,439 --> 00:11:13,941
やってみましょう

160
00:11:15,475 --> 00:11:17,744
その際 カスタムIntentに

161
00:11:17,845 --> 00:11:22,516
非常に有益な応答を
２つ追加しておきます

162
00:11:24,084 --> 00:11:25,385
見てみましょう

163
00:11:26,887 --> 00:11:31,425
以前は 注文完了の通知しか
できませんでした

164
00:11:32,125 --> 00:11:35,462
しかし 今は
あと10分で スープが

165
00:11:35,562 --> 00:11:40,367
ピックアップできるという情報も
伝えられるのです

166
00:11:41,969 --> 00:11:46,874
エラーが出た場合は
さらに役に立ちます

167
00:11:47,474 --> 00:11:50,210
エラー通知だけだったのが

168
00:11:50,677 --> 00:11:55,115
今では在庫切れだと
伝えることができます

169
00:11:55,215 --> 00:11:58,085
ユーザは 別の商品を注文するか

170
00:11:58,352 --> 00:12:02,589
時間を置いて注文するか
決められます

171
00:11:58,352 --> 00:12:02,589
時間を置いて注文するか
決められます

172
00:12:06,159 --> 00:12:11,098
これで カスタム応答の機能が
分かりましたね

173
00:12:12,332 --> 00:12:13,834
でも続きがあります

174
00:12:14,067 --> 00:12:18,605
スープのエンジニアとして
必死で努力し

175
00:12:18,705 --> 00:12:22,009
極上のエクスペリエンスを
提供します

176
00:12:22,509 --> 00:12:26,947
(拍手)

177
00:12:28,582 --> 00:12:33,587
このようなショートカットを
どこからでも使えたら

178
00:12:33,687 --> 00:12:35,989
非常に便利ですよね

179
00:12:36,390 --> 00:12:40,394
Intents UI Extensionで
できるんです

180
00:12:41,361 --> 00:12:45,532
Intents UI Extensionで
ショートカットに

181
00:12:45,632 --> 00:12:48,469
カスタムUIを提供します

182
00:12:48,569 --> 00:12:51,939
それがロック画面や検索
Siriなど

183
00:12:52,039 --> 00:12:54,975
あらゆる場所で表示されます

184
00:12:55,876 --> 00:13:00,581
Intents UI Extensionの
詳しい解説は

185
00:12:55,876 --> 00:13:00,581
Intents UI Extensionの
詳しい解説は

186
00:13:00,814 --> 00:13:05,319
“What's New in SiriKit?”を
ご覧ください

187
00:13:06,920 --> 00:13:11,391
では Soup Chefで
Intents UI Extensionを

188
00:13:11,492 --> 00:13:12,926
見てみましょう

189
00:13:13,560 --> 00:13:16,263
これが最初の画面です

190
00:13:16,763 --> 00:13:19,600
カスタムIntents
UI Extensionを使うと 

191
00:13:19,800 --> 00:13:23,270
ユーザに注文の詳細を
表示できます

192
00:13:23,470 --> 00:13:26,640
実際に注文する前に

193
00:13:26,740 --> 00:13:31,144
2.95ドルと確認できるのは
非常に便利です

194
00:13:32,146 --> 00:13:35,649
通知は“注文完了”だけでは
ありません

195
00:13:36,583 --> 00:13:38,485
領収書を表示し

196
00:13:38,585 --> 00:13:43,423
あと10分で用意できると
知らせることができます

197
00:13:45,626 --> 00:13:46,627
いいですね

198
00:13:47,060 --> 00:13:52,366
カスタムUIとカスタム応答に
補足を加えるのは

199
00:13:52,466 --> 00:13:53,967
簡単なのです

200
00:13:54,468 --> 00:13:58,005
Soup Chefの事例を
お見せしましょう

201
00:14:13,787 --> 00:14:17,491
これがSoup Chefの
アプリケーションです

202
00:14:18,992 --> 00:14:21,361
Intent Definitionファイルを
見ると

203
00:14:21,461 --> 00:14:25,566
スープ注文の
Intentが定義されています

204
00:14:25,899 --> 00:14:29,469
カテゴリーは“Order”です

205
00:14:30,838 --> 00:14:34,708
今度は 関連付けられた
応答を見てください

206
00:14:35,075 --> 00:14:38,278
プロパティとテンプレートです

207
00:14:38,512 --> 00:14:44,351
ここに完了のカスタムメッセージを
追加してみましょう

208
00:14:44,718 --> 00:14:47,287
まずは待ち時間のプロパティです

209
00:14:47,521 --> 00:14:49,122
プラスをクリックし

210
00:14:49,890 --> 00:14:52,593
“waitTime”と入力

211
00:14:52,693 --> 00:14:54,394
種類はStringのままで

212
00:14:54,495 --> 00:14:59,466
あとで適切なものに
フォーマットします

213
00:15:00,801 --> 00:15:05,906
注文内容を確認するための
プロパティも追加します

214
00:15:06,273 --> 00:15:09,076
スープはカスタム扱いなので

215
00:15:09,343 --> 00:15:11,879
“Custom”を選択

216
00:15:14,214 --> 00:15:16,583
次は応答コードです

217
00:15:16,917 --> 00:15:19,520
エラーと注文完了があります

218
00:15:20,521 --> 00:15:25,325
ここでは待ち時間の応答を
定義します

219
00:15:25,659 --> 00:15:26,860
始めますよ

220
00:15:27,861 --> 00:15:35,269
“スープは あとwaitTimeで
ご用意できます”

221
00:15:37,104 --> 00:15:40,541
完売のエラーコードも追加します

222
00:15:40,941 --> 00:15:45,779
この場合は プラスを押して
別の応答コードを入力

223
00:15:46,013 --> 00:15:50,784
“failureOutOfStock”

224
00:15:52,286 --> 00:15:56,990
注文完了のチェックは
外しておきます

225
00:15:57,524 --> 00:16:01,061
そして ここで
テンプレートの定義です

226
00:15:57,524 --> 00:16:01,061
そして ここで
テンプレートの定義です

227
00:16:01,562 --> 00:16:07,067
“申し訳ありません
スープは品切れです”

228
00:16:09,403 --> 00:16:13,140
これでカスタム応答ができました

229
00:16:13,240 --> 00:16:16,310
次はIntentハンドラの
ファイルです

230
00:16:24,751 --> 00:16:25,652
よし

231
00:16:27,321 --> 00:16:28,388
これです

232
00:16:28,889 --> 00:16:32,860
ご覧のとおり
確認と実行のメソッドがあります

233
00:16:32,960 --> 00:16:34,361
まずは確認です

234
00:16:34,862 --> 00:16:38,365
ユーザが何を注文したのか見極め

235
00:16:38,632 --> 00:16:43,103
それがメニューにあるかを
チェックします

236
00:16:43,203 --> 00:16:46,240
あれば“ready”の応答コードへ

237
00:16:46,974 --> 00:16:53,113
ここで大事なのは スープが
注文可能かチェックすることです

238
00:16:53,313 --> 00:16:57,885
まずはメニューの参照を
ここに入れましょう

239
00:16:59,219 --> 00:17:01,722
そして 在庫のチェック

240
00:16:59,219 --> 00:17:01,722
そして 在庫のチェック

241
00:17:06,593 --> 00:17:12,465
完売なら failureOutOfStockで
completionハンドラを呼び出します

242
00:17:18,204 --> 00:17:21,608
そして
注文されたオブジェクトをここに…

243
00:17:25,279 --> 00:17:29,750
これでエラー用の応答が
完成しました

244
00:17:29,917 --> 00:17:31,451
次は実行です

245
00:17:32,219 --> 00:17:35,956
実行とは
つまりスープの注文です

246
00:17:36,223 --> 00:17:39,993
まずIntentから注文を作ります

247
00:17:41,028 --> 00:17:43,997
そしてorderManagerで注文し

248
00:17:44,164 --> 00:17:49,036
最後に 注文の完了を
システムに知らせます

249
00:17:49,436 --> 00:17:54,341
しかし ここで待ち時間なども
伝えられるので

250
00:17:54,508 --> 00:17:58,312
新たなカスタム応答コードも
入力しましょう

251
00:18:03,484 --> 00:18:07,754
この応答テンプレートには
soupとwaitTimeの文字列を

252
00:18:08,388 --> 00:18:11,992
Intentから持ってきます

253
00:18:18,999 --> 00:18:22,102
待ち時間は
Orderから持ってきます

254
00:18:24,771 --> 00:18:26,306
これで終了

255
00:18:27,241 --> 00:18:32,412
カスタム応答のサポートを
Intentに追加するのは

256
00:18:33,013 --> 00:18:34,448
簡単なのです

257
00:18:35,682 --> 00:18:40,387
まずは状況に合わせて
カスタムIntentを定義

258
00:18:40,721 --> 00:18:46,260
そして Siriに言わせたい
応答を定義します

259
00:18:46,360 --> 00:18:49,630
最後にそれを
Intentハンドラへ

260
00:18:50,230 --> 00:18:53,200
さて 先ほどスープを注文したので

261
00:18:53,300 --> 00:18:55,502
そろそろ取りに行きます

262
00:18:55,836 --> 00:18:59,606
同僚の野中彩花に
交代しますね

263
00:18:59,740 --> 00:19:03,577
ここからは彼女が
音声とUIについての

264
00:18:59,740 --> 00:19:03,577
ここからは彼女が
音声とUIについての

265
00:19:03,677 --> 00:19:07,448
ベストプラクティスを
ご紹介します

266
00:19:07,548 --> 00:19:09,283
では 彩花の登場です

267
00:19:09,416 --> 00:19:14,421
(拍手)

268
00:19:14,688 --> 00:19:15,856
ありがとう

269
00:19:15,956 --> 00:19:19,026
(拍手)

270
00:19:19,927 --> 00:19:20,994
こんにちは

271
00:19:21,495 --> 00:19:25,999
ご覧いただいたとおり
ショートカットの設定は簡単です

272
00:19:26,166 --> 00:19:29,336
ショートカットが提供されると

273
00:19:29,436 --> 00:19:33,240
すぐに使える状態で
表示されます

274
00:19:33,707 --> 00:19:36,777
ここからは
いくつか新しいAPIと

275
00:19:36,877 --> 00:19:40,447
ベストプラクティスを
ご紹介します

276
00:19:40,547 --> 00:19:44,451
ご存知のとおり
ユーザは細かいことから

277
00:19:44,551 --> 00:19:47,221
大きな配慮に気づきますね

278
00:19:48,088 --> 00:19:49,556
最初のセッションでは

279
00:19:49,656 --> 00:19:54,061
ショートカットの
提供方法を２つ紹介しました

280
00:19:54,328 --> 00:19:56,663
１つは NSUserActivityです

281
00:19:57,164 --> 00:20:00,434
基本的な統合なら
userActivityで

282
00:19:57,164 --> 00:20:00,434
基本的な統合なら
userActivityで

283
00:20:00,534 --> 00:20:04,872
ユーザに特定のコンテンツを
提示できます

284
00:20:05,305 --> 00:20:07,574
２つめはIntentです

285
00:20:07,741 --> 00:20:10,444
バックグラウンドで何かを動かし

286
00:20:10,544 --> 00:20:14,348
同時にSiriを使うことができます

287
00:20:14,448 --> 00:20:18,719
これによりユーザとのやり取りを
省けます

288
00:20:19,653 --> 00:20:25,125
そして どちらにも
複数のパラメータを設定できます

289
00:20:25,626 --> 00:20:27,828
１つめは見出しです

290
00:20:28,462 --> 00:20:30,464
“Order clam chowder”

291
00:20:30,631 --> 00:20:33,801
補足文と画像も入れます

292
00:20:33,901 --> 00:20:38,338
そして最後に
推奨呼び出しフレーズも

293
00:20:39,206 --> 00:20:42,209
最適な例を見ていきましょう

294
00:20:42,309 --> 00:20:45,312
まずは見出しと補足文です

295
00:20:46,413 --> 00:20:51,652
ここで２つ ハイレベルなことを
考慮します

296
00:20:52,119 --> 00:20:56,457
まず見出しで実行内容が
分かることです

297
00:20:56,657 --> 00:21:02,496
ショートカットの実行や追加は
内容の把握が重要です

298
00:20:56,657 --> 00:21:02,496
ショートカットの実行や追加は
内容の把握が重要です

299
00:21:03,297 --> 00:21:07,601
補足文もつけられますが
これは任意です

300
00:21:08,268 --> 00:21:10,938
では 詳細を見ていきましょう

301
00:21:12,206 --> 00:21:14,975
まず 最初の文字は大文字に

302
00:21:15,075 --> 00:21:20,981
他のアプリケーションや
ショートカットと統一させます

303
00:21:22,249 --> 00:21:25,152
そして 見出しは短く

304
00:21:25,252 --> 00:21:29,356
画面に表示できることは
限られているので

305
00:21:29,590 --> 00:21:34,228
言語的に冠詞などを省けるなら
省きます

306
00:21:35,562 --> 00:21:38,665
不可欠な情報も必ず入れます

307
00:21:38,766 --> 00:21:43,904
友人への支払いを実行する
ショートカットなら

308
00:21:44,004 --> 00:21:49,843
送金する金額を
見出しに含めることが重要です

309
00:21:51,745 --> 00:21:55,215
Intentの場合は動詞を入れます

310
00:21:55,315 --> 00:21:59,953
例えば英語なら
動詞を冒頭に置きます

311
00:22:01,321 --> 00:22:04,658
もちろん 世界に発信するには

312
00:22:04,758 --> 00:22:08,128
ローカライズも
忘れてはいけません

313
00:22:09,363 --> 00:22:12,366
次は 避けるべきことを
紹介します

314
00:22:12,566 --> 00:22:15,869
まず アプリケーションの名前は

315
00:22:16,270 --> 00:22:22,009
自動的に表示されるので
見出しに含める必要はありません

316
00:22:23,477 --> 00:22:27,381
そして 見出しと補足文の
重複を避け

317
00:22:27,481 --> 00:22:31,285
本当に必要な情報を入れましょう

318
00:22:33,120 --> 00:22:39,259
言葉などの引用以外では
引用符を使うのを控えます

319
00:22:39,393 --> 00:22:41,762
メッセージを送る
ショートカットなら

320
00:22:41,862 --> 00:22:45,332
内容を引用符に入れて構いません

321
00:22:47,167 --> 00:22:49,603
では 例を見てみましょう

322
00:22:51,705 --> 00:22:54,575
Chefから
“‘クラムチャウダー'を１つ”

323
00:22:54,708 --> 00:22:57,010
“スープを買うには
Soup Chefが一番”

324
00:22:57,778 --> 00:23:03,083
これが悪い例であることは
もう お分かりですよね

325
00:22:57,778 --> 00:23:03,083
これが悪い例であることは
もう お分かりですよね

326
00:23:03,383 --> 00:23:04,618
改善しましょう

327
00:23:05,285 --> 00:23:08,722
まず“Soup Chefから”を削除

328
00:23:08,822 --> 00:23:12,459
すでにUIで
表示されているからです

329
00:23:13,927 --> 00:23:16,363
“‘クラムチャウダー'を１つ”が
残りました

330
00:23:16,864 --> 00:23:20,901
でも これだけでは
実行内容が分かりません

331
00:23:21,001 --> 00:23:24,771
スープを注文するのか
閲覧だけなのか不明です

332
00:23:24,938 --> 00:23:27,074
動詞を追加しましょう

333
00:23:27,307 --> 00:23:30,978
省スペースのため 冠詞も外します

334
00:23:34,481 --> 00:23:36,917
“‘クラムチャウダー’を注文する”と
なりました

335
00:23:37,551 --> 00:23:39,553
でも この表現では

336
00:23:39,653 --> 00:23:44,224
“クラムチャウダー”っぽいもの
という感じです

337
00:23:44,324 --> 00:23:48,295
これでは
おいしそうに見えませんよね

338
00:23:49,696 --> 00:23:54,401
でも これは引用符を外せば
解決します

339
00:23:55,469 --> 00:23:57,070
“‘クラムチャウダー’を注文する”に
なりました

340
00:23:57,171 --> 00:23:59,840
見出しは上出来です

341
00:24:00,140 --> 00:24:01,842
次は補足文

342
00:24:02,276 --> 00:24:05,045
“スープを買うにはSoup
Chefが一番”とあります

343
00:24:05,379 --> 00:24:08,048
これでは宣伝文句ですね

344
00:24:08,148 --> 00:24:10,584
すでに知っている情報です

345
00:24:10,684 --> 00:24:14,621
ショートカット用の
有益な情報もありません

346
00:24:15,022 --> 00:24:17,758
すでに不合格な状態ですが

347
00:24:17,891 --> 00:24:21,662
さらに致命的と言える点があります

348
00:24:21,762 --> 00:24:25,465
最近 配達サービスも
始まったのですが

349
00:24:25,566 --> 00:24:27,901
これでは配達先が分かりません

350
00:24:28,001 --> 00:24:31,505
自宅なのか
オフィスなのか不明です

351
00:24:31,605 --> 00:24:34,608
なので配達先を追加しましょう

352
00:24:35,609 --> 00:24:39,313
“クラムチャウダーを 1 Apple Park
Wayまで注文する”です

353
00:24:39,413 --> 00:24:42,983
これで具体的な実行内容が
分かりますね

354
00:24:43,217 --> 00:24:44,251
バッチリです

355
00:24:45,719 --> 00:24:48,655
設定画面では
こんな感じです

356
00:24:50,023 --> 00:24:53,360
悪くないけれど
さらに改善できます

357
00:24:53,894 --> 00:24:59,199
今はクラムチャウダーも
トマトスープもアイコンが同じです

358
00:24:59,299 --> 00:25:03,403
できれば それぞれに合った
スープの画像を

359
00:24:59,299 --> 00:25:03,403
できれば それぞれに合った
スープの画像を

360
00:25:03,504 --> 00:25:06,140
表示したいところですよね

361
00:25:06,306 --> 00:25:07,775
こんな感じです

362
00:25:08,742 --> 00:25:10,944
使えるAPIは２つ

363
00:25:11,078 --> 00:25:14,348
userActivity用と
Intent用です

364
00:25:15,816 --> 00:25:20,888
ユーザが スープの
注文履歴を見たとします

365
00:25:20,988 --> 00:25:23,690
我々は それを
ショートカットに

366
00:25:23,791 --> 00:25:25,893
結びつけることができます

367
00:25:26,593 --> 00:25:31,031
まず CSSearchableItem
AttributeSetを作成

368
00:25:31,131 --> 00:25:35,669
これは補足文の
提供と同じですが

369
00:25:35,769 --> 00:25:37,838
ここでは画像を使います

370
00:25:37,938 --> 00:25:40,674
クラムチャウダーの画像を作成

371
00:25:40,874 --> 00:25:45,879
PNGデータをサムネイルとして
attributesに設定します

372
00:25:46,113 --> 00:25:50,884
次に そのattributesを
userActivityに設定

373
00:25:50,984 --> 00:25:56,590
最後に viewControllerで
userActivityを提供します

374
00:25:58,258 --> 00:26:00,828
Intentで
どう動くか見てみましょう

375
00:25:58,258 --> 00:26:00,828
Intentで
どう動くか見てみましょう

376
00:26:01,495 --> 00:26:04,331
Intentには複数の画像を

377
00:26:04,565 --> 00:26:07,568
各パラメータごとに設定できます

378
00:26:08,001 --> 00:26:12,339
チャウダーのパラメータには
スープの画像

379
00:26:12,639 --> 00:26:15,976
deliveryLocationには
オフィスの画像を入れます

380
00:26:16,076 --> 00:26:20,414
そして INInteractionを作って
提供します

381
00:26:21,482 --> 00:26:26,687
複数のパラメータを持つ
ショートカットの場合

382
00:26:26,787 --> 00:26:31,592
どの画像が使われるのか
気になりますよね

383
00:26:32,693 --> 00:26:35,662
Intent Definitionファイルの
出番です

384
00:26:36,864 --> 00:26:39,333
特にパラメータのセクションです

385
00:26:39,666 --> 00:26:42,636
ここでは 具体性の低いものから

386
00:26:42,736 --> 00:26:47,407
最も具体的なものという
順番に並べます

387
00:26:47,508 --> 00:26:51,745
私の場合 スープの画像を
より重視するので

388
00:26:51,845 --> 00:26:55,082
soupをdeliveryLocationの
下に配置します

389
00:26:56,083 --> 00:26:59,419
すると ショートカットは
こうなりました

390
00:27:00,087 --> 00:27:04,224
最初の２つは
スープと配達先が含まれていて

391
00:27:04,324 --> 00:27:07,494
スープの画像が出ています

392
00:27:07,594 --> 00:27:11,698
３つめは
配達先だけが含まれていて

393
00:27:11,798 --> 00:27:14,835
配達先の画像が出ています

394
00:27:15,602 --> 00:27:20,641
これで完璧なので タップして
Siriに追加しましょう

395
00:27:21,408 --> 00:27:24,378
ユーザも この機能を喜び

396
00:27:24,478 --> 00:27:28,549
皆 ショートカットの設定に
夢中です

397
00:27:28,816 --> 00:27:33,153
でも 戸惑いの声も
聞こえ始めました

398
00:27:34,454 --> 00:27:37,691
何を録音すべきか
分からないのです

399
00:27:38,025 --> 00:27:42,863
ショートカットのフレーズには
創造的なヒントが役立ちます

400
00:27:43,297 --> 00:27:46,900
そこで スープが大好きな
デベロッパたちが

401
00:27:47,000 --> 00:27:51,205
注文用のフレーズを
考え出しました

402
00:27:51,371 --> 00:27:55,008
“トメイトゥ トマト”や
“チャウダータイム”です

403
00:27:55,509 --> 00:27:59,813
それらを こんなふうに
ユーザに提案します

404
00:27:59,913 --> 00:28:02,649
“チャウダータイム”はどうですか？

405
00:27:59,913 --> 00:28:02,649
“チャウダータイム”はどうですか？

406
00:28:03,250 --> 00:28:06,120
もちろん APIがありますよ

407
00:28:06,720 --> 00:28:10,858
前の例に追加するのは
１行だけです

408
00:28:11,191 --> 00:28:14,461
suggestedInvocationPhraseの
プロパティに

409
00:28:14,561 --> 00:28:16,697
“チャウダータイム”と設定

410
00:28:17,064 --> 00:28:19,199
Intentも同じです

411
00:28:19,733 --> 00:28:23,203
こちらも
suggestedInvocationPhraseを

412
00:28:23,303 --> 00:28:25,439
“チャウダータイム”にします

413
00:28:25,939 --> 00:28:28,509
シンプルなAPIですよね

414
00:28:28,609 --> 00:28:32,012
実際 どんなフレーズが
いいでしょう？

415
00:28:34,181 --> 00:28:36,783
必ず意識してほしいのは

416
00:28:36,884 --> 00:28:40,888
短くて覚えやすいという
ポイントです

417
00:28:41,221 --> 00:28:46,593
ユーザは注文のたびに
このフレーズを言うことになるので

418
00:28:46,693 --> 00:28:49,396
２～３単語が理想です

419
00:28:51,365 --> 00:28:56,203
“ヘイ Siri”を
含めないことも重要です

420
00:28:56,336 --> 00:29:01,141
“ヘイ Siri チャウダータイム”と
設定してしまったら

421
00:28:56,336 --> 00:29:01,141
“ヘイ Siri チャウダータイム”と
設定してしまったら

422
00:29:01,241 --> 00:29:05,479
実行する時は
“ヘイ Siri チャウダータイム”

423
00:29:05,579 --> 00:29:07,214
これは面倒です

424
00:29:09,750 --> 00:29:12,052
例を見てみましょう

425
00:29:13,620 --> 00:29:15,756
１つめは “ヘイ Siri,”

426
00:29:15,856 --> 00:29:18,091
“注文をお願い　ありがとう”

427
00:29:19,026 --> 00:29:23,297
丁寧ですが
いい事例ではありません

428
00:29:23,697 --> 00:29:26,266
まず“ヘイ Siri,”が問題です

429
00:29:26,366 --> 00:29:31,505
それに 毎回これを言うのは
ちょっと長すぎます

430
00:29:31,605 --> 00:29:32,773
却下します

431
00:29:33,207 --> 00:29:34,708
次はどうでしょう？

432
00:29:34,842 --> 00:29:38,345
“クラムチャウダーを１つ
オフィスまで注文する”

433
00:29:38,512 --> 00:29:41,748
よさそうに見えますが
これもダメ

434
00:29:41,849 --> 00:29:45,352
まだ長すぎて
覚えるのが大変です

435
00:29:45,452 --> 00:29:48,422
注文のたびに 思い出して

436
00:29:48,522 --> 00:29:51,758
これを言うのは イヤですよね

437
00:29:53,327 --> 00:29:54,661
これはどうでしょう？

438
00:29:54,862 --> 00:29:56,997
“チャウダータイム”だけ

439
00:29:57,097 --> 00:30:01,768
短くて覚えやすく
“ヘイ Siri,”もありません

440
00:29:57,097 --> 00:30:01,768
短くて覚えやすく
“ヘイ Siri,”もありません

441
00:30:01,869 --> 00:30:05,105
これならバッチリ
合格です

442
00:30:05,839 --> 00:30:07,975
でも まだ考慮する点が…

443
00:30:08,208 --> 00:30:13,781
世界中のユーザに 快適な
エクスペリエンスを届けるには

444
00:30:13,881 --> 00:30:15,415
ローカライズが必須です

445
00:30:15,516 --> 00:30:19,953
例えば 私は
英語と日本語を話すので

446
00:30:20,120 --> 00:30:22,823
日本語なら 例えば―

447
00:30:23,457 --> 00:30:28,395
“Chowder time”ではなく
“チャウダー食べたい”ですかね

448
00:30:30,430 --> 00:30:32,599
ローカライズをする場合

449
00:30:32,800 --> 00:30:37,171
いくつか意識しておくべき
ことがあります

450
00:30:37,371 --> 00:30:39,773
コードをローカライズする際

451
00:30:39,873 --> 00:30:43,877
Intent Definitionファイルも
ローカライズしましょう

452
00:30:43,977 --> 00:30:46,780
文字列がたくさんあります

453
00:30:47,347 --> 00:30:49,817
複数形にも気をつけましょう

454
00:30:49,917 --> 00:30:53,720
英語環境だけでも
ローカライズが必要です

455
00:30:53,854 --> 00:30:57,324
“Order one clam chowder”を

456
00:30:57,424 --> 00:31:00,694
“Order three clam chowders”
にするといったことです

457
00:30:57,424 --> 00:31:00,694
“Order three clam chowders”
にするといったことです

458
00:31:00,894 --> 00:31:05,899
詳細はローカライゼーションの
セッションとラボでご確認を

459
00:31:06,066 --> 00:31:08,502
必要な情報がすべてあります

460
00:31:09,303 --> 00:31:11,972
では 英語に戻ります

461
00:31:14,074 --> 00:31:17,578
設定画面を見ると
ベストプラクティスどおりの

462
00:31:17,678 --> 00:31:21,115
ステキなショートカットが
並んでいます

463
00:31:21,215 --> 00:31:24,751
ここに出ているのは
ユーザのルーティーンや

464
00:31:24,852 --> 00:31:28,522
最近の行動に基づいたものです

465
00:31:29,123 --> 00:31:33,894
デベロッパも ここに
ショートカットを提案できます

466
00:31:34,027 --> 00:31:40,400
ユーザがやっていないことを
提案できるので便利です

467
00:31:40,701 --> 00:31:46,173
例えば 使われていない
音楽のプレイリストがあったら

468
00:31:46,273 --> 00:31:49,343
そのショートカットを
提案できます

469
00:31:49,576 --> 00:31:55,115
そのプレイリストが将来的に
使われる可能性があるからです

470
00:31:56,216 --> 00:32:02,189
本日のスープを注文する
ショートカットもよさそうです

471
00:31:56,216 --> 00:32:02,189
本日のスープを注文する
ショートカットもよさそうです

472
00:32:02,289 --> 00:32:05,092
これまで注文したことがなくても

473
00:32:05,192 --> 00:32:08,295
ユーザは気に入りそうです

474
00:32:08,395 --> 00:32:11,298
おいしくて特別価格ですからね

475
00:32:11,532 --> 00:32:14,768
APIで手順を確認しましょう

476
00:32:15,903 --> 00:32:18,071
Intentを使って

477
00:32:18,238 --> 00:32:20,407
INShortcutを作ります

478
00:32:20,507 --> 00:32:24,078
userActivityでも
INShortcutを作れます

479
00:32:24,278 --> 00:32:28,782
それを提案リストに入れ
INVoiceShortcutCenterへ

480
00:32:28,882 --> 00:32:31,518
setShortcutSuggestionsで
メソッドを設定

481
00:32:32,119 --> 00:32:38,225
これで 私の提案も
一緒に表示されるようになります

482
00:32:38,659 --> 00:32:42,996
ショートカット
アプリケーションにも表示され

483
00:32:43,096 --> 00:32:46,266
カスタムショートカットが
作れます

484
00:32:49,503 --> 00:32:55,709
極上のエクスペリエンスに
ここまで力を入れてきたので

485
00:32:55,809 --> 00:33:00,347
Siriのショートカットを
使ってもらいたいですよね

486
00:32:55,809 --> 00:33:00,347
Siriのショートカットを
使ってもらいたいですよね

487
00:33:00,447 --> 00:33:04,218
アプリケーション内で
ショートカットを出せば

488
00:33:04,318 --> 00:33:08,121
ユーザは すぐに
ショートカットを作れます

489
00:33:09,089 --> 00:33:12,125
例えば スープを注文したら

490
00:33:12,626 --> 00:33:16,563
そのショートカットを
Siriに追加できます

491
00:33:18,298 --> 00:33:20,534
“Siriに追加”をタップすると

492
00:33:20,968 --> 00:33:23,604
システムUIが表示されます 

493
00:33:23,704 --> 00:33:27,808
これを使えば
Siriに追加できます

494
00:33:28,876 --> 00:33:31,111
この時のAPIを見てみましょう

495
00:33:32,212 --> 00:33:36,783
ここでも userActivityから
INShortcutを作成

496
00:33:37,017 --> 00:33:42,422
そして INUIAddVoiceShortcut
ViewControllerを作り

497
00:33:42,723 --> 00:33:45,125
デリゲートを設定して表示

498
00:33:45,592 --> 00:33:47,261
Intentも同じです

499
00:33:47,427 --> 00:33:52,833
userActivityではなく
Intentを使い

500
00:33:53,033 --> 00:33:57,070
viewControllerを作り
デリゲートを設定して表示

501
00:33:57,604 --> 00:34:03,143
こうすると ユーザには
この画面が表示されます

502
00:33:57,604 --> 00:34:03,143
こうすると ユーザには
この画面が表示されます

503
00:34:03,977 --> 00:34:09,616
既存のショートカットの
削除や編集も可能にできます

504
00:34:13,253 --> 00:34:17,190
当社の他のユーザが作った
ショートカットを

505
00:34:17,291 --> 00:34:19,693
取得するためのAPIもあります

506
00:34:19,793 --> 00:34:24,697
例えば 他のユーザが
どのスープについて

507
00:34:24,797 --> 00:34:30,204
ショートカットを作ったのかを
知ることができるのです

508
00:34:30,404 --> 00:34:34,274
クラムチャウダーには
“チャウダータイム”

509
00:34:34,375 --> 00:34:36,877
トマトスープには
“トメイトゥ トマト”

510
00:34:37,643 --> 00:34:38,512
バッチリです

511
00:34:39,646 --> 00:34:44,184
最後に今日学んだことを
振り返りましょう

512
00:34:44,918 --> 00:34:51,091
まず 音声案内での
カスタム応答の大切さを学びました

513
00:34:51,358 --> 00:34:53,960
設定方法も簡単でしたね

514
00:34:55,728 --> 00:34:59,733
カスタムIntents UIによって
エクスペリエンスを

515
00:34:59,833 --> 00:35:04,371
Siriや検索 ロック画面などにも
持ち込めます

516
00:34:59,833 --> 00:35:04,371
Siriや検索 ロック画面などにも
持ち込めます

517
00:35:06,306 --> 00:35:08,375
細かい配慮も大事です

518
00:35:08,475 --> 00:35:11,411
ショートカットに画像を加えたり

519
00:35:11,511 --> 00:35:15,716
引用符を外して
印象を変えたりというものです

520
00:35:15,816 --> 00:35:19,386
また ローカライズも重要です

521
00:35:20,988 --> 00:35:26,493
最後に 各種APIを使い
ユーザが ショートカットを

522
00:35:26,593 --> 00:35:31,732
最適なタイミングで
作成できるようにしました

523
00:35:33,233 --> 00:35:37,538
この内容はdeveloper.apple.comに
すべて載っています

524
00:35:37,638 --> 00:35:42,576
また ショートカット･ラボも
１週間 開催します

525
00:35:42,743 --> 00:35:45,512
このあとは Watchのセッションも
あります

526
00:35:45,612 --> 00:35:49,883
WatchやSiriの文字盤の
ショートカットの解説で

527
00:35:49,983 --> 00:35:54,054
Watch Appなしで使う方法も
説明します

528
00:35:54,154 --> 00:35:56,089
マストウォッチですね

529
00:35:59,827 --> 00:36:04,064
(拍手)

530
00:35:59,827 --> 00:36:04,064
(拍手)

531
00:36:06,166 --> 00:36:11,104
極上のエクスペリエンスの
作り方は分かりましたね

532
00:36:11,205 --> 00:36:13,774
皆さんが何を作るか楽しみです

533
00:36:13,941 --> 00:36:17,377
引き続きWWDCを
お楽しみください

534
00:36:17,478 --> 00:36:22,182
(拍手)