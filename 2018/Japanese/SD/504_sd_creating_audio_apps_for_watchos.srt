
1
00:00:07,140 --> 00:00:16,149
(音楽)

2
00:00:20,821 --> 00:00:27,160
(拍手)

3
00:00:27,327 --> 00:00:31,231
watchOSエンジニアの
ニール･デサイです

4
00:00:31,331 --> 00:00:36,303
オーディオアプリケーションの
作成について お話しします

5
00:00:36,537 --> 00:00:40,941
この１年 温めていた
内容なので楽しみです

6
00:00:41,375 --> 00:00:43,243
では始めましょう

7
00:00:44,845 --> 00:00:47,514
watchOS 4のRadio Appに続き―

8
00:00:47,648 --> 00:00:52,386
watchOS 5では
podcast appを追加しました

9
00:00:52,486 --> 00:00:56,423
Apple Watchがあれば
移動中でも―

10
00:00:56,590 --> 00:00:59,626
手軽に音楽を楽しめます

11
00:01:01,728 --> 00:01:05,399
iPhoneやHomePodでの再生を―

12
00:01:05,498 --> 00:01:10,170
Apple Watchで
リモコン操作もできます

13
00:01:10,270 --> 00:01:15,108
音量の調節も
手元で簡単にできるので―

14
00:01:15,209 --> 00:01:19,613
私も音楽を聴く時など
重宝しています

15
00:01:19,813 --> 00:01:21,081
便利ですよ

16
00:01:21,682 --> 00:01:24,585
本日は Keynoteで
ご覧になった―

17
00:01:24,718 --> 00:01:28,989
Audibleのような
アプリケーションの構築方法や

18
00:01:29,656 --> 00:01:32,292
Pandoraのような体験を
お見せします

19
00:01:32,693 --> 00:01:37,631
また watchOS 5で新規ツールを
使用できるようにします

20
00:01:37,731 --> 00:01:42,035
今日は それらと同じ体験ができる
方法を紹介します

21
00:01:42,135 --> 00:01:44,872
主なテーマは４つです

22
00:01:45,739 --> 00:01:48,542
ネイティブコントロール
について―

23
00:01:48,642 --> 00:01:52,079
アプリケーション内で
直接 埋め込む方法

24
00:01:52,779 --> 00:01:58,051
Apple Watchへの
コンテンツの取り込み方と―

25
00:01:58,185 --> 00:02:00,454
その再生方法

26
00:01:58,185 --> 00:02:00,454
その再生方法

27
00:02:01,622 --> 00:02:06,994
そしてユーザが満足する
オーディオアプリケーションの―

28
00:02:07,127 --> 00:02:09,663
構築方法を説明します

29
00:02:11,765 --> 00:02:13,934
まずネイティブコントロールです

30
00:02:15,903 --> 00:02:21,175
watchOS 5では直接
アプリケーションに埋め込める―

31
00:02:21,875 --> 00:02:25,145
２つのコントロールがあります

32
00:02:25,245 --> 00:02:27,114
１つはNow Playingビュー

33
00:02:27,314 --> 00:02:32,419
自作コンテンツでない場合に
とても便利です

34
00:02:33,287 --> 00:02:35,322
２つ目は“音量調節”

35
00:02:35,422 --> 00:02:40,160
独自のUIを作成して
使うことができます

36
00:02:41,361 --> 00:02:44,164
Now Playingビューは
どのようなものか

37
00:02:44,264 --> 00:02:48,068
ユーザは どうオーディオを
コントロールできるのか―

38
00:02:48,168 --> 00:02:51,238
心配になると思います

39
00:02:52,339 --> 00:02:55,609
ワークアウト Appを使って
例を挙げてみましょう

40
00:02:55,742 --> 00:03:00,881
左にスワイプして
お気に入りの曲を再生します

41
00:02:55,742 --> 00:03:00,881
左にスワイプして
お気に入りの曲を再生します

42
00:03:00,981 --> 00:03:06,053
“アイ･オブ･ザ･タイガー”は
私がよく聞くパワーソングです

43
00:03:06,286 --> 00:03:11,792
スワイプするだけで
ユーザは再生を操作できます

44
00:03:12,192 --> 00:03:15,562
ワークアウト Appを
作成するなら―

45
00:03:15,662 --> 00:03:20,868
このようにNow Playingビューを
埋め込むと便利です

46
00:03:21,902 --> 00:03:25,205
Now Playingビューの
特徴について話しましょう

47
00:03:25,606 --> 00:03:29,576
Digital Crownでも
音量調節できるので―

48
00:03:29,877 --> 00:03:34,248
Now Playingは非スクロール
コントロール内に配置

49
00:03:34,481 --> 00:03:36,817
例えば
このアプリケーションでは―

50
00:03:36,917 --> 00:03:41,688
コントローラを
実際に直接押しました

51
00:03:41,788 --> 00:03:45,659
またはコントローラが
あるページにリロード

52
00:03:45,759 --> 00:03:49,263
もしくはページインタフェースに
配置できます

53
00:03:51,098 --> 00:03:54,601
再生中のオーディオの
ソースが―

54
00:03:54,701 --> 00:03:59,973
iPhoneかApple Watchかを
自動的に判断して―

55
00:04:00,073 --> 00:04:03,510
切り替えてくれるのです

56
00:04:05,112 --> 00:04:06,780
ビューの色ですが―

57
00:04:06,880 --> 00:04:11,718
設定したティントカラーと
同じになります

58
00:04:13,253 --> 00:04:17,291
Interface Builderを
見てみましょう

59
00:04:17,591 --> 00:04:20,761
Xcodeの
オブジェクトライブラリから―

60
00:04:20,861 --> 00:04:25,532
Now Playingビューを
コントローラにドラッグ＆ドロップ

61
00:04:25,632 --> 00:04:29,970
システムが全てを
あなたの代わりに処理します

62
00:04:30,070 --> 00:04:32,439
見てのとおり簡単です

63
00:04:33,407 --> 00:04:37,778
では次に音量調節について
説明します

64
00:04:38,045 --> 00:04:41,148
iPhoneとWatch
どちらの音量も―

65
00:04:41,248 --> 00:04:44,184
これで操作が可能です

66
00:04:44,685 --> 00:04:46,687
Now Playingビューと同じく―

67
00:04:46,787 --> 00:04:52,292
アプリケーションで設定した
ティントカラーが適用されます

68
00:04:54,862 --> 00:05:00,267
ユーザがDigital Crownで
音量を変えた場合は―

69
00:04:54,862 --> 00:05:00,267
ユーザがDigital Crownで
音量を変えた場合は―

70
00:05:00,367 --> 00:05:05,939
表示の色も システムと同じ
緑色に変わります

71
00:05:08,442 --> 00:05:12,479
ボリュームコントロールの
場合は―

72
00:05:12,579 --> 00:05:17,317
“ローカルボリュームの
コントロール”という―

73
00:05:17,417 --> 00:05:19,953
チェックボックスがあります

74
00:05:20,387 --> 00:05:24,591
そのチェックによって
コントロール対象を―

75
00:05:24,892 --> 00:05:30,063
iPhoneかWatchの
どちらか選択できます

76
00:05:30,264 --> 00:05:33,834
コンテンツの扱いに関して―

77
00:05:33,934 --> 00:05:38,305
アプリケーションに
複数のシナリオがあるなら―

78
00:05:38,405 --> 00:05:44,578
設定する際にコントロールの
選択を行えます

79
00:05:45,546 --> 00:05:48,749
以上がシステムコントロールに
ついてです

80
00:05:48,949 --> 00:05:52,953
次はデバイスにコンテンツを
取り込む方法です

81
00:05:55,255 --> 00:05:59,226
私は美術館などの案内用の
アプリケーションを作っています

82
00:05:59,326 --> 00:06:04,498
Watchをタップするだけで
案内を聞けるようにすれば―

83
00:05:59,326 --> 00:06:04,498
Watchをタップするだけで
案内を聞けるようにすれば―

84
00:06:04,598 --> 00:06:09,236
音声ガイドの機器を
持たずに済みます

85
00:06:09,336 --> 00:06:14,041
手首にWatchをつけるだけで
周りのアートを楽しめます

86
00:06:14,942 --> 00:06:19,746
例えば 美術館へ行く途中に
音声案内を―

87
00:06:19,847 --> 00:06:23,517
ダウンロードできるように
したいとします

88
00:06:24,084 --> 00:06:26,920
その場合は
URLSessionを使用して―

89
00:06:27,087 --> 00:06:32,226
サーバからコンテンツを
Watchに取り込みます

90
00:06:33,193 --> 00:06:36,630
では次に
コードについて話しましょう

91
00:06:38,131 --> 00:06:39,433
IBActionが―

92
00:06:39,533 --> 00:06:43,170
インタフェースボタンに
接続しています

93
00:06:43,337 --> 00:06:46,707
タイムアウトの
extendedプロパティは―

94
00:06:46,807 --> 00:06:49,109
trueに設定しました

95
00:06:49,910 --> 00:06:54,414
後で詳しく話しますが
私が言いたいのは―

96
00:06:54,548 --> 00:06:58,552
ユーザ自身がインタラクションを
作成できることです

97
00:06:58,652 --> 00:07:02,356
ユーザは時刻を
確認するだけではありません

98
00:06:58,652 --> 00:07:02,356
ユーザは時刻を
確認するだけではありません

99
00:07:02,523 --> 00:07:05,425
タイムアウトを
拡張しているため―

100
00:07:05,526 --> 00:07:09,363
システムの追加優先を
得ています

101
00:07:09,563 --> 00:07:11,999
後で詳細を説明します

102
00:07:13,200 --> 00:07:16,937
次はバックグラウンド
セッションの使用を―

103
00:07:17,070 --> 00:07:19,606
確認したいと思います

104
00:07:19,706 --> 00:07:24,111
バックグラウンドでも
ダウンロードはできます

105
00:07:24,912 --> 00:07:28,715
そのタスクを適切に
再開できます

106
00:07:29,583 --> 00:07:32,252
このような
エクスペリエンスでは―

107
00:07:32,352 --> 00:07:36,323
進捗状況を示し
エラーを処理する場合もあります

108
00:07:36,456 --> 00:07:38,492
それを見てみましょう

109
00:07:40,294 --> 00:07:42,829
私のDownloadManagerは―

110
00:07:42,930 --> 00:07:47,534
SessionTaskDelegateと
URLSessionDownloadDelegateです

111
00:07:47,634 --> 00:07:51,538
最初の関数では
書き込まれた合計バイト数を―

112
00:07:51,638 --> 00:07:55,542
書き込みが予想されている
合計バイト数で割ります

113
00:07:55,642 --> 00:07:59,746
URLSessionでは常に特定の
ダウンロードの進捗を得られ―

114
00:07:59,847 --> 00:08:01,715
その情報が送信されます

115
00:07:59,847 --> 00:08:01,715
その情報が送信されます

116
00:08:02,816 --> 00:08:07,421
その際にUIのユーザの進捗を
更新できます

117
00:08:09,223 --> 00:08:14,361
ダウンロードが完了すると
もちろんファイルを管理でき―

118
00:08:14,495 --> 00:08:18,599
再生チャンスがあることを
アラートできます

119
00:08:20,801 --> 00:08:25,005
didCompleteWithErrorに
呼び出されることもあるため―

120
00:08:25,105 --> 00:08:29,409
エラーがある場合は
その時点で処理します

121
00:08:29,843 --> 00:08:34,280
URLSessionはWatchに
直接ダウンロードできますが―

122
00:08:34,715 --> 00:08:38,852
コンテンツがiPhoneに
すでに存在する場合もあります

123
00:08:38,952 --> 00:08:44,558
その場合はファイルを直接
Watchに転送できます

124
00:08:48,662 --> 00:08:51,865
転送ファイル APIを
使用しましょう

125
00:08:51,965 --> 00:08:56,303
watchOS 5は
転送の進捗を確認できます

126
00:08:57,404 --> 00:08:58,805
見てみましょう

127
00:08:58,906 --> 00:09:02,476
WCSession FileTransferが
コード上で見られます

128
00:08:58,906 --> 00:09:02,476
WCSession FileTransferが
コード上で見られます

129
00:09:02,576 --> 00:09:08,315
watchOS 5とiOS 12で使用できる
progressプロパティがあります

130
00:09:13,220 --> 00:09:16,890
それにfileTransferを入手でき
進捗を照会

131
00:09:16,990 --> 00:09:19,393
iOSのビューを更新できます

132
00:09:20,527 --> 00:09:25,666
それからオンラインで
サンプルコードを入手できます

133
00:09:25,766 --> 00:09:29,736
SimpleWatch Connectivityの
チェックを推奨します

134
00:09:32,005 --> 00:09:36,143
URLSessionと
Watchの接続性の―

135
00:09:36,276 --> 00:09:39,947
どちらを使用すべきか
疑問にお思いでしょう

136
00:09:40,914 --> 00:09:42,583
URLSessionは―

137
00:09:42,683 --> 00:09:46,320
ユーザがWatchで
開始した場合に使用したいです

138
00:09:46,653 --> 00:09:50,023
クエリがconnectivityプロパティを
待機し―

139
00:09:50,123 --> 00:09:52,726
ネットワーク接続があると
分かります

140
00:09:54,161 --> 00:09:58,365
要求がある場合は
iPhoneを経由して―

141
00:09:58,499 --> 00:10:00,500
プロキシされます

142
00:09:58,499 --> 00:10:00,500
プロキシされます

143
00:10:01,568 --> 00:10:05,205
URLSessionのニュアンスを
知りたい場合は―

144
00:10:05,372 --> 00:10:07,608
オンラインで入手できる―

145
00:10:07,774 --> 00:10:11,578
“Advances in Networking,
Part 2”を参照してください

146
00:10:13,547 --> 00:10:16,049
Watchの接続性では―

147
00:10:16,350 --> 00:10:21,321
ユーザフローが
iPhoneで開始される場合―

148
00:10:21,955 --> 00:10:26,760
サーバから再度要求する
必要がありません

149
00:10:28,896 --> 00:10:33,800
どちらの場合も
設定が必要となるでしょう

150
00:10:34,001 --> 00:10:38,639
ダウンロードが完了しそうな時に
指示してください

151
00:10:39,006 --> 00:10:42,609
Watchが充電器上にある場合は
そうなります

152
00:10:42,709 --> 00:10:45,012
例えば これは自分で行います

153
00:10:45,245 --> 00:10:49,950
Apple Watch appの
アプリケーションのトップには―

154
00:10:50,050 --> 00:10:55,489
転送された曲数を
ユーザに表示しています

155
00:10:55,589 --> 00:10:57,591
充電器上にある場合は―

156
00:10:57,691 --> 00:11:01,962
ユーザに同期することを
指示します

157
00:10:57,691 --> 00:11:01,962
ユーザに同期することを
指示します

158
00:11:03,197 --> 00:11:07,267
コンテンツの取得について
お話ししましたが―

159
00:11:07,367 --> 00:11:09,803
再生について話しましょう

160
00:11:10,437 --> 00:11:13,907
watchOSには
さまざまなツールがあります

161
00:11:14,374 --> 00:11:18,045
いくつかは
WatchKit自体にもあります

162
00:11:19,446 --> 00:11:23,984
MediaPlayerControllerには
オプションなどがあります

163
00:11:24,418 --> 00:11:27,154
WKAudioFileQueuePlayerは―

164
00:11:27,254 --> 00:11:32,426
リストを作るのでコンテンツを
適切に再生します

165
00:11:34,561 --> 00:11:38,532
MediaPlayerControllerは
UIを表示します

166
00:11:38,632 --> 00:11:42,603
あなたに代わって
コントロールしてくれます

167
00:11:42,703 --> 00:11:45,772
ショートフォームの
コンテンツの場合は―

168
00:11:45,873 --> 00:11:48,542
あまり考える必要もありません

169
00:11:50,310 --> 00:11:53,146
ロングフォームの
コンテンツの場合は―

170
00:11:53,247 --> 00:11:55,849
KAudioFIleQueuePlayerが
最高です

171
00:11:55,983 --> 00:11:59,086
ベルトコンベア式の
アプローチで―

172
00:11:59,953 --> 00:12:04,725
アイテムをシステムに引き渡し
再生してくれます

173
00:11:59,953 --> 00:12:04,725
アイテムをシステムに引き渡し
再生してくれます

174
00:12:04,858 --> 00:12:08,862
WKAudioFileQueuePlayerの
特性です

175
00:12:09,596 --> 00:12:13,000
そして
AV Foundationがあります

176
00:12:16,303 --> 00:12:20,474
AVAudioPlayerや
AVAudioEngineなどです

177
00:12:21,208 --> 00:12:24,812
watchOS 5の導入前は
アプリケーションが最前面か―

178
00:12:24,912 --> 00:12:28,882
バックグラウンドモード時に
紐づけられていました

179
00:12:29,383 --> 00:12:34,788
例えば Nike Run Clubは
ランニング中―

180
00:12:34,888 --> 00:12:37,090
ヘッドスペースで―

181
00:12:37,191 --> 00:12:40,794
ガイド付きの瞑想を
再生できました

182
00:12:42,196 --> 00:12:45,766
watchOS 5 導入前
バックグラウンド再生は―

183
00:12:45,933 --> 00:12:49,636
トレーニングアプリケーションで
のみ 可能でした

184
00:12:50,070 --> 00:12:55,209
watchOS 5には
最新の再生モードがあるので―

185
00:12:55,309 --> 00:12:56,944
ワクワクしています

186
00:12:57,778 --> 00:13:01,548
それでは現在の機能について
話しましょう

187
00:12:57,778 --> 00:13:01,548
それでは現在の機能について
話しましょう

188
00:13:01,849 --> 00:13:04,751
ツールキットを
拡大したようなものです

189
00:13:07,554 --> 00:13:09,523
AV Foundationは―

190
00:13:09,623 --> 00:13:12,893
他のモードと
接続する必要はなく―

191
00:13:12,993 --> 00:13:15,896
直接バックグラウンドで
使用できます

192
00:13:16,597 --> 00:13:19,600
我々はユーザが―

193
00:13:20,667 --> 00:13:25,205
別のルートを選択できる機能も
公開しています

194
00:13:26,440 --> 00:13:29,810
またMediaPlayerフレームワークの
情報も公開し―

195
00:13:29,910 --> 00:13:34,047
メディアのリモートコマンドも
処理できます

196
00:13:35,916 --> 00:13:39,019
PodcastやRadio appと
同じように―

197
00:13:39,153 --> 00:13:43,590
ロングフォームのコンテンツは
Bluetooth routesに制限され―

198
00:13:43,690 --> 00:13:47,194
従来同様
スピーカーでは聴けません

199
00:13:49,329 --> 00:13:51,298
ではバックグラウンドでの―

200
00:13:51,431 --> 00:13:55,736
ロングフォームのコンテンツの
再生方法を説明します

201
00:13:57,037 --> 00:14:00,974
info.plistバックグラウンドモード
にオーディオを追加

202
00:13:57,037 --> 00:14:00,974
info.plistバックグラウンドモード
にオーディオを追加

203
00:14:03,076 --> 00:14:05,212
それからセッションを設定し―

204
00:14:05,312 --> 00:14:09,917
システムにバックグラウンドで
再生することを伝えます

205
00:14:11,451 --> 00:14:14,922
別のルートにしたい場合も
あるでしょう

206
00:14:16,056 --> 00:14:18,025
その場合は―

207
00:14:18,592 --> 00:14:23,263
再生セッションの途中で
適切に処理するだけです

208
00:14:23,864 --> 00:14:27,668
それでは もう少し
細分化してみましょう

209
00:14:29,369 --> 00:14:33,907
Xcodeでバックグラウンドモードの
スイッチをオン

210
00:14:34,007 --> 00:14:38,445
オーディオはオフにし
次のステップに進みます

211
00:14:40,647 --> 00:14:42,049
AVAudioSessionで―

212
00:14:42,149 --> 00:14:46,620
routeSharingPolicyを
ロングフォームに設定します

213
00:14:47,955 --> 00:14:53,760
それから AVAudioSessionで
完了メソッドを呼び出します

214
00:14:53,894 --> 00:14:56,630
そして再生を呼び出します

215
00:14:57,164 --> 00:15:00,167
最初に有効化関数を
呼び出し―

216
00:14:57,164 --> 00:15:00,167
最初に有効化関数を
呼び出し―

217
00:15:00,467 --> 00:15:03,504
作業が完了するまでに―

218
00:15:03,604 --> 00:15:07,141
ルートピッカーが表示されます

219
00:15:08,675 --> 00:15:11,945
これが
ルートピッカーの様子です

220
00:15:12,045 --> 00:15:17,618
どのヘッドフォンルートを
選択しても―

221
00:15:17,718 --> 00:15:20,020
再生できます

222
00:15:21,588 --> 00:15:23,757
もう少し話しましょう

223
00:15:23,891 --> 00:15:27,828
次の手順を
再生のたびに行います

224
00:15:28,362 --> 00:15:31,532
ルートピッカーを呼び出して
表示する―

225
00:15:32,132 --> 00:15:36,904
非同期アクティブ化関数を
呼び出します

226
00:15:37,104 --> 00:15:40,073
完了に戻るので処理すると
再生です

227
00:15:40,174 --> 00:15:45,379
このように適切なルートで
再生できるようにします

228
00:15:46,713 --> 00:15:49,416
それではセッションを
設定してみましょう

229
00:15:49,750 --> 00:15:54,488
AVAudioSessionで
カテゴリを設定して再生し―

230
00:15:54,721 --> 00:15:57,024
モードをデフォルトに
設定します

231
00:15:57,157 --> 00:16:01,461
ルート共有ポリシーは
ロングフォームに設定すること

232
00:15:57,157 --> 00:16:01,461
ルート共有ポリシーは
ロングフォームに設定すること

233
00:16:01,862 --> 00:16:04,965
次にルートピッカーを
表示するセッションを―

234
00:16:05,065 --> 00:16:09,236
アクティブ化してから
適切に再生を呼び出します

235
00:16:10,037 --> 00:16:13,273
ここで
そのルートピッカーに―

236
00:16:13,373 --> 00:16:15,876
２つのルートを呼び出します

237
00:16:16,610 --> 00:16:19,713
１つはW1ルートと言われる―

238
00:16:19,813 --> 00:16:22,449
Appleワイヤレスチップベースの
ルートです

239
00:16:22,583 --> 00:16:26,253
AirPodsまたは
Beats Studio Wirelessです

240
00:16:26,453 --> 00:16:29,189
それと通常の
Bluetooth headphonesルートです

241
00:16:29,556 --> 00:16:34,728
ルートピッカーとは
区別することが重要です

242
00:16:37,130 --> 00:16:40,067
アクティブな
接続ルートがある場合は―

243
00:16:40,167 --> 00:16:43,470
ルートピッカーが
そのルートを選択します

244
00:16:43,637 --> 00:16:46,807
優れているのは
表示されない点で―

245
00:16:46,907 --> 00:16:50,277
完了すると直ちに
コールバックされます

246
00:16:51,879 --> 00:16:56,750
アクティブなW1ルートがあっても
iPhoneを使用中の場合は―

247
00:16:57,151 --> 00:17:01,555
システムがそのルートを取得し
Watchに送信します

248
00:16:57,151 --> 00:17:01,555
システムがそのルートを取得し
Watchに送信します

249
00:17:02,489 --> 00:17:07,426
iPhoneに優先度がある場合は
そうなりません

250
00:17:07,794 --> 00:17:11,464
例えば 電話で
話し中だとしましょう

251
00:17:11,565 --> 00:17:17,037
その場合は電話の方が重要なので
そのルートは取らないのです

252
00:17:18,939 --> 00:17:23,176
ルートがない場合は
ルートピッカーが表示されます

253
00:17:24,845 --> 00:17:28,916
では どのように
再生させるかについて―

254
00:17:29,016 --> 00:17:30,684
話しましょう

255
00:17:31,151 --> 00:17:34,855
AVAudioPlayerと
AVAudioEngineを使用します

256
00:17:34,988 --> 00:17:38,125
さまざまなフォーマットが
あります

257
00:17:38,859 --> 00:17:43,430
これらのクラスを使用する
iOSコードがある場合―

258
00:17:43,530 --> 00:17:48,202
iOSとWatchOSに
共通のフレームワークがあります

259
00:17:49,303 --> 00:17:52,773
AVAudioEngineの場合は―

260
00:17:52,973 --> 00:17:57,744
AVAudioPlayernodeと連動して
DRMコンテンツを再生できます

261
00:17:57,844 --> 00:18:03,717
DRMコンテンツを再生し
自分で解読し再生できるのです

262
00:17:57,844 --> 00:18:03,717
DRMコンテンツを再生し
自分で解読し再生できるのです

263
00:18:05,052 --> 00:18:10,557
watchOSにとって重要なのは
デバイス自体のパワーで―

264
00:18:10,657 --> 00:18:13,260
オーディオを再生する場合は―

265
00:18:13,360 --> 00:18:16,997
絶対に必要な場合のみ
再生します

266
00:18:17,231 --> 00:18:19,032
AVAudioEngineの場合は―

267
00:18:19,132 --> 00:18:23,203
autoShutdownEnabledプロパティが
有効になっています

268
00:18:23,370 --> 00:18:26,707
そのためアクティブノードが
ない場合は―

269
00:18:26,874 --> 00:18:31,278
必要に応じて
自動的にパワーダウンします

270
00:18:33,580 --> 00:18:35,249
再生は以上です

271
00:18:36,350 --> 00:18:38,986
次はMediaPlayerフレームワークに
ついてです

272
00:18:39,086 --> 00:18:44,391
Now Playing情報を
システムに提供します

273
00:18:45,859 --> 00:18:51,198
再生中のシステムの概念である
Now Playing UIが―

274
00:18:51,298 --> 00:18:54,368
提供する情報に基づき
更新されます

275
00:18:54,501 --> 00:18:58,772
Now Playing appや
内部のアプリケーション

276
00:18:59,072 --> 00:19:05,212
またはビューが埋め込まれている
サードパーティAppも表示されます

277
00:18:59,072 --> 00:19:05,212
またはビューが埋め込まれている
サードパーティAppも表示されます

278
00:19:06,280 --> 00:19:09,683
MediaPlayerフレームワークを
使用して―

279
00:19:09,783 --> 00:19:14,655
例えば リモートコマンドや
イベントを処理します

280
00:19:15,789 --> 00:19:19,359
どのように情報を提供するか
見てみましょう

281
00:19:23,397 --> 00:19:28,402
MPNowPlayingInfoCenterを
取り込んだとしましょう

282
00:19:28,535 --> 00:19:31,472
次にnowPlayingInfoを
セットアップ

283
00:19:33,540 --> 00:19:37,611
次にMPMediaItemArtworkを
設定します

284
00:19:37,711 --> 00:19:41,115
現在はシード１では
使用できません

285
00:19:41,315 --> 00:19:43,951
この場合
提供するアートワークは―

286
00:19:44,051 --> 00:19:46,987
Siriの文字盤に
表示されます

287
00:19:48,722 --> 00:19:52,459
ここではtitle album artworkを
セットアップし―

288
00:19:52,726 --> 00:19:55,996
nowPlayingInfoCenterに
設定します

289
00:19:56,597 --> 00:19:58,599
こうすることで―

290
00:19:59,233 --> 00:20:02,803
データがアプリケーションに
表示されます

291
00:19:59,233 --> 00:20:02,803
データがアプリケーションに
表示されます

292
00:20:02,903 --> 00:20:05,038
これが実際の
NowPlaying appです

293
00:20:05,139 --> 00:20:10,377
私が聴いている曲を
いくつかアップしました

294
00:20:11,778 --> 00:20:16,216
アップ時はコンプリケーションも
更新されます

295
00:20:16,483 --> 00:20:19,820
この場合は曲名が
下部に表示されています

296
00:20:21,188 --> 00:20:22,990
メディアリモートコマンドでも

297
00:20:23,090 --> 00:20:26,293
MediaPlayerフレームワークを
使用しますが―

298
00:20:26,393 --> 00:20:29,963
watchOSでは希望する
コマンドを処理できます

299
00:20:31,632 --> 00:20:33,500
コードを見てみましょう

300
00:20:33,767 --> 00:20:36,303
MPRemoteCommandCenterを
取り込み―

301
00:20:36,703 --> 00:20:39,106
Next Trackの代わりに―

302
00:20:39,206 --> 00:20:42,910
ユーザがSkip Forwardが
できる方法です

303
00:20:43,577 --> 00:20:47,147
この関数は
SkipForwardCommandを―

304
00:20:47,247 --> 00:20:50,150
デフォルトで
有効化するものです

305
00:20:50,784 --> 00:20:54,454
SkipForwardCommandに
推奨間隔を設定

306
00:20:54,588 --> 00:20:58,425
次にターゲットとセレクタを
追加し―

307
00:20:58,525 --> 00:21:00,460
コマンドを有効化します

308
00:20:58,525 --> 00:21:00,460
コマンドを有効化します

309
00:21:02,095 --> 00:21:06,066
リモートコマンドについて
もっと知りたい場合は―

310
00:21:06,200 --> 00:21:11,605
“MPRemoteCommandSample”で
チェックすることをお勧めします

311
00:21:11,839 --> 00:21:15,275
このように
推奨間隔を設定する場合は―

312
00:21:15,542 --> 00:21:19,046
アプリケーションが
適切に調整されます

313
00:21:19,146 --> 00:21:21,148
Now Playing UIは―

314
00:21:21,281 --> 00:21:26,753
いつでも前後15秒のスキップが
表示されています

315
00:21:29,423 --> 00:21:33,260
以上が再生に関する話でした

316
00:21:33,594 --> 00:21:37,231
次はオーディオ
エクスペリエンスについてです

317
00:21:42,436 --> 00:21:46,073
話したいことが４つあります

318
00:21:46,540 --> 00:21:49,977
１つはアプリケーションの
自動起動機能です

319
00:21:50,110 --> 00:21:54,448
それから最前面の
アプリケーション状態

320
00:21:54,848 --> 00:21:57,484
インタラクティブ通知

321
00:21:57,584 --> 00:22:00,254
そしてSiriショートカットです

322
00:21:57,584 --> 00:22:00,254
そしてSiriショートカットです

323
00:22:03,290 --> 00:22:07,761
Watchでの再生について
話してきましたが―

324
00:22:08,128 --> 00:22:13,000
リモートコントロールについて
再度 話したいと思います

325
00:22:15,002 --> 00:22:18,372
iPhoneでApple Musicを
再生中だとして―

326
00:22:18,739 --> 00:22:22,743
Watchで「再生中」画面にも
自動再生できます

327
00:22:22,876 --> 00:22:25,279
私は この機能が好きです

328
00:22:25,379 --> 00:22:29,216
再生を簡単に
コントロールできます

329
00:22:29,349 --> 00:22:30,851
カッコいいです

330
00:22:31,418 --> 00:22:32,419
そして―

331
00:22:33,153 --> 00:22:37,691
iPhoneで再生させる
アプリケーションの場合―

332
00:22:37,791 --> 00:22:40,928
Watch上で
自動的に起動されます

333
00:22:45,265 --> 00:22:48,001
この自動起動機能を
呼び出します

334
00:22:48,268 --> 00:22:51,505
iPhone上の「再生中」画面で
セッションが生じるたび―

335
00:22:51,672 --> 00:22:55,309
Apple Watchアプリケーションが
表示されます

336
00:22:55,976 --> 00:22:59,847
そしてセッション中は
最前面に留まらせます

337
00:22:59,947 --> 00:23:02,749
iPhoneでコンテンツを
聴いている限り―

338
00:22:59,947 --> 00:23:02,749
iPhoneでコンテンツを
聴いている限り―

339
00:23:02,849 --> 00:23:07,454
アプリケーションは
最前面に留まります

340
00:23:08,722 --> 00:23:10,757
WatchOS 5では―

341
00:23:10,858 --> 00:23:13,594
Now Playing session APIが
追加されています

342
00:23:13,794 --> 00:23:18,365
iPhoneで「再生中」画面が
ローンチされると通知が届くのです

343
00:23:18,465 --> 00:23:21,735
ユーザを直接
適切なビューに導きます

344
00:23:22,736 --> 00:23:23,670
そのために―

345
00:23:23,771 --> 00:23:28,675
RemoteNowPlayingActivityの
処理をします

346
00:23:30,210 --> 00:23:33,347
では どう使うか
見てみましょう

347
00:23:35,983 --> 00:23:38,585
エクステンションデリゲートに―

348
00:23:39,052 --> 00:23:43,056
myhandleRemoteNowPlayingActivity
を実装

349
00:23:43,257 --> 00:23:47,227
最初にチェックするのは
ユーザがどこにいるかです

350
00:23:47,394 --> 00:23:51,365
インタフェースコントローラを
取り込むと―

351
00:23:51,465 --> 00:23:55,269
ユーザの位置を
チェックできます

352
00:23:55,369 --> 00:23:58,939
Now Playing UIにいれば
最高です

353
00:23:59,873 --> 00:24:04,111
そうでない場合は
ビューにリロードします

354
00:23:59,873 --> 00:24:04,111
そうでない場合は
ビューにリロードします

355
00:24:04,211 --> 00:24:07,147
ただ手首を上げるだけで―

356
00:24:07,247 --> 00:24:11,351
リモートコントロールを
確認できるのです

357
00:24:16,290 --> 00:24:21,995
ユーザによっては この機能が
意味のない場合があります

358
00:24:22,463 --> 00:24:25,199
正しい決断をしてください

359
00:24:25,299 --> 00:24:28,735
電話と無関係な
アプリケーションなら―

360
00:24:28,836 --> 00:24:32,506
オプトアウトして
適切に使用することです

361
00:24:32,739 --> 00:24:38,045
WK ExtentionのInfo.plistにある
Auto Launch機能の―

362
00:24:38,145 --> 00:24:41,615
オプトアウトを使用します

363
00:24:43,484 --> 00:24:47,454
オプトアウトする場合は
「再生中」画面が表示されます

364
00:24:51,992 --> 00:24:57,231
では最前面アプリケーションに
ついて復習をしましょう

365
00:24:57,965 --> 00:25:02,236
アプリケーションを起動し
今 見ています

366
00:24:57,965 --> 00:25:02,236
アプリケーションを起動し
今 見ています

367
00:25:02,402 --> 00:25:06,340
最前面で
アクティブと見なされます

368
00:25:06,740 --> 00:25:08,776
手首を下げた場合―

369
00:25:09,476 --> 00:25:12,880
アプリケーションは
最前面ではなくなりますが

370
00:25:12,980 --> 00:25:16,250
手首を上げれば
最前面で見られます

371
00:25:17,384 --> 00:25:20,888
下げた場合は
バックグラウンドにあります

372
00:25:24,358 --> 00:25:28,929
最前面の状態でシステムから
拡張機能を取得します

373
00:25:30,831 --> 00:25:33,634
iPhoneからの
バックグラウンド転送

374
00:25:33,734 --> 00:25:36,537
コンテンツを
Watchに転送します

375
00:25:36,637 --> 00:25:38,605
転送が完了すると―

376
00:25:38,705 --> 00:25:43,744
直接 アプリケーションを
呼び出して再開されます

377
00:25:44,344 --> 00:25:47,347
URLSessionの場合も同じです

378
00:25:47,481 --> 00:25:52,052
バックグラウンドで
ダウンロードが完了すると―

379
00:25:52,186 --> 00:25:56,723
アプリケーションが
自動的に呼び出されます

380
00:25:59,059 --> 00:26:02,563
通知が表示されるのですが―

381
00:25:59,059 --> 00:26:02,563
通知が表示されるのですが―

382
00:26:02,663 --> 00:26:08,035
それを どのように処理するかを
決定できます

383
00:26:08,168 --> 00:26:12,806
ユーザに通知を
表示したい場合もあるでしょう

384
00:26:13,207 --> 00:26:16,043
その決定ができるのです

385
00:26:17,478 --> 00:26:20,881
ハプティクスも利用できます

386
00:26:22,649 --> 00:26:25,352
最前面について
もっと知りたい場合は

387
00:26:25,485 --> 00:26:27,020
去年の講演ですが―

388
00:26:27,120 --> 00:26:29,990
“The Life of a watchOS App”
がお勧めです

389
00:26:30,090 --> 00:26:32,893
話者は誰かお分かりですね

390
00:26:35,162 --> 00:26:38,398
２分間 最前面に
留まりますが―

391
00:26:38,499 --> 00:26:42,302
私が拡張したのを
覚えていますか？

392
00:26:42,402 --> 00:26:45,772
デフォルトで
８分まで拡張できます

393
00:26:45,939 --> 00:26:50,177
コンテンツを
ダウンロードする時には―

394
00:26:50,310 --> 00:26:52,479
便利でしょう

395
00:27:00,120 --> 00:27:02,689
オーディオを再生中の場合は―

396
00:27:02,790 --> 00:27:06,860
iPhoneで
リモート操作するように―

397
00:27:06,960 --> 00:27:11,532
アプリケーションは
最前面に保持されます

398
00:27:12,232 --> 00:27:16,770
ユーザがサイトから移動して
最前面から離れても―

399
00:27:16,937 --> 00:27:20,440
バックグラウンドで
正しく再生されます

400
00:27:21,241 --> 00:27:25,012
その場合もイベントは
全て処理できます

401
00:27:26,113 --> 00:27:27,114
いいですね

402
00:27:28,849 --> 00:27:32,052
最前面状態にいるので―

403
00:27:32,886 --> 00:27:35,856
通知と正しく統合できます

404
00:27:35,956 --> 00:27:38,759
例えば ダウンロードが
完了すると―

405
00:27:38,859 --> 00:27:41,862
コンテンツを
ローカル通知で使用できます

406
00:27:41,962 --> 00:27:45,099
プライマリアクションとして
再生する場合―

407
00:27:45,465 --> 00:27:48,435
インタラクション通知を
使用すると―

408
00:27:48,569 --> 00:27:52,072
ユーザは
再生を正しく構成できます

409
00:27:52,172 --> 00:27:58,278
プライマリアクションとして
再生するよう呼び出せ―

410
00:27:58,378 --> 00:28:00,781
直ちに再生できるのです

411
00:27:58,378 --> 00:28:00,781
直ちに再生できるのです

412
00:28:01,448 --> 00:28:02,816
例えば―

413
00:28:02,916 --> 00:28:07,120
アート関係のコンテンツを
視聴しようとします

414
00:28:07,221 --> 00:28:12,159
再生を直ちに呼び出せますし
そのスピードは調整できます

415
00:28:12,526 --> 00:28:16,763
素晴らしいコンテンツを
適切な速度で再生します

416
00:28:18,599 --> 00:28:21,401
通知について
もっと知りたければ―

417
00:28:21,502 --> 00:28:25,873
“What's New in watchOS”が
オンラインで視聴できます

418
00:28:25,973 --> 00:28:30,544
インタラクティブ通知について
もっと知ることができます

419
00:28:32,179 --> 00:28:34,681
このコードを覚えていますか？

420
00:28:34,848 --> 00:28:38,485
ユーザに
再生チャンスの警告通知を―

421
00:28:38,585 --> 00:28:41,088
以前 投稿したものです

422
00:28:41,655 --> 00:28:44,057
アプリケーションは
最前面にありました

423
00:28:45,125 --> 00:28:51,665
ユーザ通知の最前面から
通知を受けると呼び出され―

424
00:28:51,765 --> 00:28:55,335
CompletionHandlerで通知します

425
00:28:56,537 --> 00:29:00,841
実際にその通知を投稿するか
どうかを決定できます

426
00:28:56,537 --> 00:29:00,841
実際にその通知を投稿するか
どうかを決定できます

427
00:29:01,074 --> 00:29:04,845
アプリケーションが
最前面にあるので―

428
00:29:05,012 --> 00:29:09,817
新しいコンテンツがあることが
ユーザに知らされます

429
00:29:10,217 --> 00:29:13,587
前画面通知の
さらなる情報は―

430
00:29:13,687 --> 00:29:15,856
“The Life of a watchOS App”で
確認を

431
00:29:16,423 --> 00:29:21,228
インタラクティブ通知と前画面の
使用法を話しましたが―

432
00:29:21,495 --> 00:29:24,965
Siriの文字盤も
紹介いたします

433
00:29:25,632 --> 00:29:28,402
Siriの文字盤上で―

434
00:29:28,502 --> 00:29:32,406
オーディオを再生する提案を
できます

435
00:29:32,840 --> 00:29:37,611
例えば podcastの
次のエピソードや―

436
00:29:37,711 --> 00:29:40,581
同期したばかりの音楽です

437
00:29:44,184 --> 00:29:47,721
Audibleは同じ体験を構築し―

438
00:29:47,821 --> 00:29:52,526
Siriの文字盤から
直接取り込んで―

439
00:29:52,626 --> 00:29:55,229
オーディオブックを再生できます

440
00:29:57,264 --> 00:29:59,933
ユーザインタラクションが
発生したら―

441
00:30:00,033 --> 00:30:03,370
INMediaPlaybackIntentを
与えてください

442
00:30:03,504 --> 00:30:07,307
ユーザが通常Watchで
どんなことをしているか―

443
00:30:07,407 --> 00:30:11,044
知ることができるように
することで―

444
00:30:11,145 --> 00:30:14,548
Siriの文字盤が
有意義になります

445
00:30:17,184 --> 00:30:20,487
また Siri内で使用できる―

446
00:30:20,754 --> 00:30:25,092
適切なショートカットフレーズを
考えます

447
00:30:25,192 --> 00:30:29,730
ユーザを直接
アプリケーションに導き―

448
00:30:29,830 --> 00:30:31,999
再生できるようにします

449
00:30:34,601 --> 00:30:38,305
Siriの文字盤は
デザインが素晴らしいです

450
00:30:38,438 --> 00:30:42,743
近々公開される展示など
情報が一目で分かります

451
00:30:43,143 --> 00:30:46,914
またはAudibleのように
タップ可能なアクションで―

452
00:30:47,080 --> 00:30:51,218
オーディオツアーを
再生することができます

453
00:30:53,587 --> 00:30:58,592
ショートカットについては
INMediaPlaybackIntentを送信

454
00:30:58,759 --> 00:31:03,197
ショートカットAPIを使い
Siriの文字盤に表示します

455
00:30:58,759 --> 00:31:03,197
ショートカットAPIを使い
Siriの文字盤に表示します

456
00:31:03,297 --> 00:31:06,133
ショートカットフレーズを
考えてください

457
00:31:06,700 --> 00:31:11,171
これらについては
すばらしい講演がありますので

458
00:31:11,271 --> 00:31:13,540
“Shortcuts on the Siri
Watch Face”を是非ご覧ください

459
00:31:13,640 --> 00:31:17,077
私も視聴し
多くのことを学べました

460
00:31:19,479 --> 00:31:22,683
まとめると
アプリケーション内から―

461
00:31:22,783 --> 00:31:25,919
ネイティブコントロールを
直接 埋め込めます

462
00:31:26,186 --> 00:31:29,523
必要なものは
バックグラウンドで再生でき―

463
00:31:29,656 --> 00:31:32,426
必要なコマンドを処理できます

464
00:31:34,261 --> 00:31:40,467
ユーザに転送の進捗を
伝えるいい方法があります

465
00:31:41,768 --> 00:31:48,008
さらに情報が必要なら
オンラインで参照してください

466
00:31:49,209 --> 00:31:52,913
皆さんのアプリケーションが
楽しみです

467
00:31:53,080 --> 00:31:57,084
どうぞ
WWDCを楽しんでください

468
00:31:57,184 --> 00:31:58,318
以上です

469
00:31:58,752 --> 00:32:01,288
(拍手)